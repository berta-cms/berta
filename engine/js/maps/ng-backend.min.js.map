{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","fetch","credentials","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_TAGS","UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRIES","ORDER_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRY_GALLERY","ORDER_SECTION_ENTRY_GALLERY","INIT_DELETE_ENTRY_GALLERY_IMAGE","DELETE_ENTRY_GALLERY_IMAGE","INIT_DELETE_SECTION_ENTRY","DELETE_SECTION_ENTRY","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","length","i","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","indexOf","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","updateSectionTags","sectionTags","section_tags","site_old_name","initUpdateSectionEntry","sectionEntries","updateSectionEntry","section_order","has_direct_content","initOrderSectionEntries","entryId","orderSectionEntries","initDeleteSectionEntry","deleteSectionEntry","entry_count","initOrderSectionEntryGallery","entryGallery","orderSectionEntryGallery","initDeleteEntryGalleryImage","deleteEntryGalleryImage","concat","siteName","sectionName","index","findIndex","entry","entry_id","entry_order","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function (window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS: 'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    UPDATE_SECTION_TAGS: 'UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRIES: 'INIT_ORDER_SECTION_ENTRIES',\n    ORDER_SECTION_ENTRIES: 'ORDER_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRY_GALLERY: 'INIT_ORDER_SECTION_ENTRY_GALLERY',\n    ORDER_SECTION_ENTRY_GALLERY: 'ORDER_SECTION_ENTRY_GALLERY',\n    INIT_DELETE_ENTRY_GALLERY_IMAGE: 'INIT_DELETE_ENTRY_GALLERY_IMAGE',\n    DELETE_ENTRY_GALLERY_IMAGE: 'DELETE_ENTRY_GALLERY_IMAGE',\n    INIT_DELETE_SECTION_ENTRY: 'INIT_DELETE_SECTION_ENTRY',\n    DELETE_SECTION_ENTRY: 'DELETE_SECTION_ENTRY',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function (data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function (sites, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITES\n        });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function (site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          name: name,\n          title: title\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function (resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function (path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, {\n          path: path\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function (site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTIONS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          sections: sections\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({\n                site: site,\n                sections: sections\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function (site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          section: section\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function (site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function (site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSiteSectionBackgrounds` is called after delete which updates state\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function (state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3); // \"title\" or \"@attributes/published\"\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n            // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    updateSectionTags: function (data) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function (state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                    return section.merge(action.data.tags.tags);\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n\n              if (response.section) {\n                dispatch({\n                  type: ActionTypes.INIT_UPDATE_SITE_SECTION\n                });\n\n                dispatch(Actions.updateSiteSection({\n                  'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                  'section': response.section,\n                  'value': response.has_direct_content\n                }));\n              }\n\n              if (response.tags) {\n                dispatch(Actions.updateSectionTags(response));\n              }\n            }\n            if (onComplete) {\n              onComplete(response);\n            }\n          });\n      };\n    },\n\n\n    updateSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initOrderSectionEntries: function (site, section, entryId, value) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntries(response));\n            }\n          });\n      };\n    },\n\n    orderSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initDeleteSectionEntry: function (site, section, entryId, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRY\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSectionEntry(response));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/entry_count',\n                'section': response.section,\n                'value': response.entry_count\n              }));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                'section': response.section,\n                'value': response.has_direct_content\n              }));\n\n              dispatch(Actions.updateSectionTags(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initOrderSectionEntryGallery: function (site, section, entryId, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRY_GALLERY\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntryGallery(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSectionEntryGallery: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRY_GALLERY,\n        resp: resp\n      };\n    },\n\n\n    initDeleteEntryGalleryImage: function (site, section, entryId, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_ENTRY_GALLERY_IMAGE\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteEntryGalleryImage(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSectionEntryGallery` is called after delete which updates state\n    deleteEntryGalleryImage: function (resp) {\n      return {\n        type: ActionTypes.DELETE_ENTRY_GALLERY_IMAGE,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function (state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var siteName = path[0] === '0' ? '' : path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index],\n            state.getIn([siteName, index]).merge(action.resp.entry)\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_name) {\n                  return entry.set('order', action.data.order.indexOf(entry.get('id')));\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRY:\n          site_name = action.resp.site_name === '0' ? '' : action.resp.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.filter(function (entry) {\n                return !(entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id);\n              }).map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section_name && entry.get('order') > action.resp.entry_order) {\n                  return entry.set('order', entry.get('order') - 1);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRY_GALLERY:\n          return state.map(function (site, site_name) {\n            if (site_name === action.resp.site) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section && entry.get('id') === action.resp.entry_id) {\n                  return entry\n                    .set('mediafolder', action.resp.mediafolder)\n                    .setIn(['mediaCacheData', 'file'], action.resp.files);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}