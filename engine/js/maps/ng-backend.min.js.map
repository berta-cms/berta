{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","fetch","credentials","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","length","i","createSiteSection","tags","section","addSiteSectionsTags","site_name","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","indexOf","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","sectionTags","section_tags","sectionEntries","section_entries","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function(window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS:'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone related entries\n\n              dispatch(Actions.createSite(response.site));\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function(data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function(sites, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function(site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function(site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function(resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function(path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function(site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTIONS });\n\n        sync(window.Berta.urls.siteSections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function(site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function(site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function(site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function(state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          site_name = action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    //\n  });\n\n})(window);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function(state, action) {\n      // var entry, entries = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_entries);\n\n        // case ActionTypes.SECTION_CREATED:\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}