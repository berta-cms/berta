{"version":3,"sources":["utils.js","constants.js","ActionTypes.js","StateActions.js","SiteActions.js","SettingsActions.js","SiteTemplateSettingsActions.js","SectionActions.js","EntryActions.js","TagActions.js","middleware.js","sites.js","site_settings.js","site_template_settings.js","template_settings.js","sections.js","entries.js","tags.js","index.js"],"names":["window","document","sync","url","data","method","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","log","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","redux_store","getState","template_settings","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","index","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","API_ROOT","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","CREATE_SITE","SITE_CREATED","UPDATE_SITE","SITE_UPDATED","DELETE_SITE","SITE_DELETED","ORDER_SITES","UPDATE_SETTINGS","SETTINGS_UPDATED","SETTINGS_CREATED","DELETE_SITE_SETTINGS","SITE_SETTINGS_DELETED","RENAME_SETTINGS_SITENAME","UPDATE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_UPDATED","TEMPLATE_SETTINGS_CREATED","DELETE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_DELETED","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","CREATE_SECTION","SECTION_CREATED","UPDATE_SECTION","RESET_SECTION","SECTION_UPDATED","DELETE_SECTION","DELETE_SITE_SECTIONS","SECTION_DELETED","ORDER_SECTIONS","RENAME_SECTIONS_SITENAME","SECTION_BG_DELETE","SECTION_BG_ORDER","SECTION_BG_ORDERED","UPDATE_TAGS","RENAME_SECTION_TAGS","DELETE_SECTION_TAGS","RENAME_TAGS_SITENAME","Actions","assign","meta","remote","dispatch","setState","state","createSite","onComplete","getStore","error_message","siteCreated","settings","settingsCreated","sections","length","i","sectionCreated","siteTemplateSettings","templateSettingsCreated","renameSite","path","value","order","parseInt","sites","find","siteUpdated","renameSectionsSitename","site_name","renameSettingsSitename","renameSiteTemplateSettingsSitename","renameTagsSitename","updateSite","resp","deleteSite","encodeURIComponent","siteDeleted","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","orderSites","updateSettings","settingsUpdated","updateSiteTemplateSettings","siteTemplateSettingsUpdated","createSection","title","renameSection","sectionUpdated","renameSectionTags","section_name","section","section_old_name","old_name","updateSection","resetSection","deleteSection","sectionDeleted","deleteSectionTags","orderSections","sectionBgDelete","file","sectionBgOrder","files","sectionBgOrdered","checkStatus","status","Error","statusText","redux_middleware","store","next","action","reducers","Immutable","Map","fromJS","set","size","prop","map","getIn","setIn","filter","new_order","indexOf","site_settings","mapKeys","k","site_template_settings","merge","deleteIn","mediafolder","entries","tags","root_reducer","Redux","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReduxThunk"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["(function(window, document) {\n  'use strict';\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        console.log('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().template_settings.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n        templates: {}\n      };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n            templateList.querySelectorAll('script'),\n            0\n          );\n\n      templates.forEach(function(template, index){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<\\%=([^%>]+)\\%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener(\"DOMContentLoaded\", completed);\n            window.removeEventListener(\"load\", completed);\n          } else {\n            document.detachEvent(\"onreadystatechange\", completed);\n            window.detachEvent(\"onload\", completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === \"load\" || document.readyState === \"complete\")) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === \"complete\") {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener(\"DOMContentLoaded\", completed);\n      window.addEventListener(\"load\", completed);\n    } else {\n      document.attachEvent(\"onreadystatechange\", completed);\n      window.attachEvent(\"onload\", completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) {}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n              top.doScroll(\"left\");\n          } catch(e) {\n              return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.API_ROOT = '/_api/v1/';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: editables.xEditable,\n    longtext: editables.xEditableTA,\n    richtext: editables.xEditableMCESimple,\n    color: editables.xEditableColor,\n    image: editables.xEditableImage,\n    icon: editables.xEditableICO,\n    select: editables.xEditableSelectRC,\n    fontselect: editables.xEditableFontSelect\n  };\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    CREATE_SITE: 'CREATE_SITE',\n    SITE_CREATED: 'SITE_CREATED',\n    UPDATE_SITE: 'UPDATE_SITE',\n    SITE_UPDATED: 'SITE_UPDATED',\n    DELETE_SITE: 'DELETE_SITE',\n    SITE_DELETED: 'SITE_DELETED',\n    ORDER_SITES: 'ORDER_SITES',\n\n    UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n    SETTINGS_UPDATED: 'SETTINGS_UPDATED',\n    SETTINGS_CREATED: 'SETTINGS_CREATED',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n    SITE_SETTINGS_DELETED: 'SITE_SETTINGS_DELETED',\n    RENAME_SETTINGS_SITENAME: 'RENAME_SETTINGS_SITENAME',\n\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_UPDATED: 'SITE_TEMPLATE_SETTINGS_UPDATED',\n    TEMPLATE_SETTINGS_CREATED: 'TEMPLATE_SETTINGS_CREATED',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_DELETED: 'SITE_TEMPLATE_SETTINGS_DELETED',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n\n    CREATE_SECTION: 'CREATE_SECTION',\n    SECTION_CREATED: 'SECTION_CREATED',\n    UPDATE_SECTION: 'UPDATE_SECTION',\n    RESET_SECTION: 'RESET_SECTION',\n    SECTION_UPDATED: 'SECTION_UPDATED',\n    DELETE_SECTION: 'DELETE_SECTION',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n    SECTION_DELETED: 'SECTION_DELETED',\n    ORDER_SECTIONS: 'ORDER_SECTIONS',\n    RENAME_SECTIONS_SITENAME: 'RENAME_SECTIONS_SITENAME',\n\n    SECTION_BG_DELETE: 'SECTION_BG_DELETE',\n    SECTION_BG_ORDER: 'SECTION_BG_ORDER',\n    SECTION_BG_ORDERED: 'SECTION_BG_ORDERED',\n\n    UPDATE_TAGS: 'UPDATE_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    RENAME_TAGS_SITENAME: 'RENAME_TAGS_SITENAME'\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    getState: function(site) {\n      site = site ? site : '0';\n      return {\n        type: ActionTypes.GET_STATE,\n        meta: {\n          remote: true,\n          url: '/_api/v1/state/' + site,\n          dispatch: 'setState'\n        }\n      };\n    },\n    setState: function(state) {\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSite: function (site, onComplete) {\n      return function (dispatch, getStore) {\n\n        dispatch({ type: ActionTypes.CREATE_SITE });\n\n        sync(API_ROOT + 'create-site', {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone\n              // related sections, entries, tags, settings, template settings\n\n              dispatch(Actions.siteCreated(response.site));\n              if (response.settings) {\n                dispatch(Actions.settingsCreated(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.sectionCreated(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n              /** @todo: handle tags in frontend\n              if (response.tags && response.tags.length) {\n                for (var i = 0; i < response.tags.length; i++) {\n                  dispatch(Actions.tagsCreated(response.tags[i]));\n                }\n              }\n              */\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.templateSettingsCreated(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    siteCreated: function(data) {\n      return {\n        type: ActionTypes.SITE_CREATED,\n        data: data\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE });\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'update-site', { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.siteUpdated(response));\n              dispatch(Actions.renameSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(path, value, onComplete) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'update-site',\n          method: 'PATCH',\n          data: {path: path, value: value},\n          dispatch: 'siteUpdated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path,\n        value: value\n      };\n    },\n\n    siteUpdated: function(resp) {\n      return {\n        type: ActionTypes.SITE_UPDATED,\n        resp: resp\n      };\n    },\n\n    deleteSite: function(site, onComplete) {\n      return function (dispatch, getStore) {\n\n        // @TODO also delete related: entries and tags\n\n        dispatch({ type: ActionTypes.DELETE_SITE });\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS });\n\n        sync(API_ROOT + 'delete-site/' + encodeURIComponent(site), {}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteDeleted(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteDeleted: function(resp) {\n      return {\n        type: ActionTypes.SITE_DELETED,\n        resp: resp\n      };\n    },\n\n    orderSites: function(sites, onComplete) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'order-sites',\n          data: sites,\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        sites: sites\n      };\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SETTINGS });\n\n        sync(API_ROOT + 'update-settings', { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.settingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    settingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    settingsCreated: function (site_name, data) {\n      return {\n        type: ActionTypes.SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_DELETED,\n        data: data\n      };\n    },\n  });\n\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(API_ROOT + 'update-site-template-settings', { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteTemplateSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteTemplateSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    templateSettingsCreated: function(site_name, data) {\n      return {\n        type: ActionTypes.TEMPLATE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED,\n        data: data\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    createSection: function(site, name, title, onComplete) {\n      return {\n        type: ActionTypes.CREATE_SECTION,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'create-section',\n          method: 'POST',\n          dispatch: 'sectionCreated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete,\n          data: {\n            site: site,\n            name: name,\n            title: title\n          }\n        }\n      };\n    },\n    sectionCreated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_CREATED,\n        resp: resp\n      };\n    },\n\n    renameSection: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'update-section', { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionUpdated(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSection: function(path, value, onComplete) {\n      return {\n        type: ActionTypes.UPDATE_SECTION,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'update-section',\n          method: 'PATCH',\n          data: {path: path, value: value},\n          dispatch: 'sectionUpdated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path,\n        value: value\n      };\n    },\n    sectionUpdated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_UPDATED,\n        resp: resp\n      };\n    },\n\n    renameSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n    resetSection: function(path, onComplete) {\n      return {\n        type: ActionTypes.RESET_SECTION,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'reset-section',\n          method: 'PATCH',\n          data: {path: path},\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path\n      };\n    },\n\n    deleteSection: function(site, section, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'delete-section/' + encodeURIComponent(site) + '/' + encodeURIComponent(section), {}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionDeleted(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    sectionDeleted: function(resp) {\n      return {\n        type: ActionTypes.SECTION_DELETED,\n        resp: resp\n      };\n    },\n\n    orderSections: function(site, sections, onComplete) {\n      return {\n        type: ActionTypes.ORDER_SECTIONS,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'order-sections',\n          data: {\n            site: site,\n            sections: sections\n          },\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        site: site,\n        sections: sections\n      };\n    },\n    sectionBgDelete: function(site, section, file, onComplete) {\n      var url = encodeURIComponent(site) +\n            '/' + encodeURIComponent(section) +\n            '/' + encodeURIComponent(file);\n\n      return {\n        type: ActionTypes.SECTION_BG_DELETE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'section-bg-delete/' + url,\n          method: 'DELETE',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        }\n      };\n    },\n    sectionBgOrder: function(site, section, files, onComplete) {\n      return {\n        type: ActionTypes.SECTION_BG_ORDER,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'section-bg-order',\n          data: {\n            site: site,\n            section: section,\n            files: files\n          },\n          dispatch: 'sectionBgOrdered',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        site: site,\n        section: section,\n        files: files\n      };\n    },\n    sectionBgOrdered: function(resp) {\n      return {\n        type: ActionTypes.SECTION_BG_ORDERED,\n        resp: resp\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    //\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  // @TODO Remove this middleware, use `window.sync` from `utils.js` instead\n  window.redux_middleware = function (store) {\n    return function (next) {\n      return function (action) {\n        if (action && action.meta && action.meta.remote) {\n          var method =  action.meta.method ? action.meta.method : 'GET';\n\n          fetch(\n            action.meta.url,\n            {\n              method: method,\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: method === 'get' ? undefined : JSON.stringify(action.meta.data)\n            }\n          )\n            .then(checkStatus)\n            .then(function(resp) {\n              return resp.json();\n            })\n            .then(function(json) {\n              if (action.meta && action.meta.dispatch && !json.error_message) {\n                store.dispatch(Actions[action.meta.dispatch](json));\n              }\n\n              if (action.meta && action.meta.onComplete) {\n                action.meta.onComplete(json);\n              }\n            })\n            .catch(function(error) {\n              console.log('Request failed:', error);\n            });\n        }\n\n        return next(action);\n      };\n    };\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, site, order, sites = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sites SET_STATE reducer:', action);\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.SITE_CREATED:\n          console.log('Sites reducer:', action);\n\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.SITE_UPDATED:\n          console.log('Sites reducer:', action);\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.SITE_DELETED:\n          console.log('Sites reducer:', action);\n\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.sites.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site settings reducer:', action);\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.SETTINGS_UPDATED:\n          console.log('Settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_SETTINGS_DELETED:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_template_settings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED:\n          console.log('Template settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.TEMPLATE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    template_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Template settings reducer:', action);\n          return Immutable.fromJS(action.state.template_settings);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value,\n          section,\n          section_idx,\n          sections = [],\n          files = [],\n          new_files = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sections reducer:', action);\n          return Immutable.fromJS(action.state.sections);\n\n\n        case ActionTypes.SECTION_CREATED:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.RENAME_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_UPDATED:\n          console.log('Sections reducer:', action);\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SECTION:\n          console.log('Sections reducer:', action);\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_DELETED:\n          console.log('Sections reducer:', action, state);\n\n          // @TODO delete related data from state\n\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SECTIONS:\n          console.log('Sections reducer:', action);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === action.site) {\n              var order = action.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_BG_ORDERED:\n          console.log('Sections reducer:', action);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    entries: function(state, action) {\n      var entry, entries = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Entries reducer:', action);\n          return Immutable.fromJS(action.state.entries);\n\n        // case ActionTypes.SECTION_CREATED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     console.log('Entries reducer:', action);\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    tags: function(state, action) {\n      var tag_idx, tags, site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Tags reducer:', action);\n\n          return Immutable.fromJS(action.state.tags);\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        // case ActionTypes.SECTION_CREATED:\n        //   tags = state.getIn([action.resp.site, 'section']).toJSON();\n\n        //   if (action.resp.tags.len > 0) {\n        //     console.log('Tags reducer:', action);\n        //     tags.push(action.resp.tags);\n\n        //     return state.setIn(\n        //       [action.resp.site, 'section'],\n        //       Immutable.fromJS(tags)\n        //     );\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     tags = state.getIn([action.resp.site, 'section']).toJSON();\n        //     tag_idx = tags.findIndex(function (tag, idx) {\n        //       return tag['@attributes'].name === action.resp.old_name;\n        //     });\n\n        //     if (tag_idx > -1) {\n        //       console.log('Tags reducer:', action);\n        //       tags[tag_idx]['@attributes'].name = action.resp.section.name;\n\n        //       return state.setIn(\n        //         [action.resp.site, 'section'],\n        //         Immutable.fromJS(tags)\n        //       );\n        //     }\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   tags = state.getIn([action.resp.site, 'section']).toJSON();\n        //   tag_idx = tags.findIndex(function (tag, idx) {\n        //     return tag['@attributes'].name === action.resp.name;\n        //   });\n\n        //   if (tag_idx > -1) {\n        //     console.log('Tags reducer:', action);\n        //     tags.splice(tag_idx, 1);\n\n        //     return state.setIn(\n        //       [action.resp.site, 'section'],\n        //       Immutable.fromJS(tags)\n        //     );\n        //   }\n\n        //   return state;\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(redux_middleware, ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  redux_store.dispatch(Actions.getState(site));\n\n})(window, document);\n"]}