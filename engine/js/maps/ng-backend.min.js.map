{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","fetch","credentials","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","length","i","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","indexOf","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","sectionTags","section_tags","site_old_name","initUpdateSectionEntry","sectionEntries","updateSectionEntry","concat","siteName","sectionName","entryId","index","findIndex","entry","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function(window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS:'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function(data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function(sites, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function(site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function(site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function(resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function(path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function(site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTIONS });\n\n        sync(window.Berta.urls.siteSections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function(site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function(site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function(site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function(state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRY });\n\n        sync(window.Berta.urls.sectionEntries, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSectionEntry: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function(state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var prop = action.resp.path.split('/').slice(4);\n          var siteName = path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n          var value = action.resp.value;\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index].concat(prop),\n            value\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}