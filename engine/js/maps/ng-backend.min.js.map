{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","token","getCookie","Promise","resolve","interval","maxChecks","syncState","then","reponse","JSON","parse","stringify","setInterval","clearInterval","fetch","credentials","headers","Accept","Content-Type","X-Authorization","body","undefined","response","status","BertaHelpers","logoutUser","Error","json","cname","name","ca","cookie","split","i","length","c","charAt","substring","indexOf","getQueryParams","pairs","location","search","slice","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","ctx","replace","match","domReady","callback","detach","addEventListener","removeEventListener","completed","detachEvent","ready","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_ORDER_SECTION_TAGS","ORDER_SECTION_TAGS","INIT_UPDATE_SECTION_TAGS","UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_CREATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","INIT_MOVE_ENTRY_TO_SECTION","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRIES","ORDER_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRY_GALLERY","ORDER_SECTION_ENTRY_GALLERY","INIT_DELETE_ENTRY_GALLERY_IMAGE","DELETE_ENTRY_GALLERY_IMAGE","INIT_DELETE_SECTION_ENTRY","DELETE_SECTION_ENTRY","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","initOrderSectionTags","tag","sectionTags","orderSectionTags","updateSectionTags","section_tags","some","site_old_name","initCreateSectionEntry","before_entry","sectionEntries","initUpdateSectionEntry","updateSectionEntry","section_order","has_direct_content","initOrderSectionEntries","entryId","orderSectionEntries","initEntryMoveToSection","currentSection","toSection","sectionEntriesMove","initDeleteSectionEntry","deleteSectionEntry","entry_count","initOrderSectionEntryGallery","entryGallery","orderSectionEntryGallery","initDeleteEntryGalleryImage","deleteEntryGalleryImage","concat","siteName","sectionName","index","findIndex","entry","deletedEntry","entry_id","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","default"],"mappings":"AAAAA,OAAAC,MAAA,ICAA,CAAAD,EAAAE,EAAAC,KAIAH,EAAAI,KAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAR,EAAAS,UAAA,OAAA,EAGA,OAFAF,EAAAA,GAAA,QAEA,IAAAG,QAAA,SAAAC,GACA,IASAC,EATAC,EAAA,EAEA,YAAA,OAAAb,EAAAc,UACAH,EAAAX,EAAAc,UAAAT,EAAAC,EAAAC,CAAA,EAAAQ,KAAA,SAAAC,GACA,OAAAC,KAAAC,MAAAD,KAAAE,UAAAH,CAAA,CAAA,CACA,CAAA,CAAA,EAIAJ,EAAAQ,YAAA,WACA,YAAA,OAAApB,EAAAc,YACAO,cAAAT,CAAA,EACAD,EAAAX,EAAAc,UAAAT,EAAAC,EAAAC,CAAA,EAAAQ,KAAA,SAAAC,GACA,OAAAC,KAAAC,MAAAD,KAAAE,UAAAH,CAAA,CAAA,CACA,CAAA,CAAA,GAGA,IAAAH,IACAQ,cAAAT,CAAA,EACAD,EAAAW,MACAjB,EACA,CACAE,OAAAA,EACAgB,YAAA,UACAC,QAAA,CACAC,OAAA,mBACAC,eAAA,mBACAC,kBAAA,UAAAnB,CACA,EACAoB,KAAA,QAAArB,EAAAsB,KAAAA,EAAAZ,KAAAE,UAAAb,CAAA,CACA,CACA,EAAAS,KAAA,SAAAe,GACA,GAAA,MAAAA,EAAAC,OAEA,MADA/B,EAAAgC,aAAAC,WAAA,EACA,IAAAC,MAAA,cAAA,EAEA,OAAAJ,EAAAK,KAAA,CACA,CAAA,CAAA,GAEAtB,EAAA,CAAA,CACA,EAAA,GAAA,CACA,CAAA,CACA,EAEAb,EAAAS,UAAA,SAAA2B,GAGA,IAFA,IAAAC,EAAAD,EAAA,IACAE,EAAApC,EAAAqC,OAAAC,MAAA,GAAA,EACAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,CAAA,GAAA,CAEA,IADA,IAAAE,EAAAL,EAAAG,GACA,MAAAE,EAAAC,OAAA,CAAA,GACAD,EAAAA,EAAAE,UAAA,CAAA,EAEA,GAAA,IAAAF,EAAAG,QAAAT,CAAA,EACA,OAAAM,EAAAE,UAAAR,EAAAK,OAAAC,EAAAD,MAAA,CAEA,CACA,MAAA,EACA,EAEA1C,EAAA+C,eAAA,WACA,IAAAC,EAAAC,SAAAC,OAAAC,MAAA,CAAA,EAAAX,MAAA,GAAA,EACAY,EAAA,GASA,OAPAJ,EAAAK,QAAA,SAAAC,GACAA,EAAA,KACAA,EAAAA,EAAAd,MAAA,GAAA,EACAY,EAAAE,EAAA,IAAAC,mBAAAD,EAAA,IAAA,EAAA,EAEA,CAAA,EAEAF,CACA,EAEApD,EAAAwD,eAAA,WACA,IAAAC,EAAAzD,EAAA+C,eAAA,EACA,OAAAlB,KAAAA,IAAA4B,EAAAC,KAAA,GAAAD,EAAAC,IACA,EAEA1D,EAAA2D,WAAA,SAAAC,GACA,IAAAC,EAAA3D,EAAA4D,cAAA,KAAA,EACAC,EAAA7D,EAAA8D,eAAAJ,CAAA,EAEA,OADAC,EAAAI,YAAAF,CAAA,EACAF,EAAAK,SACA,EAEAlE,EAAAmE,gBAAA,WACA,IAAAC,EAAAjE,EAAAkE,SAAA,EAAAC,cAAAC,OAAA,EAEA,OAAAC,OAAAC,oBAAAL,CAAA,CACA,EAEA,IAAAM,EAAA,CACAN,UAAA,EACA,EAEAM,EAAAC,KAAA,WACA,IAAAC,EAAA1E,EAAA2E,eAAA,cAAA,EAEAD,GACAE,MAAAC,UAAA5B,MAAA6B,KACAJ,EAAAK,iBAAA,QAAA,EACA,CACA,EAEA5B,QAAA,SAAA6B,GACA,kBAAAA,EAAAC,aAAA,MAAA,IACAC,KAAAhB,UAAAc,EAAAC,aAAA,IAAA,GAAAD,EAAAhB,UAEA,EAAAmB,KAAAD,IAAA,CAAA,CAEA,EAAAC,KAAAX,CAAA,EAEAA,EAAAY,IAAA,SAAAjD,EAAAkD,GAGA,OAFAH,KAAAhB,UAAA/B,GAEAmD,QAAA,iBAAA,SAAA5B,EAAA6B,GACA,OAAAF,EAAAE,EACA,CAAA,CACA,EAAAJ,KAAAX,CAAA,EAEA1E,EAAA0E,UAAAA,EAEA1E,EAAA0F,SAAA,SAAAC,GAEA,SAAAC,IACA1F,EAAA2F,kBACA3F,EAAA4F,oBAAA,mBAAAC,CAAA,EACA/F,EAAA8F,oBAAA,OAAAC,CAAA,IAEA7F,EAAA8F,YAAA,qBAAAD,CAAA,EACA/F,EAAAgG,YAAA,SAAAD,CAAA,EAEA,CATA,IAAAE,EAAA,CAAA,EAUAF,EAAA,WACAE,GAAA/F,CAAAA,EAAA2F,kBAAA,SAAAK,MAAAC,MAAA,aAAAjG,EAAAkG,aACAH,EAAA,CAAA,EACAL,EAAA,EACAD,EAAA,EAEA,EAEA,GAAA,aAAAzF,EAAAkG,WACAT,EAAA,OACA,GAAAzF,EAAA2F,iBACA3F,EAAA2F,iBAAA,mBAAAE,CAAA,EACA/F,EAAA6F,iBAAA,OAAAE,CAAA,MACA,CACA7F,EAAAmG,YAAA,qBAAAN,CAAA,EACA/F,EAAAqG,YAAA,SAAAN,CAAA,EAEA,IAAAO,EAAA,CAAA,EAEA,IACAA,EAAA,OAAAtG,EAAAuG,cAAArG,EAAAsG,eACA,CAAA,MAAAC,IAEAH,GAAAA,EAAAI,UACA,CAAA,SAAAC,IACA,GAAAV,CAAAA,EAAA,CAEA,IACAK,EAAAI,SAAA,MAAA,CAGA,CAFA,MAAAD,GACA,OAAAG,WAAAD,EAAA,EAAA,CACA,CAEAV,EAAA,CAAA,EACAL,EAAA,EACAD,EAAA,CAVA,CAWA,EAAA,CAEA,CACA,CACA,GAAA3F,OAAAE,SAAAF,OAAAG,WAAA,GCtLAH,IAGAA,EAAA6G,UAAA,CACAC,UAAA,YACAC,gBAAA,kBACAC,kBAAA,oBACAC,oBAAA,sBACAC,eAAA,iBACAC,aAAA,eACAC,YAAA,cACAC,aAAA,eACAC,mBAAA,qBACAC,YAAA,cACAC,eAAA,iBACAC,OAAA,QACA,EAEAzH,EAAA0H,QAAA,CACA3D,KAAA/D,EAAA6G,UAAAC,UACAa,SAAA3H,EAAA6G,UAAAO,YACAQ,SAAA5H,EAAA6G,UAAAS,mBACAO,MAAA7H,EAAA6G,UAAAK,eACAY,KAAA9H,EAAA6G,UAAAM,aACAY,OAAA/H,EAAA6G,UAAAG,kBACAgB,WAAAhI,EAAA6G,UAAAI,mBACA,CAEA,GAAAjH,MAAA,ECsDAA,OA/EAiI,YAAA,CACAC,UAAA,YACAC,UAAA,YAEAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cAEAC,qBAAA,uBACAC,0BAAA,4BACAC,qBAAA,uBACAC,8BAAA,gCACAC,0BAAA,4BACAC,qBAAA,uBAEAC,8BAAA,gCACAC,mCAAA,qCACAC,8BAAA,gCACAC,uCAAA,yCACAC,mCAAA,qCACAC,8BAAA,gCAEAC,yBAAA,2BACAC,oBAAA,sBACAC,yBAAA,2BACAC,oBAAA,sBACAC,8BAAA,gCACAC,mBAAA,qBACAC,yBAAA,2BACAC,oBAAA,sBACAC,yBAAA,2BACAC,oBAAA,sBACAC,0BAAA,4BACAC,qBAAA,uBAEAC,oCAAA,sCACAC,+BAAA,iCACAC,oCAAA,sCACAC,+BAAA,iCAEAC,iBAAA,mBACAC,uBAAA,yBACAC,wBAAA,0BACAC,mBAAA,qBACAC,yBAAA,2BACAC,oBAAA,sBACAC,oBAAA,sBACAC,6BAAA,+BACAC,oBAAA,sBACAC,+BAAA,iCACAC,0BAAA,4BAEAC,0BAAA,4BACAC,oBAAA,sBACAC,0BAAA,4BACAC,0BAAA,4BACAC,qBAAA,uBACAC,4BAAA,8BACAC,2BAAA,6BACAC,gCAAA,kCACAC,uBAAA,yBACAC,2BAAA,6BACAC,sBAAA,wBACAC,iCAAA,mCACAC,4BAAA,8BACAC,gCAAA,kCACAC,2BAAA,6BACAC,0BAAA,4BACAC,qBAAA,uBACAC,kCAAA,oCACAC,6BAAA,+BACAC,4BAAA,8BACAC,uBAAA,wBACA,GCjFA,CAAAvM,EAAAC,EAAAgI,EAAA7H,KAGAJ,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAnI,SAAA,SAAAX,GAEA,IAAArD,EAAA,mBADAqD,EAAAA,GAAA,KAGA,OAAA,SAAAgJ,GACAA,EAAA,CAAAvG,KAAA8B,EAAAC,SAAA,CAAA,EAEA9H,EAAAC,EAAA,GAAA,KAAA,EACAU,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAA1M,EAAAwM,QAAAI,SAAA9K,CAAA,CAAA,CAEA,CAAA,CACA,CACA,EAGA8K,SAAA,SAAAC,GAGA,OAFA5M,EAAA6M,KAAAD,EAAAC,KAEA,CACA3G,KAAA8B,EAAAE,UACA0E,MAAAA,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAC,MAAAD,OAAAiI,YAAAjI,OAAAI,IAAA,GCnCA,CAAAJ,EAAAiI,EAAA7H,KAGA,IAAAoM,EAAAxM,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAO,eAAA,SAAArJ,EAAAsJ,GACA,OAAA,SAAAN,GAEAA,EAAA,CACAvG,KAAA8B,EAAAG,gBACA,CAAA,EAEAhI,EAAAJ,EAAAC,MAAA6M,KAAAG,MAAA,CACAvJ,KAAAA,CACA,EAAA,MAAA,EACA3C,KAAA,SAAAe,GACA,GAAAA,CAAAA,EAAA6K,cAEA,CAOA,GANAD,EAAAF,EAAAU,WAAApL,EAAA4B,IAAA,CAAA,EAEA5B,EAAAqL,UACAT,EAAAF,EAAAY,mBAAAtL,EAAA4B,KAAArB,KAAAP,EAAAqL,QAAA,CAAA,EAGArL,EAAAuL,UAAAvL,EAAAuL,SAAA3K,OACA,IAAA,IAAAD,EAAA,EAAAA,EAAAX,EAAAuL,SAAA3K,OAAAD,CAAA,GACAiK,EAAAF,EAAAc,kBAAAxL,EAAAuL,SAAA5K,EAAA,CAAA,EAIAX,EAAAyL,SAAAzL,EAAAyL,QAAA7K,QACAgK,EAAAF,EAAAgB,uBAAA,CACAC,UAAA3L,EAAA4B,KAAArB,KACAkL,QAAAzL,EAAAyL,OACA,CAAA,CAAA,EAGAzL,EAAA4L,MAAA5L,EAAA4L,KAAAC,SACAjB,EAAAF,EAAAoB,oBAAA,CACAH,UAAA3L,EAAA4B,KAAArB,KACAqL,KAAA5L,EAAA4L,IACA,CAAA,CAAA,EAGA5L,EAAA+L,sBACAnB,EAAAF,EAAAsB,2BAAAhM,EAAA4B,KAAArB,KAAAP,EAAA+L,oBAAA,CAAA,CAEA,CACAb,EAAAlL,EAAA4B,IAAA,CACA,CAAA,CACA,CACA,EAEAwJ,WAAA,SAAA5M,GACA,MAAA,CACA6F,KAAA8B,EAAAI,YACA/H,KAAAA,CACA,CACA,EAEAyN,eAAA,SAAAC,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAK,gBACA,CAAA,EAEAlI,EAAAJ,EAAAC,MAAA6M,KAAAG,MAAA,CACAe,KAAAA,EACAC,MAAAA,CACA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAA0B,WAAApM,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEAoM,WAAA,SAAAC,GACA,MAAA,CACAhI,KAAA8B,EAAAM,YACA4F,KAAAA,CACA,CACA,EAEAC,WAAA,SAAAJ,EAAAC,EAAAjB,GACA,OAAA,SAAAN,EAAA2B,GACA3B,EAAA,CACAvG,KAAA8B,EAAAK,gBACA,CAAA,EACAoE,EAAA,CACAvG,KAAA8B,EAAAyB,wBACA,CAAA,EACAgD,EAAA,CACAvG,KAAA8B,EAAAY,yBACA,CAAA,EACA6D,EAAA,CACAvG,KAAA8B,EAAAkB,kCACA,CAAA,EACAuD,EAAA,CACAvG,KAAA8B,EAAA2C,wBACA,CAAA,EACA8B,EAAA,CACAvG,KAAA8B,EAAAuD,2BACA,CAAA,EAEApL,EAAAJ,EAAAC,MAAA6M,KAAAG,MAAA,CACAe,KAAAA,EACAC,MAAAA,CACA,CAAA,EACAlN,KAAA,SAAAe,GACA,IAIAwM,EACA5K,EALA5B,EAAA6K,gBAGAqB,EAAAA,EAAAxL,MAAA,GAAA,EACA8L,EAAAC,SAAAP,EAAA,GAAA,EAAA,EACAtK,EAAA2K,EAAA,EAAApB,MAAAuB,KAAA,SAAA9K,GACA,OAAAA,EAAA4B,IAAA,OAAA,IAAAgJ,CACA,CAAA,EAEA5B,EAAAF,EAAA0B,WAAApM,CAAA,CAAA,EACA4K,EAAAF,EAAAiC,2BAAA,CACA/K,KAAAA,EACA+J,UAAA3L,EAAAmM,KACA,CAAA,CAAA,EACAvB,EAAAF,EAAAkC,2BAAA,CACAhL,KAAAA,EACA+J,UAAA3L,EAAAmM,KACA,CAAA,CAAA,EACAvB,EAAAF,EAAAmC,mCAAA,CACAjL,KAAAA,EACA+J,UAAA3L,EAAAmM,KACA,CAAA,CAAA,EACAvB,EAAAF,EAAAoC,0BAAA,CACAlL,KAAAA,EACA+J,UAAA3L,EAAAmM,KACA,CAAA,CAAA,EACAvB,EAAAF,EAAAqC,6BAAA,CACAnL,KAAAA,EACA+J,UAAA3L,EAAAmM,KACA,CAAA,CAAA,GAEAjB,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEAgN,eAAA,SAAA7B,EAAAD,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAO,gBACA,CAAA,EAEApI,EAAAJ,EAAAC,MAAA6M,KAAAG,MAAAA,EAAA,KAAA,EACAlM,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAuC,WAAA9B,CAAA,CAAA,EAEAD,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEAiN,WAAA,SAAAZ,GACA,MAAA,CACAhI,KAAA8B,EAAAQ,YACA0F,KAAAA,CACA,CACA,EAEAa,eAAA,SAAAtL,EAAAsJ,GACA,OAAA,SAAAN,GAIAA,EAAA,CACAvG,KAAA8B,EAAAS,gBACA,CAAA,EACAgE,EAAA,CACAvG,KAAA8B,EAAAiC,yBACA,CAAA,EACAwC,EAAA,CACAvG,KAAA8B,EAAAe,yBACA,CAAA,EACA0D,EAAA,CACAvG,KAAA8B,EAAAqB,kCACA,CAAA,EACAoD,EAAA,CACAvG,KAAA8B,EAAAgD,8BACA,CAAA,EACAyB,EAAA,CACAvG,KAAA8B,EAAAmE,iCACA,CAAA,EAEAhM,EAAAJ,EAAAC,MAAA6M,KAAAG,MAAA,CACAvJ,KAAAA,CACA,EAAA,QAAA,EACA3C,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAAyC,WAAAnN,CAAA,CAAA,EACA4K,EAAAF,EAAA0C,mBAAA,CACAzB,UAAA3L,EAAAO,IACA,CAAA,CAAA,EACAqK,EAAAF,EAAA2C,mBAAA,CACA1B,UAAA3L,EAAAO,IACA,CAAA,CAAA,EACAqK,EAAAF,EAAA4C,2BAAA,CACA3B,UAAA3L,EAAAO,IACA,CAAA,CAAA,EACAqK,EAAAF,EAAA6C,uBAAA,CACA5B,UAAA3L,EAAAO,IACA,CAAA,CAAA,EACAqK,EAAAF,EAAA8C,0BAAA,CACA7B,UAAA3L,EAAAO,IACA,CAAA,CAAA,GAEA2K,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEAmN,WAAA,SAAAd,GACA,MAAA,CACAhI,KAAA8B,EAAAU,YACAwF,KAAAA,CACA,CACA,CACA,CAAA,CACA,GAAAnO,OAAAA,OAAAiI,YAAAjI,OAAAI,IAAA,GC9OA,CAAAJ,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACAvC,MAAA,SAAAJ,EAAA4C,GAOA,OAJA5N,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MAEA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAAI,KAAA,EAGA,KAAAhF,EAAAI,YACA,OAAAwE,EAAA+C,IAAA/C,EAAAgD,KAAAN,EAAAI,OAAAF,EAAAnP,IAAA,CAAA,EAGA,KAAA2H,EAAAM,YAIA,IAHAyF,EAAAyB,EAAAtB,KAAAH,KAAAxL,MAAA,GAAA,EACA8L,EAAAC,SAAAP,EAAA,GAAA,EAAA,EACAC,EAAAwB,EAAAtB,KAAAF,MACA6B,EAAA9B,EAAA7K,MAAA,CAAA,EAEA,OAAA0J,EAAAkD,IAAA,SAAArM,GACA,OAAAA,EAAA4B,IAAA,OAAA,IAAAgJ,GAAA5K,EAAAsM,MAAAF,CAAA,IAAA7B,EACAvK,EAAAuM,MAAAH,EAAA7B,CAAA,EAEAvK,CACA,CAAA,EAGA,KAAAuE,EAAAQ,YACA,OAAAoE,EAAAkD,IAAA,SAAArM,GACA,IAAArB,EAAAqB,EAAA4B,IAAA,MAAA,EAIA4K,EAAAT,EAAAtB,KAAArL,QAFAT,EADA,KAAAA,EACA,IAEAA,CAAA,EAEA,OAAAqB,EAAA4B,IAAA,OAAA,IAAA4K,EACAxM,EAAAkM,IAAA,QAAAM,CAAA,EAEAxM,CACA,CAAA,EAGA,KAAAuE,EAAAU,YAEA,OAAAkE,EAAAsD,OAAA,SAAAzM,GACA,OAAAA,EAAA4B,IAAA,MAAA,IAAAmK,EAAAtB,KAAA9L,IAGA,CAAA,EAAA0N,IAAA,SAAArM,EAAA4K,GACA,OAAA5K,EAAA4B,IAAA,OAAA,IAAAgJ,EACA5K,EAAAkM,IAAA,QAAAtB,CAAA,EAEA5K,CACA,CAAA,EAGA,QACA,OAAAmJ,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GCvEA,CAAAjI,EAAAiI,EAAA7H,KAGA,IAAAoM,EAAAxM,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAY,mBAAA,SAAAK,EAAAnN,GACA,MAAA,CACA6F,KAAA8B,EAAAW,qBACA6E,UAAAA,EACAnN,KAAAA,CACA,CACA,EAEA8P,uBAAA,SAAApC,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CAAAvG,KAAA8B,EAAAY,yBAAA,CAAA,EAEAzI,EAAAJ,EAAAC,MAAA6M,KAAAuD,aAAA,CAAArC,KAAAA,EAAAC,MAAAA,CAAA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAA8D,mBAAAxO,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEAwO,mBAAA,SAAAnC,GACA,MAAA,CACAhI,KAAA8B,EAAAa,qBACAqF,KAAAA,CACA,CACA,EAEAO,2BAAA,SAAApO,GACA,MAAA,CACA6F,KAAA8B,EAAAc,8BACAzI,KAAAA,CACA,CACA,EAEA6O,mBAAA,SAAA7O,GACA,MAAA,CACA6F,KAAA8B,EAAAgB,qBACA3I,KAAAA,CACA,CACA,CACA,CAAA,CAEA,GAAAN,OAAAA,OAAAiI,YAAAjI,OAAAI,IAAA,GCrDA,CAAAJ,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACAa,aAAA,SAAAxD,EAAA4C,GAMA,OAJA5N,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MACA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAA0D,aAAA,EAGA,KAAAtI,EAAAW,qBACA,OAAAiE,EAAAoD,MAAA,CAAAR,EAAAhC,WAAA8B,EAAAI,OAAAF,EAAAnP,IAAA,CAAA,EAGA,KAAA2H,EAAAa,qBACA,IAAAkF,EAAAyB,EAAAtB,KAAAH,KAAAxL,MAAA,GAAA,EAAAW,MAAA,CAAA,EACA8K,EAAAwB,EAAAtB,KAAAF,MAEA,OAAApB,EAAAoD,MACA,CAAAR,EAAAtB,KAAAzK,KAAAsK,EAAA,GAAAA,EAAA,IACAC,CACA,EAGA,KAAAhG,EAAAc,8BACA,IAAAyH,EAAAf,EAAAnP,KAAAoD,KAAA4B,IAAA,MAAA,EAEA,OAAAuH,EAAA4D,QAAA,SAAAC,GACA,OAAAA,IAAAF,EACAf,EAAAnP,KAAAmN,UAEAiD,CACA,CAAA,EAGA,KAAAzI,EAAAgB,qBACA,OAAA4D,EAAAsD,OAAA,SAAAhD,EAAAM,GACA,OAAAA,IAAAgC,EAAAnP,KAAAmN,SACA,CAAA,EAGA,QACA,OAAAZ,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GCrDA,CAAAjI,EAAAiI,EAAA7H,KAGA,IAAAoM,EAAAxM,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAsB,2BAAA,SAAAL,EAAAnN,GACA,MAAA,CACA6F,KAAA8B,EAAAiB,8BACAuE,UAAAA,EACAnN,KAAAA,CACA,CACA,EAEAqQ,+BAAA,SAAA3C,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CAAAvG,KAAA8B,EAAAkB,kCAAA,CAAA,EAEA/I,EAAAJ,EAAAC,MAAA6M,KAAAe,qBAAA,CAAAG,KAAAA,EAAAC,MAAAA,CAAA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAoE,2BAAA9O,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAEA8O,2BAAA,SAAAzC,GACA,MAAA,CACAhI,KAAA8B,EAAAmB,8BACA+E,KAAAA,CACA,CACA,EAEAQ,mCAAA,SAAArO,GACA,MAAA,CACA6F,KAAA8B,EAAAoB,uCACA/I,KAAAA,CACA,CACA,EAEA8O,2BAAA,SAAA9O,GACA,MAAA,CACA6F,KAAA8B,EAAAsB,8BACAjJ,KAAAA,CACA,CACA,CACA,CAAA,CAEA,GAAAN,OAAAA,OAAAiI,YAAAjI,OAAAI,IAAA,GCrDA,CAAAJ,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACA3B,qBAAA,SAAAhB,EAAA4C,GAMA,OAJA5N,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MACA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAAgE,sBAAA,EAGA,KAAA5I,EAAAiB,8BACA,OAAA2D,EAAAoD,MAAA,CAAAR,EAAAhC,WAAA8B,EAAAI,OAAAF,EAAAnP,IAAA,CAAA,EAGA,KAAA2H,EAAAmB,8BACA,IAAA4E,EAAAyB,EAAAtB,KAAAH,KAAAxL,MAAA,GAAA,EAAAW,MAAA,CAAA,EACA8K,EAAAwB,EAAAtB,KAAAF,MAEA,OAAApB,EAAAoD,MACA,CAAAR,EAAAtB,KAAAzK,KAAAsK,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAC,CACA,EAGA,KAAAhG,EAAAoB,uCACA,IAAAmH,EAAAf,EAAAnP,KAAAoD,KAAA4B,IAAA,MAAA,EAEA,OAAAuH,EAAA4D,QAAA,SAAAC,GACA,OAAAA,IAAAF,EACAf,EAAAnP,KAAAmN,UAEAiD,CACA,CAAA,EAGA,KAAAzI,EAAAsB,8BACA,OAAAsD,EAAAsD,OAAA,SAAAU,EAAApD,GACA,OAAAA,IAAAgC,EAAAnP,KAAAmN,SACA,CAAA,EAGA,QACA,OAAAZ,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GCrDA,CAAAjI,EAAAiI,EAAA7H,KAGA,IAAAoM,EAAAxM,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAsE,sBAAA,SAAApN,EAAArB,EAAA0O,EAAA/D,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAuB,wBACA,CAAA,EACAkD,EAAA,CACAvG,KAAA8B,EAAA2C,wBACA,CAAA,EAEAxK,EAAAJ,EAAAC,MAAA6M,KAAAkE,aAAA,CACAtN,KAAAA,EACArB,KAAAA,EACA0O,MAAAA,CACA,EAAA,MAAA,EACAhQ,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAAc,kBAAAxL,EAAA6L,OAAA,CAAA,EAEA7L,EAAA4L,MACAhB,EAAAF,EAAAyE,eAAA,CACAxD,UAAA/J,EACAgK,KAAA5L,EAAA4L,IACA,CAAA,CAAA,EAGA5L,EAAAyL,SACAb,EAAAF,EAAA0E,kBAAA,CACAzD,UAAA/J,EACA6J,QAAAzL,EAAAyL,OACA,CAAA,CAAA,GAGAP,EAAAlL,EAAA6L,OAAA,CACA,CAAA,CACA,CACA,EAGAL,kBAAA,SAAAa,GACA,MAAA,CACAhI,KAAA8B,EAAAwB,oBACA0E,KAAAA,CACA,CACA,EAGAgD,sBAAA,SAAAnD,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAyB,wBACA,CAAA,EAEAtJ,EAAAJ,EAAAC,MAAA6M,KAAAkE,aAAA,CACAhD,KAAAA,EACAC,MAAAA,CACA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAA4E,kBAAAtP,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGAsP,kBAAA,SAAAjD,GACA,MAAA,CACAhI,KAAA8B,EAAA0B,oBACAwE,KAAAA,CACA,CACA,EAGAkD,sBAAA,SAAArD,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAyB,wBACA,CAAA,EACAgD,EAAA,CACAvG,KAAA8B,EAAA2C,wBACA,CAAA,EACA8B,EAAA,CACAvG,KAAA8B,EAAAuD,2BACA,CAAA,EAEApL,EAAAJ,EAAAC,MAAA6M,KAAAkE,aAAA,CACAhD,KAAAA,EACAC,MAAAA,CACA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAA4E,kBAAAtP,CAAA,CAAA,EACA4K,EAAAF,EAAA8E,kBAAA,CACA7D,UAAA3L,EAAA4B,KACA6N,aAAAzP,EAAA6L,QAAAtL,KACAmO,iBAAA1O,EAAA0P,QACA,CAAA,CAAA,EACA9E,EAAAF,EAAAiF,qBAAA,CACAhE,UAAA3L,EAAA4B,KACA6N,aAAAzP,EAAA6L,QAAAtL,KACAmO,iBAAA1O,EAAA0P,QACA,CAAA,CAAA,GAEAxE,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGA2M,2BAAA,SAAAnO,GACA,MAAA,CACA6F,KAAA8B,EAAA2B,8BACAtJ,KAAAA,CACA,CACA,EAGAoR,iBAAA,SAAA1D,EAAAhB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAA4B,mBACAmE,KAAAA,CACA,CAAA,EAEA5N,EAAAJ,EAAAC,MAAA6M,KAAA6E,kBAAA,CACA3D,KAAAA,CACA,CAAA,EACAjN,KAAA,SAAAe,GACAA,EAAA6K,cAGAK,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGA8P,sBAAA,SAAAlO,EAAA2J,EAAAL,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAA6B,wBACA,CAAA,EAEA1J,EAAAJ,EAAAC,MAAA6M,KAAAkE,aAAA,CACAtN,KAAAA,EACA2J,SAAAA,CACA,EAAA,KAAA,EACAtM,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAqF,kBAAA,CACAnO,KAAAA,EACA2J,SAAAA,CACA,CAAA,CAAA,EAEAL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGA+P,kBAAA,SAAA1D,GACA,MAAA,CACAhI,KAAA8B,EAAA8B,oBACAoE,KAAAA,CACA,CACA,EAGA2D,sBAAA,SAAApO,EAAAiK,EAAAX,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAA+B,wBACA,CAAA,EACA0C,EAAA,CACAvG,KAAA8B,EAAA2C,wBACA,CAAA,EACA8B,EAAA,CACAvG,KAAA8B,EAAAqE,2BACA,CAAA,EAEAlM,EAAAJ,EAAAC,MAAA6M,KAAAkE,aAAA,CACAtN,KAAAA,EACAiK,QAAAA,CACA,EAAA,QAAA,EACA5M,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAAuF,kBAAAjQ,CAAA,CAAA,EAEA4K,EAAAF,EAAAwF,kBAAA,CACAvE,UAAA3L,EAAA4B,KACA6N,aAAAzP,EAAAO,IACA,CAAA,CAAA,EAEAqK,EAAAF,EAAAyF,qBAAA,CACAxE,UAAA3L,EAAA4B,KACA6N,aAAAzP,EAAAO,IACA,CAAA,CAAA,GAEA2K,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGAiQ,kBAAA,SAAA5D,GACA,MAAA,CACAhI,KAAA8B,EAAAgC,oBACAkE,KAAAA,CACA,CACA,EAGAe,mBAAA,SAAA5O,GACA,MAAA,CACA6F,KAAA8B,EAAAkC,qBACA7J,KAAAA,CACA,CACA,EAGA4R,gCAAA,SAAAxO,EAAAiK,EAAAwE,EAAAnF,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAmC,mCACA,CAAA,EAEAhK,EAAAJ,EAAAC,MAAA6M,KAAAsF,uBAAA,CACA1O,KAAAA,EACAiK,QAAAA,EACAwE,MAAAA,CACA,EAAA,KAAA,EACApR,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAA6F,4BAAAvQ,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGAuQ,4BAAA,SAAAlE,GACA,MAAA,CACAhI,KAAA8B,EAAAoC,+BACA8D,KAAAA,CACA,CACA,EAGAmE,gCAAA,SAAA5O,EAAAiK,EAAA4E,EAAAvF,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAqC,mCACA,CAAA,EAEAlK,EAAAJ,EAAAC,MAAA6M,KAAAsF,uBAAA,CACA1O,KAAAA,EACAiK,QAAAA,EACA4E,KAAAA,CACA,EAAA,QAAA,EACAxR,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAgG,4BAAA1Q,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAKA0Q,4BAAA,SAAArE,GACA,MAAA,CACAhI,KAAA8B,EAAAsC,+BACA4D,KAAAA,CACA,CACA,CACA,CAAA,CAEA,GAAAnO,OAAAA,OAAAiI,YAAAjI,OAAAI,IAAA,GC9SA,CAAAJ,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACAwB,aAAA,SAAAnE,EAAA4C,GACA,IAAAzB,EACAP,EACAa,EACAwB,EAOA,OAJAjO,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MAEA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAA4F,aAAA,EAGA,KAAAxK,EAAAwB,oBACA,OAAAoD,EAAA+C,IAAA/C,EAAAgD,KAAAN,EAAAI,OAAAF,EAAAtB,IAAA,CAAA,EAGA,KAAAlG,EAAA0B,oBAOA,OANAqE,EAAAyB,EAAAtB,KAAAH,KAAAxL,MAAA,GAAA,EACAiL,EAAA,MAAAO,EAAA,GAAA,GAAAA,EAAA,GACAM,EAAAC,SAAAP,EAAA,GAAA,EAAA,EACAC,EAAAwB,EAAAtB,KAAAF,MACA6B,EAAA9B,EAAA7K,MAAA,CAAA,EAEA0J,EAAAkD,IAAA,SAAApC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAmI,GAAAE,EAAArI,IAAA,OAAA,IAAAgJ,GAAAX,EAAAqC,MAAAF,CAAA,IAAA7B,EACAN,EAAA+E,MAAAjD,EAAAtB,KAAAR,OAAA,EAEAA,CACA,CAAA,EAGA,KAAA1F,EAAA2B,8BACA,IAAA4H,EAAA/B,EAAAnP,KAAAoD,KAAA4B,IAAA,MAAA,EACA2I,EAAAwB,EAAAnP,KAAAmN,UAEA,OAAAZ,EAAAkD,IAAA,SAAApC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAkM,EACA7D,EAAAiC,IAAA,YAAA3B,CAAA,EAEAN,CACA,CAAA,EAGA,KAAA1F,EAAA4B,mBAMA,OALAmE,EAAAyB,EAAAzB,KAAAxL,MAAA,GAAA,EACAiL,EAAA,MAAAO,EAAA,GAAA,GAAAA,EAAA,GACAM,EAAAC,SAAAP,EAAA,GAAA,EAAA,EACA8B,EAAA9B,EAAA7K,MAAA,CAAA,EAEA0J,EAAAkD,IAAA,SAAApC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAmI,GAAAE,EAAArI,IAAA,OAAA,IAAAgJ,EACAX,EAAAgF,SAAA7C,CAAA,EAEAnC,CACA,CAAA,EAGA,KAAA1F,EAAA8B,oBACA,OAAA8C,EAAAkD,IAAA,SAAApC,GACA,GAAAA,EAAArI,IAAA,WAAA,IAAAmK,EAAAtB,KAAAzK,KAAA,CACA,IAAA4K,EAAAmB,EAAAtB,KAAAd,SAAAvK,QAAA6K,EAAArI,IAAA,MAAA,CAAA,EAEA,GAAAqI,EAAArI,IAAA,OAAA,IAAAgJ,EACA,OAAAX,EAAAiC,IAAA,QAAAtB,CAAA,CAEA,CACA,OAAAX,CACA,CAAA,EAGA,KAAA1F,EAAAgC,oBAIA,OAHAwD,EAAA,MAAAgC,EAAAtB,KAAAzK,KAAA,GAAA+L,EAAAtB,KAAAzK,KACA4K,EAAA,CAAA,EAEAzB,EAAAsD,OAAA,SAAAxC,GACA,MAAA,EAAAA,EAAArI,IAAA,MAAA,IAAAmK,EAAAtB,KAAA9L,MAAAsL,EAAArI,IAAA,WAAA,IAAAmI,EAGA,CAAA,EAAAsC,IAAA,SAAApC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAmI,IACAa,CAAA,GAEAX,EAAArI,IAAA,OAAA,IAAAgJ,GACAX,EAAAiC,IAAA,QAAAtB,CAAA,EAGAX,CACA,CAAA,EAGA,KAAA1F,EAAAkC,qBACA,OAAA0C,EAAAsD,OAAA,SAAAxC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAmK,EAAAnP,KAAAmN,SACA,CAAA,EAGA,KAAAxF,EAAAoC,+BACA,OAAAwC,EAAAkD,IAAA,SAAApC,GACA,OAAAA,EAAArI,IAAA,WAAA,IAAAmK,EAAAtB,KAAAzK,MAAAiK,EAAArI,IAAA,MAAA,IAAAmK,EAAAtB,KAAAR,QACAA,EACAiC,IAAA,cAAAH,EAAAtB,KAAAyE,WAAA,EACA3C,MAAA,CAAA,iBAAA,QAAAR,EAAAtB,KAAAgE,KAAA,EAEAxE,CACA,CAAA,EAGA,QACA,OAAAd,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GC3HA,CAAAjI,EAAAiI,EAAA7H,KAGA,IAAAoM,EAAAxM,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAEAoB,oBAAA,SAAAtN,GACA,MAAA,CACA6F,KAAA8B,EAAAwC,uBACAnK,KAAAA,CACA,CACA,EAEA2Q,eAAA,SAAA3Q,GACA,MAAA,CACA6F,KAAA8B,EAAAuC,iBACAlK,KAAAA,CACA,CACA,EAEAuS,qBAAA,SAAAnP,EAAAiK,EAAAmF,EAAA7E,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAyC,uBACA,CAAA,EAEAtK,EAAAJ,EAAAC,MAAA6M,KAAAiG,YAAA,CACArP,KAAAA,EACAiK,QAAAA,EACAmF,IAAAA,EACA7E,MAAAA,CACA,EAAA,KAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAwG,iBAAAlR,CAAA,CAAA,EAEAkL,EAAA,CACA,CAAA,CACA,CACA,EAEAgG,iBAAA,SAAA1S,GACA,MAAA,CACA6F,KAAA8B,EAAA0C,mBACArK,KAAAA,CACA,CACA,EAEAgR,kBAAA,SAAAhR,GACA,MAAA,CACA6F,KAAA8B,EAAA6C,oBACAxK,KAAAA,CACA,CACA,EAEA2S,kBAAA,SAAA3S,GACA,MAAA,CACA6F,KAAA8B,EAAA4C,oBACAvK,KAAAA,CACA,CACA,EAEAsO,0BAAA,SAAAtO,GACA,MAAA,CACA6F,KAAA8B,EAAA8C,6BACAzK,KAAAA,CACA,CACA,EAEA0R,kBAAA,SAAA1R,GACA,MAAA,CACA6F,KAAA8B,EAAA+C,oBACA1K,KAAAA,CACA,CACA,EAEA+O,uBAAA,SAAA/O,GACA,MAAA,CACA6F,KAAA8B,EAAAiD,0BACA5K,KAAAA,CACA,CACA,CAEA,CAAA,CAEA,GAAAN,OAAAA,OAAAiI,YAAAjI,OAAAI,IAAA,GCxFA,CAAAJ,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACAuD,YAAA,SAAAlG,EAAA4C,GACA,IAAAhC,EAAA,GAMA,OAJA5L,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MACA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAAqG,YAAA,EAGA,KAAAjL,EAAAwC,uBACA,OAAAoC,EAAA+C,IAAAH,EAAAnP,KAAAmN,UAAAgC,EAAAnP,KAAAoN,IAAA,EAGA,KAAAzF,EAAAuC,iBACA,OAAAqC,EAAAkD,IAAA,SAAArM,EAAA+J,GACA,OAAAgC,EAAAnP,KAAAmN,YAAAA,EACA/J,EAAAqM,IAAA,SAAA1C,GACA,OAAAA,EAAAuC,IAAAvC,EAAAwC,KAAAN,EAAAI,OAAAF,EAAAnP,KAAAoN,IAAA,CAAA,CACA,CAAA,EAEAhK,CACA,CAAA,EAGA,KAAAuE,EAAA0C,mBAGA,OAFA8C,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAA1C,GACA,OAAAA,EAAA0C,IAAA,SAAApC,GACA,IACAD,EADA,OAAAC,EAAAqC,MAAA,CAAA,cAAA,OAAA,IAAAP,EAAAnP,KAAAiR,cACA7D,EAAAC,EAAArI,IAAA,KAAA,EAAAyK,IAAA,SAAA+C,GACA,OAAAA,EAAAlD,IAAA,QAAAH,EAAAnP,KAAAgO,MAAAxL,QAAAgQ,EAAA9C,MAAA,CAAA,cAAA,OAAA,CAAA,CAAA,CACA,CAAA,EAEArC,EAAAiC,IAAA,MAAAlC,CAAA,GAEAC,CACA,CAAA,CACA,CAAA,EAEAjK,CACA,CAAA,EAGA,KAAAuE,EAAA4C,oBAGA,OAFA4C,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAA1C,GAEA,OAAAA,EAAA8F,KAAA,SAAAxF,GAAA,OAAAA,GAAAA,EAAAqC,MAAA,CAAA,cAAA,OAAA,IAAAP,EAAAnP,KAAAiR,YAAA,CAAA,EACAlE,EAAA0C,IAAA,SAAApC,GACA,OAAAA,EAAAqC,MAAA,CAAA,cAAA,OAAA,IAAAP,EAAAnP,KAAAiR,aACA5D,EAAA+E,MAAAjD,EAAAnP,KAAAoN,IAAA,EAEAC,CACA,CAAA,EAGA8B,EAAAnP,KAAAoN,KAIAL,EAAAuC,IAAAvC,EAAAwC,KAAAN,EAAAI,OAAAF,EAAAnP,KAAAoN,IAAA,CAAA,EAHAL,CAIA,CAAA,EAEA3J,CACA,CAAA,EAGA,KAAAuE,EAAA6C,oBAGA,OAFA2C,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAA1C,GACA,OAAAA,EAAA0C,IAAA,SAAApC,GAEA,OAAAA,EAAAqC,MAAA,CAAA,cAAA,OAAA,IAAAP,EAAAnP,KAAAkQ,iBAEA7C,EAAAsC,MACA,CAAA,cAAA,QACAR,EAAAnP,KAAAiR,YACA,EAEA5D,CACA,CAAA,CACA,CAAA,EAEAjK,CACA,CAAA,EAGA,KAAAuE,EAAA8C,6BACA,IAAAqI,EAAA3D,EAAAnP,KAAAoD,KAAA4B,IAAA,MAAA,EAEA,OAAAuH,EAAA4D,QAAA,SAAAhD,GACA,OAAAA,IAAA2F,EACA3D,EAAAnP,KAAAmN,UAEAA,CACA,CAAA,EAGA,KAAAxF,EAAA+C,oBAGA,OAFAyC,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAA1C,GACA,OAAAA,EAAA8C,OAAA,SAAAxC,GACA,OAAAA,EAAAqC,MAAA,CAAA,cAAA,OAAA,IAAAP,EAAAnP,KAAAiR,YACA,CAAA,CACA,CAAA,EAEA7N,CACA,CAAA,EAGA,KAAAuE,EAAAiD,0BACA,OAAA2B,EAAAsD,OAAA,SAAAzC,EAAAD,GACA,OAAAA,IAAAgC,EAAAnP,KAAAmN,SACA,CAAA,EAGA,QACA,OAAAZ,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GC9IA,CAAAjI,EAAAI,EAAAoM,EAAAvE,KAGAjI,EAAAwM,QAAAxM,EAAAwM,SAAA,GAEAhI,OAAAiI,OAAAzM,EAAAwM,QAAA,CAGA6G,uBAAA,SAAA3P,EAAAiK,EAAAmF,EAAAQ,EAAAtG,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAoD,yBACA,CAAA,EAEAjL,EAAAJ,EAAAC,MAAA6M,KAAAyG,eAAA,CACA7P,KAAAA,EACAiK,QAAAA,EACAmF,IAAAA,EACAQ,aAAAA,CACA,EAAA,MAAA,EACAvS,KAAA,SAAAe,GACAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGA0L,uBAAA,SAAAlN,GACA,MAAA,CACA6F,KAAA8B,EAAAkD,0BACA7K,KAAAA,CACA,CACA,EAGA4Q,kBAAA,SAAA5Q,GACA,MAAA,CACA6F,KAAA8B,EAAAmD,oBACA9K,KAAAA,CACA,CACA,EAGAkT,uBAAA,SAAAxF,EAAAC,EAAAjB,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAqD,yBACA,CAAA,EAEAlL,EAAAJ,EAAAC,MAAA6M,KAAAyG,eAAA,CACAvF,KAAAA,EACAC,MAAAA,CACA,CAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAAiH,mBAAA3R,CAAA,CAAA,EAEAA,EAAA6L,UACAjB,EAAA,CACAvG,KAAA8B,EAAAyB,wBACA,CAAA,EAEAgD,EAAAF,EAAA4E,kBAAA,CACApD,KAAAlM,EAAA2L,UAAA,YAAA3L,EAAA4R,cAAA,kCACA/F,QAAA7L,EAAA6L,QACAM,MAAAnM,EAAA6R,kBACA,CAAA,CAAA,GAGA7R,EAAA4L,MACAhB,EAAAF,EAAAyG,kBAAAnR,CAAA,CAAA,GAGAkL,GACAA,EAAAlL,CAAA,CAEA,CAAA,CACA,CACA,EAGA2R,mBAAA,SAAAtF,GACA,MAAA,CACAhI,KAAA8B,EAAAsD,qBACA4C,KAAAA,CACA,CACA,EAGAU,6BAAA,SAAAvO,GACA,MAAA,CACA6F,KAAA8B,EAAAyD,gCACApL,KAAAA,CACA,CACA,EAGAmR,qBAAA,SAAAnR,GACA,MAAA,CACA6F,KAAA8B,EAAA0D,uBACArL,KAAAA,CACA,CACA,EAEAsT,wBAAA,SAAAlQ,EAAAiK,EAAAkG,EAAA5F,GACA,OAAA,SAAAvB,GACAA,EAAA,CACAvG,KAAA8B,EAAA2D,0BACA,CAAA,EAEAxL,EAAAJ,EAAAC,MAAA6M,KAAAyG,eAAA,CACA7P,KAAAA,EACAiK,QAAAA,EACAkG,QAAAA,EACA5F,MAAAA,CACA,EAAA,KAAA,EACAlN,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAsH,oBAAAhS,CAAA,CAAA,CAEA,CAAA,CACA,CACA,EAEAgS,oBAAA,SAAAxT,GACA,MAAA,CACA6F,KAAA8B,EAAA4D,sBACAvL,KAAAA,CACA,CACA,EAEAyT,uBAAA,SAAArQ,EAAAsQ,EAAAH,EAAAI,EAAAjH,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAwD,0BACA,CAAA,EAEArL,EAAAJ,EAAAC,MAAA6M,KAAAoH,mBAAA,CACAxQ,KAAAA,EACAsQ,eAAAA,EACAH,QAAAA,EACAI,UAAAA,CACA,CAAA,EACAlT,KAAAiM,CAAA,CACA,CACA,EAEAmH,uBAAA,SAAAzQ,EAAAiK,EAAAkG,EAAA7G,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAAiE,yBACA,CAAA,EACAQ,EAAA,CACAvG,KAAA8B,EAAAyB,wBACA,CAAA,EAEAtJ,EAAAJ,EAAAC,MAAA6M,KAAAyG,eAAA,CACA7P,KAAAA,EACAiK,QAAAA,EACAkG,QAAAA,CACA,EAAA,QAAA,EACA9S,KAAA,SAAAe,GACAA,EAAA6K,gBAGAD,EAAAF,EAAA4H,mBAAAtS,CAAA,CAAA,EAEA4K,EAAAF,EAAA4E,kBAAA,CACApD,KAAAlM,EAAA2L,UAAA,YAAA3L,EAAA4R,cAAA,2BACA/F,QAAA7L,EAAA6L,QACAM,MAAAnM,EAAAuS,WACA,CAAA,CAAA,EAEA3H,EAAAF,EAAA4E,kBAAA,CACApD,KAAAlM,EAAA2L,UAAA,YAAA3L,EAAA4R,cAAA,kCACA/F,QAAA7L,EAAA6L,QACAM,MAAAnM,EAAA6R,kBACA,CAAA,CAAA,EAEAjH,EAAAF,EAAAyG,kBAAAnR,CAAA,CAAA,GAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGAsS,mBAAA,SAAAjG,GACA,MAAA,CACAhI,KAAA8B,EAAAkE,qBACAgC,KAAAA,CACA,CACA,EAGAmB,0BAAA,SAAAhP,GACA,MAAA,CACA6F,KAAA8B,EAAAoE,6BACA/L,KAAAA,CACA,CACA,EAGA2R,qBAAA,SAAA3R,GACA,MAAA,CACA6F,KAAA8B,EAAAsE,uBACAjM,KAAAA,CACA,CACA,EAGAgU,6BAAA,SAAA5Q,EAAAiK,EAAAkG,EAAA1B,EAAAnF,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAA6D,gCACA,CAAA,EAEA1L,EAAAJ,EAAAC,MAAA6M,KAAAyH,aAAA,CACA7Q,KAAAA,EACAiK,QAAAA,EACAkG,QAAAA,EACA1B,MAAAA,CACA,EAAA,KAAA,EACApR,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAgI,yBAAA1S,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAGA0S,yBAAA,SAAArG,GACA,MAAA,CACAhI,KAAA8B,EAAA8D,4BACAoC,KAAAA,CACA,CACA,EAGAsG,4BAAA,SAAA/Q,EAAAiK,EAAAkG,EAAAtB,EAAAvF,GACA,OAAA,SAAAN,GACAA,EAAA,CACAvG,KAAA8B,EAAA+D,+BACA,CAAA,EAEA5L,EAAAJ,EAAAC,MAAA6M,KAAAyH,aAAA,CACA7Q,KAAAA,EACAiK,QAAAA,EACAkG,QAAAA,EACAtB,KAAAA,CACA,EAAA,QAAA,EACAxR,KAAA,SAAAe,GACAA,EAAA6K,eAGAD,EAAAF,EAAAkI,wBAAA5S,CAAA,CAAA,EAEAkL,EAAAlL,CAAA,CACA,CAAA,CACA,CACA,EAKA4S,wBAAA,SAAAvG,GACA,MAAA,CACAhI,KAAA8B,EAAAgE,2BACAkC,KAAAA,CACA,CACA,CACA,CAAA,CAEA,GAAAnO,OAAAA,OAAAI,KAAAJ,OAAAwM,QAAAxM,OAAAiI,WAAA,GCzRA,CAAAjI,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACA+D,eAAA,SAAA1G,EAAA4C,GACA,IAAAhC,EAMA,OAJA5L,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,MAEA,KAAA8B,EAAAE,UACA,OAAAoH,EAAAI,OAAAF,EAAA5C,MAAA0G,cAAA,EAGA,KAAAtL,EAAAkD,0BACA,OAAA0B,EAAA+C,IAAAH,EAAAnP,KAAAmN,UAAAgC,EAAAnP,KAAAiN,OAAA,EAGA,KAAAtF,EAAAmD,oBACA,OAAAyB,EAAAkD,IAAA,SAAArM,EAAA+J,GACA,OAAAA,IAAAgC,EAAAnP,KAAAmN,UACA/J,EAAAiR,OAAApF,EAAAI,OAAAF,EAAAnP,KAAAiN,OAAA,CAAA,EAEA7J,CACA,CAAA,EAGA,KAAAuE,EAAAsD,qBACA,IAAAyC,EAAAyB,EAAAtB,KAAAH,KAAAxL,MAAA,GAAA,EACAoS,EAAA,MAAA5G,EAAA,GAAA,GAAAA,EAAA,GACA6G,EAAA7G,EAAA,GACA6F,EAAA7F,EAAA,GAEA8G,EAAAjI,EAAAvH,IAAAsP,CAAA,EAAAG,UAAA,SAAAC,GACA,OAAAA,EAAA1P,IAAA,IAAA,IAAAuO,GAAAmB,EAAA1P,IAAA,aAAA,IAAAuP,CACA,CAAA,EAEA,OAAAC,EAAA,EACAjI,EAGAA,EAAAoD,MACA,CAAA2E,EAAAE,GACAjI,EAAAmD,MAAA,CAAA4E,EAAAE,EAAA,EAAApC,MAAAjD,EAAAtB,KAAA6G,KAAA,CACA,EAGA,KAAA/M,EAAAyD,gCACA,IAAA0H,EAAA3D,EAAAnP,KAAAoD,KAAA4B,IAAA,MAAA,EAEA,OAAAuH,EAAA4D,QAAA,SAAAhD,GACA,OAAAA,IAAA2F,EACA3D,EAAAnP,KAAAmN,UAEAA,CACA,CAAA,EAGA,KAAAxF,EAAA0D,uBAGA,OAFA8B,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAAiF,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAnP,KAAAkQ,iBACAwE,EAAApF,IAAA,cAAAH,EAAAnP,KAAAiR,YAAA,EAEAyD,CACA,CAAA,EAEAtR,CACA,CAAA,EAGA,KAAAuE,EAAA4D,sBAGA,OAFA4B,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,OAAAjD,IAAAiD,EACAhN,EAAAqM,IAAA,SAAAiF,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAnP,KAAAiR,aACAyD,EAAApF,IAAA,QAAAH,EAAAnP,KAAAgO,MAAAxL,QAAAkS,EAAA1P,IAAA,IAAA,CAAA,CAAA,EAEA0P,CACA,CAAA,EAEAtR,CACA,CAAA,EAGA,KAAAuE,EAAAkE,qBAGA,OAFAsB,EAAA,MAAAgC,EAAAtB,KAAAV,UAAA,GAAAgC,EAAAtB,KAAAV,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAgN,GACA,IACAuE,EADA,OAAAxH,IAAAiD,GACAuE,EAAAvR,EAAA8K,KAAA,SAAAwG,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAtB,KAAAoD,cAAAyD,EAAA1P,IAAA,IAAA,IAAAmK,EAAAtB,KAAA+G,QACA,CAAA,EAEAxR,EAAAyM,OAAA,SAAA6E,GACA,MAAA,EAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAtB,KAAAoD,cAAAyD,EAAA1P,IAAA,IAAA,IAAAmK,EAAAtB,KAAA+G,SACA,CAAA,EAAAnF,IAAA,SAAAiF,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAtB,KAAAoD,cAAAyD,EAAA1P,IAAA,OAAA,EAAA2P,EAAA3P,IAAA,OAAA,EACA0P,EAAApF,IAAA,QAAAoF,EAAA1P,IAAA,OAAA,EAAA,CAAA,EAEA0P,CACA,CAAA,GAEAtR,CACA,CAAA,EAGA,KAAAuE,EAAAoE,6BACA,OAAAQ,EAAAsD,OAAA,SAAA5C,EAAAE,GACA,OAAAA,IAAAgC,EAAAnP,KAAAmN,SACA,CAAA,EAGA,KAAAxF,EAAAsE,uBAGA,OAFAkB,EAAA,MAAAgC,EAAAnP,KAAAmN,UAAA,GAAAgC,EAAAnP,KAAAmN,UAEAZ,EAAAkD,IAAA,SAAArM,EAAAyR,GACA,OAAA1H,IAAA0H,EACAzR,EAAAyM,OAAA,SAAA6E,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAnP,KAAAiR,YACA,CAAA,EAEA7N,CACA,CAAA,EAGA,KAAAuE,EAAA8D,4BACA,OAAAc,EAAAkD,IAAA,SAAArM,EAAA+J,GACA,OAAAA,IAAAgC,EAAAtB,KAAAzK,KACAA,EAAAqM,IAAA,SAAAiF,GACA,OAAAA,EAAA1P,IAAA,aAAA,IAAAmK,EAAAtB,KAAAR,SAAAqH,EAAA1P,IAAA,IAAA,IAAAmK,EAAAtB,KAAA+G,SACAF,EACApF,IAAA,cAAAH,EAAAtB,KAAAyE,WAAA,EACA3C,MAAA,CAAA,iBAAA,QAAAR,EAAAtB,KAAAgE,KAAA,EAEA6C,CACA,CAAA,EAEAtR,CACA,CAAA,EAGA,QACA,OAAAmJ,CACA,CACA,CACA,CAAA,CACA,GAAA7M,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GC7JA,CAAAjI,EAAAuP,EAAAtH,KAGAjI,EAAAwP,SAAAxP,EAAAwP,UAAA,GAEAhL,OAAAiI,OAAAzM,EAAAwP,SAAA,CACAlL,cAAA,SAAAuI,EAAA4C,GAMA,OAJA5N,KAAAA,IAAAgL,IACAA,EAAA0C,EAAAG,IAAA,GAGAD,EAAAtJ,OACA8B,EAAAE,UAIA0E,EAHA0C,EAAAI,OAAAF,EAAA5C,MAAAvI,aAAA,CAKA,CACA,CAAA,CACA,GAAAtE,OAAAA,OAAAuP,UAAAvP,OAAAiI,WAAA,GCrBA,CAAAjI,EAAAoV,KAGApV,EAAAqV,aAAAD,EAAAE,gBACAtV,OAAAwP,QADA,CACA,GAAAxP,OAAAA,OAAAoV,KAAA,GCJA,CAAApV,EAAAoV,EAAAG,EAAA/I,EAAA9G,EAAAlC,KAGAkC,EAcA1F,OAAA0E,UAdAC,IAAA,EAEA6Q,EAAAxV,EAAAyV,sCAAAL,EAAAM,QACA1V,EAAAG,YAAAiV,EAAAO,YACA3V,EAAAqV,aACA,GACAG,EACAJ,EAAAQ,gBAAAL,EAAAM,OAAA,CACA,CACA,EAEAnS,EAAAF,EAAA,EACAxD,EAAAG,YAAAuM,SAAAF,EAAAnI,SAAAX,CAAA,CAAA,CAEA,GAAA1D,OAAAA,OAAAoV,MAAApV,OAAAuV,WAAAvV,OAAAwM,QAAAxM,OAAA0F,SAAA1F,OAAAwD,cAAA","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    var token = window.getCookie('token');\n    method = method || 'PATCH';\n\n    return new Promise(function(resolve) {\n      var maxChecks = 5;\n\n      if (typeof window.syncState === 'function') {\n        resolve(window.syncState(url, data, method).then(function(reponse) {\n          return JSON.parse(JSON.stringify(reponse));\n        }));\n        return;\n      }\n\n      var interval = setInterval(function() {\n        if (typeof window.syncState === 'function') {\n          clearInterval(interval);\n          resolve(window.syncState(url, data, method).then(function(reponse) {\n              return JSON.parse(JSON.stringify(reponse));\n          }));\n        }\n\n        if (maxChecks === 0) {\n          clearInterval(interval);\n          resolve(fetch(\n            url,\n            {\n              method: method,\n              credentials: 'include',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-Authorization': 'Bearer ' + token\n              },\n              body: method === 'GET' ? undefined : JSON.stringify(data)\n            }\n          ).then(function (response) {\n            if (response.status === 401) {\n              window.BertaHelpers.logoutUser();\n              throw new Error('Unauthorized');\n            }\n            return response.json();\n          }));\n        }\n        maxChecks =- 1;\n      }, 200);\n    });\n  };\n\n  window.getCookie = function (cname) {\n    var name = cname + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function (window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS: 'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_ORDER_SECTION_TAGS: 'INIT_ORDER_SECTION_TAGS',\n    ORDER_SECTION_TAGS: 'ORDER_SECTION_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    UPDATE_SECTION_TAGS: 'UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_CREATE_SECTION_ENTRY: 'INIT_CREATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    INIT_MOVE_ENTRY_TO_SECTION: 'INIT_MOVE_ENTRY_TO_SECTION',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRIES: 'INIT_ORDER_SECTION_ENTRIES',\n    ORDER_SECTION_ENTRIES: 'ORDER_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRY_GALLERY: 'INIT_ORDER_SECTION_ENTRY_GALLERY',\n    ORDER_SECTION_ENTRY_GALLERY: 'ORDER_SECTION_ENTRY_GALLERY',\n    INIT_DELETE_ENTRY_GALLERY_IMAGE: 'INIT_DELETE_ENTRY_GALLERY_IMAGE',\n    DELETE_ENTRY_GALLERY_IMAGE: 'DELETE_ENTRY_GALLERY_IMAGE',\n    INIT_DELETE_SECTION_ENTRY: 'INIT_DELETE_SECTION_ENTRY',\n    DELETE_SECTION_ENTRY: 'DELETE_SECTION_ENTRY',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function (data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function (sites, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITES\n        });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function (site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          name: name,\n          title: title\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function (resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function (path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, {\n          path: path\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function (site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTIONS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          sections: sections\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({\n                site: site,\n                sections: sections\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function (site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          section: section\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function (site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function (site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSiteSectionBackgrounds` is called after delete which updates state\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function (state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3); // \"title\" or \"@attributes/published\"\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n            // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    initOrderSectionTags: function (site, section, tag, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.sectionTags, {\n          site: site,\n          section: section,\n          tag: tag,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionTags(response));\n            }\n            onComplete();\n          });\n      };\n    },\n\n    orderSectionTags: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    updateSectionTags: function (data) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function (state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                    var tags = section.get('tag').map(function (tag) {\n                      return tag.set('order', action.data.order.indexOf(tag.getIn(['@attributes', 'name'])));\n                    });\n\n                    return section.set('tag', tags);\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n\n                if (sections.some(function (section) { return section && section.getIn(['@attributes', 'name']) === action.data.section_name;})) {\n                  return sections.map(function (section) {\n                    if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                      return section.merge(action.data.tags);\n                    }\n                    return section;\n                  });\n                }\n\n                if (!action.data.tags) {\n                  return sections;\n                }\n\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n\n    initCreateSectionEntry: function (site, section, tag, before_entry, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          tag: tag,\n          before_entry: before_entry\n        }, 'POST')\n          .then(function (response) {\n            onComplete(response);\n          });\n      };\n    },\n\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n\n              if (response.section) {\n                dispatch({\n                  type: ActionTypes.INIT_UPDATE_SITE_SECTION\n                });\n\n                dispatch(Actions.updateSiteSection({\n                  'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                  'section': response.section,\n                  'value': response.has_direct_content\n                }));\n              }\n\n              if (response.tags) {\n                dispatch(Actions.updateSectionTags(response));\n              }\n            }\n            if (onComplete) {\n              onComplete(response);\n            }\n          });\n      };\n    },\n\n\n    updateSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initOrderSectionEntries: function (site, section, entryId, value) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntries(response));\n            }\n          });\n      };\n    },\n\n    orderSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initEntryMoveToSection: function (site, currentSection, entryId, toSection, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_MOVE_ENTRY_TO_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntriesMove, {\n          site: site,\n          currentSection: currentSection,\n          entryId: entryId,\n          toSection: toSection\n        })\n          .then(onComplete);\n      };\n    },\n\n    initDeleteSectionEntry: function (site, section, entryId, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRY\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSectionEntry(response));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/entry_count',\n                'section': response.section,\n                'value': response.entry_count\n              }));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                'section': response.section,\n                'value': response.has_direct_content\n              }));\n\n              dispatch(Actions.updateSectionTags(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initOrderSectionEntryGallery: function (site, section, entryId, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRY_GALLERY\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntryGallery(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSectionEntryGallery: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRY_GALLERY,\n        resp: resp\n      };\n    },\n\n\n    initDeleteEntryGalleryImage: function (site, section, entryId, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_ENTRY_GALLERY_IMAGE\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteEntryGalleryImage(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSectionEntryGallery` is called after delete which updates state\n    deleteEntryGalleryImage: function (resp) {\n      return {\n        type: ActionTypes.DELETE_ENTRY_GALLERY_IMAGE,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function (state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var siteName = path[0] === '0' ? '' : path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index],\n            state.getIn([siteName, index]).merge(action.resp.entry)\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_name) {\n                  return entry.set('order', action.data.order.indexOf(entry.get('id')));\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRY:\n          site_name = action.resp.site_name === '0' ? '' : action.resp.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              var deletedEntry = site.find(function (entry) {\n                return entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id;\n              });\n\n              return site.filter(function (entry) {\n                return !(entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id);\n              }).map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section_name && entry.get('order') > deletedEntry.get('order')) {\n                  return entry.set('order', entry.get('order') - 1);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRY_GALLERY:\n          return state.map(function (site, site_name) {\n            if (site_name === action.resp.site) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section && entry.get('id') === action.resp.entry_id) {\n                  return entry\n                    .set('mediafolder', action.resp.mediafolder)\n                    .setIn(['mediaCacheData', 'file'], action.resp.files);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}