{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","fetch","credentials","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRY_GALLERY","ORDER_SECTION_ENTRY_GALLERY","INIT_DELETE_ENTRY_GALLERY_IMAGE","DELETE_ENTRY_GALLERY_IMAGE","INIT_DELETE_SECTION_ENTRY","DELETE_SECTION_ENTRY","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","length","i","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","indexOf","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","sectionTags","section_tags","site_old_name","initUpdateSectionEntry","sectionEntries","updateSectionEntry","initDeleteSectionEntry","entryId","deleteSectionEntry","initOrderSectionEntryGallery","entryGallery","orderSectionEntryGallery","initDeleteEntryGalleryImage","deleteEntryGalleryImage","concat","siteName","sectionName","index","findIndex","entry","s","entry_id","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"AAAAA,OAAAC,SCAA,SAAAD,EAAAE,EAAAC,GACA,YAGAH,GAAAI,KAAA,SAAAC,EAAAC,EAAAC,GAEA,MADAA,GAAAA,GAAA,QACAC,MACAH,GAEAE,OAAAA,EACAE,YAAA,UACAC,SACAC,OAAA,mBACAC,eAAA,oBAEAC,KAAA,QAAAN,EAAAO,OAAAC,KAAAC,UAAAV,KAGAW,KAAA,SAAAC,GACA,MAAAA,GAAAC,SAbAX,SAeA,SAAAY,GAEAC,QAAAD,MAAA,kBAAAA,EAAAE,YAIAtB,EAAAuB,eAAA,WACA,GAAAC,GAAAC,SAAAC,OAAAC,MAAA,GAAAC,MAAA,KACAC,IASA,OAPAL,GAAAM,QAAA,SAAAC,GACAA,EAAA,KACAA,EAAAA,EAAAH,MAAA,KACAC,EAAAE,EAAA,IAAAC,mBAAAD,EAAA,IAAA,OAIAF,GAGA7B,EAAAiC,eAAA,WACA,GAAAC,GAAAlC,EAAAuB,gBACA,OAAAT,UAAAoB,EAAAC,KAAA,GAAAD,EAAAC,MAGAnC,EAAAoC,WAAA,SAAAC,GACA,GAAAC,GAAApC,EAAAqC,cAAA,OACAC,EAAAtC,EAAAuC,eAAAJ,EAEA,OADAC,GAAAI,YAAAF,GACAF,EAAAK,WAGA3C,EAAA4C,gBAAA,WACA,GAAAC,GAAA1C,EAAA2C,WAAAC,cAAAC,QAEA,OAAAC,QAAAC,oBAAAL,GAGA,IAAAM,IACAN,aAGAM,GAAAC,KAAA,WACA,GAAAC,GAAAnD,EAAAoD,eAAA,eAEA,IAAAD,EAAA,CACA,GAAAR,GAAAU,MAAAC,UAAA7B,MAAA8B,KACAJ,EAAAK,iBAAA,UACA,EAGAb,GAAAf,QAAA,SAAA6B,GACA,kBAAAA,EAAAC,aAAA,UACAC,KAAAhB,UAAAc,EAAAC,aAAA,OAAAD,EAAAhB,YAEAmB,KAAAD,SAEAC,KAAAX,GAEAA,EAAAY,IAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAL,KAAAhB,UAAAmB,EAEA,OAAAE,GAAAC,QAAA,iBAAA,SAAA9B,EAAA+B,GACA,MAAAH,GAAAG,MAEAN,KAAAX,GAEAnD,EAAAmD,UAAAA,EAEAnD,EAAAqE,SAAA,SAAAC,GACA,GAAAC,IAAA,EACAC,EAAA,WACAtE,EAAAuE,kBACAvE,EAAAwE,oBAAA,mBAAAC,GACA3E,EAAA0E,oBAAA,OAAAC,KAEAzE,EAAA0E,YAAA,qBAAAD,GACA3E,EAAA4E,YAAA,SAAAD,KAGAA,EAAA,WACAJ,IAAArE,EAAAuE,kBAAA,SAAAI,MAAAC,MAAA,aAAA5E,EAAA6E,aACAR,GAAA,EACAC,IACAF,KAIA,IAAA,aAAApE,EAAA6E,WACAT,QACA,IAAApE,EAAAuE,iBACAvE,EAAAuE,iBAAA,mBAAAE,GACA3E,EAAAyE,iBAAA,OAAAE,OACA,CACAzE,EAAA8E,YAAA,qBAAAL,GACA3E,EAAAgF,YAAA,SAAAL,EAEA,IAAAM,IAAA,CAEA,KACAA,EAAA,OAAAjF,EAAAkF,cAAAhF,EAAAiF,gBACA,MAAAC,IAEAH,GAAAA,EAAAI,WACA,QAAAC,KACA,IAAAf,EAAA,CAEA,IACAU,EAAAI,SAAA,QACA,MAAAD,GACA,MAAAG,YAAAD,EAAA,IAGAf,GAAA,EACAC,IACAF,WAKAtE,OAAAE,SAAAF,OAAAG,aC7IA,SAAAH,GACA,YAEAA,GAAAwF,WACAC,UAAA,YACAC,eAAA,iBACAC,gBAAA,kBACAC,kBAAA,oBACAC,oBAAA,sBACAC,eAAA,iBACAC,aAAA,eACAC,YAAA,cACAC,aAAA,eACAC,mBAAA,qBACAC,YAAA,cACAC,eAAA,iBACAC,OAAA,UAGArG,EAAAsG,SACA9D,KAAAxC,EAAAwF,UAAAC,UACAc,SAAAvG,EAAAwF,UAAAQ,YACAQ,SAAAxG,EAAAwF,UAAAU,mBACAO,MAAAzG,EAAAwF,UAAAE,eACAgB,MAAA1G,EAAAwF,UAAAM,eACAa,KAAA3G,EAAAwF,UAAAO,aACAa,OAAA5G,EAAAwF,UAAAI,kBACAiB,WAAA7G,EAAAwF,UAAAK,sBAGA7F,QC9BA,SAAAA,GACA,YAEAA,GAAA8G,aACAC,UAAA,YACAC,UAAA,YAEAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cACAC,iBAAA,mBACAC,YAAA,cAEAC,qBAAA,uBACAC,0BAAA,4BACAC,qBAAA,uBACAC,8BAAA,gCACAC,0BAAA,4BACAC,qBAAA,uBAEAC,8BAAA,gCACAC,mCAAA,qCACAC,8BAAA,gCACAC,uCAAA,yCACAC,mCAAA,qCACAC,8BAAA,gCAEAC,yBAAA,2BACAC,oBAAA,sBACAC,yBAAA,2BACAC,oBAAA,sBACAC,8BAAA,gCACAC,mBAAA,qBACAC,yBAAA,2BACAC,oBAAA,sBACAC,yBAAA,2BACAC,oBAAA,sBACAC,0BAAA,4BACAC,qBAAA,uBAEAC,oCAAA,sCACAC,+BAAA,iCACAC,oCAAA,sCACAC,+BAAA,iCAEAC,iBAAA,mBACAC,uBAAA,yBACAC,yBAAA,2BACAC,oBAAA,sBACAC,6BAAA,+BACAC,oBAAA,sBACAC,+BAAA,iCACAC,0BAAA,4BAEAC,0BAAA,4BACAC,oBAAA,sBACAC,0BAAA,4BACAC,qBAAA,uBACAC,4BAAA,8BACAC,gCAAA,kCACAC,uBAAA,yBACAC,iCAAA,mCACAC,4BAAA,8BACAC,gCAAA,kCACAC,2BAAA,6BACAC,0BAAA,4BACAC,qBAAA,uBACAC,kCAAA,oCACAC,6BAAA,+BACAC,4BAAA,8BACAC,uBAAA,2BAEA7K,QC3EA,SAAAA,EAAAC,EAAA6G,EAAA1G,GACA,YAEAJ,GAAA8K,QAAA9K,EAAA8K,YAEA7H,OAAA8H,OAAA/K,EAAA8K,SAEAhI,SAAA,SAAAX,GACAA,EAAAA,EAAAA,EAAA,GACA,IAAA9B,GAAA,kBAAA8B,CAEA,OAAA,UAAA6I,GACAA,GAAAlG,KAAAgC,EAAAC,YAEA3G,EAAAC,KAAA,OACAY,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAhL,EAAA8K,QAAAI,SAAAhK,QAOAgK,SAAA,SAAAC,GAGA,MAFAlL,GAAAmL,KAAAD,EAAAC,MAGAtG,KAAAgC,EAAAE,UACAmE,MAAAA,OAIAnL,OAAAA,OAAAC,MAAAD,OAAA8G,YAAA9G,OAAAI,MCnCA,SAAAJ,EAAA8G,EAAA1G,GACA,YAEA,IAAA0K,GAAA9K,EAAA8K,QAAA9K,EAAA8K,WAEA7H,QAAA8H,OAAA/K,EAAA8K,SAEAO,eAAA,SAAAlJ,EAAAmJ,GACA,MAAA,UAAAN,GAEAA,GAAAlG,KAAAgC,EAAAG,mBAEA7G,EAAAJ,EAAAC,MAAAmL,KAAAG,OAAApJ,KAAAA,GAAA,QACAlB,KAAA,SAAAC,GACA,GAAAA,EAAA+J,mBAEA,CAOA,GANAD,EAAAF,EAAAU,WAAAtK,EAAAiB,OAEAjB,EAAAuK,UACAT,EAAAF,EAAAY,mBAAAxK,EAAAiB,KAAA6B,KAAA9C,EAAAuK,WAGAvK,EAAAyK,UAAAzK,EAAAyK,SAAAC,OACA,IAAA,GAAAC,GAAA,EAAAA,EAAA3K,EAAAyK,SAAAC,OAAAC,IACAb,EAAAF,EAAAgB,kBAAA5K,EAAAyK,SAAAE,IAIA3K,GAAA6K,SAAA7K,EAAA6K,QAAAH,QACAZ,EAAAF,EAAAkB,wBACAC,UAAA/K,EAAAiB,KAAA6B,KACA+H,QAAA7K,EAAA6K,WAIA7K,EAAAgL,MAAAhL,EAAAgL,KAAAC,SACAnB,EAAAF,EAAAsB,qBACAH,UAAA/K,EAAAiB,KAAA6B,KACAkI,KAAAhL,EAAAgL,QAIAhL,EAAAmL,sBACArB,EAAAF,EAAAwB,2BAAApL,EAAAiB,KAAA6B,KAAA9C,EAAAmL,uBAGAf,EAAApK,EAAAiB,UAKAqJ,WAAA,SAAAlL,GACA,OACAwE,KAAAgC,EAAAI,YACA5G,KAAAA,IAIAiM,eAAA,SAAAC,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAK,mBAEA/G,EAAAJ,EAAAC,MAAAmL,KAAAG,OAAAiB,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAA4B,WAAAxL,IAEAoK,EAAApK,OAKAwL,WAAA,SAAAC,GACA,OACA7H,KAAAgC,EAAAM,YACAuF,KAAAA,IAIAC,WAAA,SAAAJ,EAAAC,EAAAnB,GACA,MAAA,UAAAN,EAAA6B,GACA7B,GAAAlG,KAAAgC,EAAAK,mBACA6D,GAAAlG,KAAAgC,EAAAyB,2BACAyC,GAAAlG,KAAAgC,EAAAY,4BACAsD,GAAAlG,KAAAgC,EAAAkB,qCACAgD,GAAAlG,KAAAgC,EAAAyC,2BACAyB,GAAAlG,KAAAgC,EAAAmD,8BAEA7J,EAAAJ,EAAAC,MAAAmL,KAAAG,OAAAiB,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACA,GAAAA,EAAA+J,mBAEA,CACAuB,EAAAA,EAAA5K,MAAA,IACA,IAAAkL,GAAAC,SAAAP,EAAA,GAAA,IACArK,EAAA0K,IAAAtB,MAAAyB,KAAA,SAAA7K,GACA,MAAAA,GAAA4B,IAAA,WAAA+I,GAGA9B,GAAAF,EAAA4B,WAAAxL,IACA8J,EAAAF,EAAAmC,4BACA9K,KAAAA,EACA8J,UAAA/K,EAAAuL,SAEAzB,EAAAF,EAAAoC,4BACA/K,KAAAA,EACA8J,UAAA/K,EAAAuL,SAEAzB,EAAAF,EAAAqC,oCACAhL,KAAAA,EACA8J,UAAA/K,EAAAuL,SAEAzB,EAAAF,EAAAsC,2BACAjL,KAAAA,EACA8J,UAAA/K,EAAAuL,SAEAzB,EAAAF,EAAAuC,8BACAlL,KAAAA,EACA8J,UAAA/K,EAAAuL,SAGAnB,EAAApK,OAKAoM,eAAA,SAAA/B,EAAAD,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAO,mBAEAjH,EAAAJ,EAAAC,MAAAmL,KAAAG,MAAAA,EAAA,OACAtK,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAyC,WAAAhC,IAEAD,EAAApK,OAKAqM,WAAA,SAAAZ,GACA,OACA7H,KAAAgC,EAAAQ,YACAqF,KAAAA,IAIAa,eAAA,SAAArL,EAAAmJ,GACA,MAAA,UAAAN,GAIAA,GAAAlG,KAAAgC,EAAAS,mBACAyD,GAAAlG,KAAAgC,EAAAiC,4BACAiC,GAAAlG,KAAAgC,EAAAe,4BACAmD,GAAAlG,KAAAgC,EAAAqB,qCACA6C,GAAAlG,KAAAgC,EAAA6C,iCACAqB,GAAAlG,KAAAgC,EAAA4D,oCAEAtK,EAAAJ,EAAAC,MAAAmL,KAAAG,OAAApJ,KAAAA,GAAA,UACAlB,KAAA,SAAAC,GACAA,EAAA+J,gBAGAD,EAAAF,EAAA2C,WAAAvM,IACA8J,EAAAF,EAAA4C,oBACAzB,UAAA/K,EAAA8C,QAEAgH,EAAAF,EAAA6C,oBACA1B,UAAA/K,EAAA8C,QAEAgH,EAAAF,EAAA8C,4BACA3B,UAAA/K,EAAA8C,QAEAgH,EAAAF,EAAA+C,wBACA5B,UAAA/K,EAAA8C,QAEAgH,EAAAF,EAAAgD,2BACA7B,UAAA/K,EAAA8C,SAGAsH,EAAApK,OAKAuM,WAAA,SAAAd,GACA,OACA7H,KAAAgC,EAAAU,YACAmF,KAAAA,OAIA3M,OAAAA,OAAA8G,YAAA9G,OAAAI,MCtMA,SAAAJ,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACAzC,MAAA,SAAAJ,EAAA8C,GACA,GAAAzB,GAAAC,EAAAK,CAMA,QAJAhM,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MAEA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAAI,MAGA,KAAAzE,GAAAI,YACA,MAAAiE,GAAAiD,IAAAjD,EAAAkD,KAAAN,EAAAI,OAAAF,EAAA3N,MAGA,KAAAwG,GAAAM,YACAoF,EAAAyB,EAAAtB,KAAAH,KAAA5K,MAAA,KACAkL,EAAAC,SAAAP,EAAA,GAAA,IACAC,EAAAwB,EAAAtB,KAAAF,KACA,IAAA6B,GAAA9B,EAAA7K,MAAA,EAEA,OAAAwJ,GAAAoD,IAAA,SAAApM,GACA,MAAAA,GAAA4B,IAAA,WAAA+I,GAAA3K,EAAAqM,MAAAF,KAAA7B,EACAtK,EAAAsM,MAAAH,EAAA7B,GAEAtK,GAIA,KAAA2E,GAAAQ,YACA,MAAA6D,GAAAoD,IAAA,SAAApM,GACA,GAAA6B,GAAA7B,EAAA4B,IAAA,OACA,MAAAC,IACAA,EAAA,IAEA,IAAA0K,GAAAT,EAAAtB,KAAAgC,QAAA3K,EAEA,OAAA7B,GAAA4B,IAAA,WAAA2K,EACAvM,EAAAiM,IAAA,QAAAM,GAEAvM,GAIA,KAAA2E,GAAAU,YAEA,MAAA2D,GAAAyD,OAAA,SAAAzM,GACA,MAAAA,GAAA4B,IAAA,UAAAkK,EAAAtB,KAAA3I,OAGAuK,IAAA,SAAApM,EAAA2K,GACA,MAAA3K,GAAA4B,IAAA,WAAA+I,EACA3K,EAAAiM,IAAA,QAAAtB,GAEA3K,GAIA,SACA,MAAAgJ,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aCvEA,SAAA9G,EAAA8G,EAAA1G,GACA,YAEA,IAAA0K,GAAA9K,EAAA8K,QAAA9K,EAAA8K,WAEA7H,QAAA8H,OAAA/K,EAAA8K,SAEAY,mBAAA,SAAAO,EAAA3L,GACA,OACAwE,KAAAgC,EAAAW,qBACAwE,UAAAA,EACA3L,KAAAA,IAIAuO,uBAAA,SAAArC,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAY,4BAEAtH,EAAAJ,EAAAC,MAAAmL,KAAA0D,cAAAtC,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAiE,mBAAA7N,IAEAoK,EAAApK,OAKA6N,mBAAA,SAAApC,GACA,OACA7H,KAAAgC,EAAAa,qBACAgF,KAAAA,IAIAO,2BAAA,SAAA5M,GACA,OACAwE,KAAAgC,EAAAc,8BACAtH,KAAAA,IAIAqN,mBAAA,SAAArN,GACA,OACAwE,KAAAgC,EAAAgB,qBACAxH,KAAAA,OAKAN,OAAAA,OAAA8G,YAAA9G,OAAAI,MCrDA,SAAAJ,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACAc,aAAA,SAAA3D,EAAA8C,GAMA,OAJAnN,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MACA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAA6D,cAGA,KAAAlI,GAAAW,qBACA,MAAA0D,GAAAsD,OAAAR,EAAAhC,WAAA8B,EAAAI,OAAAF,EAAA3N,MAGA,KAAAwG,GAAAa,qBACA,GAAA6E,GAAAyB,EAAAtB,KAAAH,KAAA5K,MAAA,KAAAD,MAAA,GACA8K,EAAAwB,EAAAtB,KAAAF,KAEA,OAAAtB,GAAAsD,OACAR,EAAAtB,KAAAxK,KAAAqK,EAAA,GAAAA,EAAA,IACAC,EAIA,KAAA3F,GAAAc,8BACA,GAAAqH,GAAAhB,EAAA3N,KAAA6B,KAAA4B,IAAA,OAEA,OAAAoH,GAAA+D,QAAA,SAAAC,GACA,MAAAA,KAAAF,EACAhB,EAAA3N,KAAA2L,UAEAkD,GAIA,KAAArI,GAAAgB,qBACA,MAAAqD,GAAAyD,OAAA,SAAAnD,EAAAQ,GACA,MAAAA,KAAAgC,EAAA3N,KAAA2L,WAIA,SACA,MAAAd,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aCrDA,SAAA9G,EAAA8G,EAAA1G,GACA,YAEA,IAAA0K,GAAA9K,EAAA8K,QAAA9K,EAAA8K,WAEA7H,QAAA8H,OAAA/K,EAAA8K,SAEAwB,2BAAA,SAAAL,EAAA3L,GACA,OACAwE,KAAAgC,EAAAiB,8BACAkE,UAAAA,EACA3L,KAAAA,IAIA8O,+BAAA,SAAA5C,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAkB,qCAEA5H,EAAAJ,EAAAC,MAAAmL,KAAAiB,sBAAAG,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAuE,2BAAAnO,IAEAoK,EAAApK,OAKAmO,2BAAA,SAAA1C,GACA,OACA7H,KAAAgC,EAAAmB,8BACA0E,KAAAA,IAIAQ,mCAAA,SAAA7M,GACA,OACAwE,KAAAgC,EAAAoB,uCACA5H,KAAAA,IAIAsN,2BAAA,SAAAtN,GACA,OACAwE,KAAAgC,EAAAsB,8BACA9H,KAAAA,OAKAN,OAAAA,OAAA8G,YAAA9G,OAAAI,MCrDA,SAAAJ,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACA3B,qBAAA,SAAAlB,EAAA8C,GAMA,OAJAnN,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MACA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAAmE,uBAGA,KAAAxI,GAAAiB,8BACA,MAAAoD,GAAAsD,OAAAR,EAAAhC,WAAA8B,EAAAI,OAAAF,EAAA3N,MAGA,KAAAwG,GAAAmB,8BACA,GAAAuE,GAAAyB,EAAAtB,KAAAH,KAAA5K,MAAA,KAAAD,MAAA,GACA8K,EAAAwB,EAAAtB,KAAAF,KAEA,OAAAtB,GAAAsD,OACAR,EAAAtB,KAAAxK,KAAAqK,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAC,EAIA,KAAA3F,GAAAoB,uCACA,GAAA+G,GAAAhB,EAAA3N,KAAA6B,KAAA4B,IAAA,OAEA,OAAAoH,GAAA+D,QAAA,SAAAC,GACA,MAAAA,KAAAF,EACAhB,EAAA3N,KAAA2L,UAEAkD,GAIA,KAAArI,GAAAsB,8BACA,MAAA+C,GAAAyD,OAAA,SAAAU,EAAArD,GACA,MAAAA,KAAAgC,EAAA3N,KAAA2L,WAIA,SACA,MAAAd,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aCrDA,SAAA9G,EAAA8G,EAAA1G,GACA,YAEA,IAAA0K,GAAA9K,EAAA8K,QAAA9K,EAAA8K,WAEA7H,QAAA8H,OAAA/K,EAAA8K,SAEAyE,sBAAA,SAAApN,EAAA6B,EAAAwL,EAAAlE,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAuB,2BACA2C,GAAAlG,KAAAgC,EAAAyC,2BAEAnJ,EAAAJ,EAAAC,MAAAmL,KAAAqE,cAAAtN,KAAAA,EAAA6B,KAAAA,EAAAwL,MAAAA,GAAA,QACAvO,KAAA,SAAAC,GACAA,EAAA+J,gBAGAD,EAAAF,EAAAgB,kBAAA5K,EAAAiL,UAEAjL,EAAAgL,MACAlB,EAAAF,EAAA4E,gBACAzD,UAAA9J,EACA+J,KAAAhL,EAAAgL,QAIAhL,EAAA6K,SACAf,EAAAF,EAAA6E,mBACA1D,UAAA9J,EACA4J,QAAA7K,EAAA6K,YAIAT,EAAApK,EAAAiL,aAMAL,kBAAA,SAAAa,GACA,OACA7H,KAAAgC,EAAAwB,oBACAqE,KAAAA,IAKAiD,sBAAA,SAAApD,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAyB,2BAEAnI,EAAAJ,EAAAC,MAAAmL,KAAAqE,cAAAjD,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAA+E,kBAAA3O,IAEAoK,EAAApK,OAMA2O,kBAAA,SAAAlD,GACA,OACA7H,KAAAgC,EAAA0B,oBACAmE,KAAAA,IAKAmD,sBAAA,SAAAtD,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAyB,2BACAyC,GAAAlG,KAAAgC,EAAAyC,2BACAyB,GAAAlG,KAAAgC,EAAAmD,8BAEA7J,EAAAJ,EAAAC,MAAAmL,KAAAqE,cAAAjD,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,gBAGAD,EAAAF,EAAA+E,kBAAA3O,IACA8J,EAAAF,EAAAiF,mBACA9D,UAAA/K,EAAAiB,KACA6N,aAAA9O,EAAAiL,QAAAnI,KACAiL,iBAAA/N,EAAA+O,YAEAjF,EAAAF,EAAAoF,sBACAjE,UAAA/K,EAAAiB,KACA6N,aAAA9O,EAAAiL,QAAAnI,KACAiL,iBAAA/N,EAAA+O,aAGA3E,EAAApK,OAMA+L,2BAAA,SAAA3M,GACA,OACAwE,KAAAgC,EAAA2B,8BACAnI,KAAAA,IAKA6P,iBAAA,SAAA3D,EAAAlB,GACA,MAAA,UAAAN,GACAA,GACAlG,KAAAgC,EAAA4B,mBACA8D,KAAAA,IAGApM,EAAAJ,EAAAC,MAAAmL,KAAAgF,mBAAA5D,KAAAA,IACAvL,KAAA,SAAAC,GACAA,EAAA+J,cAGAK,EAAApK,OAMAmP,sBAAA,SAAAlO,EAAAwJ,EAAAL,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAA6B,2BAEAvI,EAAAJ,EAAAC,MAAAmL,KAAAqE,cAAAtN,KAAAA,EAAAwJ,SAAAA,GAAA,OACA1K,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAwF,mBAAAnO,KAAAA,EAAAwJ,SAAAA,KAEAL,EAAApK,OAMAoP,kBAAA,SAAA3D,GACA,OACA7H,KAAAgC,EAAA8B,oBACA+D,KAAAA,IAKA4D,sBAAA,SAAApO,EAAAgK,EAAAb,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAA+B,2BACAmC,GAAAlG,KAAAgC,EAAAyC,2BACAyB,GAAAlG,KAAAgC,EAAA8D,8BAEAxK,EAAAJ,EAAAC,MAAAmL,KAAAqE,cAAAtN,KAAAA,EAAAgK,QAAAA,GAAA,UACAlL,KAAA,SAAAC,GACAA,EAAA+J,gBAGAD,EAAAF,EAAA0F,kBAAAtP,IAEA8J,EAAAF,EAAA2F,mBACAxE,UAAA/K,EAAAiB,KACA6N,aAAA9O,EAAA8C,QAGAgH,EAAAF,EAAA4F,sBACAzE,UAAA/K,EAAAiB,KACA6N,aAAA9O,EAAA8C,SAGAsH,EAAApK,OAMAsP,kBAAA,SAAA7D,GACA,OACA7H,KAAAgC,EAAAgC,oBACA6D,KAAAA,IAKAe,mBAAA,SAAApN,GACA,OACAwE,KAAAgC,EAAAkC,qBACA1I,KAAAA,IAKAqQ,gCAAA,SAAAxO,EAAAgK,EAAAyE,EAAAtF,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAmC,sCAEA7I,EAAAJ,EAAAC,MAAAmL,KAAAyF,wBAAA1O,KAAAA,EAAAgK,QAAAA,EAAAyE,MAAAA,GAAA,OACA3P,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAgG,4BAAA5P,IAEAoK,EAAApK,OAMA4P,4BAAA,SAAAnE,GACA,OACA7H,KAAAgC,EAAAoC,+BACAyD,KAAAA,IAKAoE,gCAAA,SAAA5O,EAAAgK,EAAA6E,EAAA1F,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAqC,sCAEA/I,EAAAJ,EAAAC,MAAAmL,KAAAyF,wBAAA1O,KAAAA,EAAAgK,QAAAA,EAAA6E,KAAAA,GAAA,UACA/P,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAmG,4BAAA/P,IAEAoK,EAAApK,OAQA+P,4BAAA,SAAAtE,GACA,OACA7H,KAAAgC,EAAAsC,+BACAuD,KAAAA,OAKA3M,OAAAA,OAAA8G,YAAA9G,OAAAI,MCzPA,SAAAJ,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACAyB,aAAA,SAAAtE,EAAA8C,GACA,GAAAzB,GACAP,EACAa,EACAwB,EACA7B,CAMA,QAJA3L,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MAEA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAA+F,cAGA,KAAApK,GAAAwB,oBACA,MAAA6C,GAAAiD,IAAAjD,EAAAkD,KAAAN,EAAAI,OAAAF,EAAAtB,MAGA,KAAA7F,GAAA0B,oBAOA,MANAgE,GAAAyB,EAAAtB,KAAAH,KAAA5K,MAAA,KACAqK,EAAA,MAAAO,EAAA,GAAA,GAAAA,EAAA,GACAM,EAAAC,SAAAP,EAAA,GAAA,IACAC,EAAAwB,EAAAtB,KAAAF,MACA6B,EAAA9B,EAAA7K,MAAA,GAEAwJ,EAAAoD,IAAA,SAAApC,GACA,MAAAA,GAAApI,IAAA,eAAAkI,GAAAE,EAAApI,IAAA,WAAA+I,GAAAX,EAAAqC,MAAAF,KAAA7B,EACAN,EAAAgF,MAAAlD,EAAAtB,KAAAR,SAEAA,GAIA,KAAArF,GAAA2B,8BACA,GAAAwH,GAAAhC,EAAA3N,KAAA6B,KAAA4B,IAAA,OAGA,OAFA0I,GAAAwB,EAAA3N,KAAA2L,UAEAd,EAAAoD,IAAA,SAAApC,GACA,MAAAA,GAAApI,IAAA,eAAAkM,EACA9D,EAAAiC,IAAA,YAAA3B,GAEAN,GAIA,KAAArF,GAAA4B,mBAMA,MALA8D,GAAAyB,EAAAzB,KAAA5K,MAAA,KACAqK,EAAA,MAAAO,EAAA,GAAA,GAAAA,EAAA,GACAM,EAAAC,SAAAP,EAAA,GAAA,IACA8B,EAAA9B,EAAA7K,MAAA,GAEAwJ,EAAAoD,IAAA,SAAApC,GACA,MAAAA,GAAApI,IAAA,eAAAkI,GAAAE,EAAApI,IAAA,WAAA+I,EACAX,EAAAiF,SAAA9C,GAEAnC,GAIA,KAAArF,GAAA8B,oBACA,MAAAuC,GAAAoD,IAAA,SAAApC,GACA,GAAAA,EAAApI,IAAA,eAAAkK,EAAAtB,KAAAxK,KAAA,CACA,GAAA2K,GAAAmB,EAAAtB,KAAAhB,SAAAgD,QAAAxC,EAAApI,IAAA,QAEA,IAAAoI,EAAApI,IAAA,WAAA+I,EACA,MAAAX,GAAAiC,IAAA,QAAAtB,GAGA,MAAAX,IAIA,KAAArF,GAAAgC,oBAIA,MAHAmD,GAAA,MAAAgC,EAAAtB,KAAAxK,KAAA,GAAA8L,EAAAtB,KAAAxK,KACA2K,KAEA3B,EAAAyD,OAAA,SAAAzC,GACA,QAAAA,EAAApI,IAAA,UAAAkK,EAAAtB,KAAA3I,MAAAmI,EAAApI,IAAA,eAAAkI,KAGAsC,IAAA,SAAApC,GACA,MAAAA,GAAApI,IAAA,eAAAkI,IACAa,IAEAX,EAAApI,IAAA,WAAA+I,GACAX,EAAAiC,IAAA,QAAAtB,GAGAX,GAIA,KAAArF,GAAAkC,qBACA,MAAAmC,GAAAyD,OAAA,SAAAzC,GACA,MAAAA,GAAApI,IAAA,eAAAkK,EAAA3N,KAAA2L,WAIA,KAAAnF,GAAAoC,+BACA,MAAAiC,GAAAoD,IAAA,SAAApC,GACA,MAAAA,GAAApI,IAAA,eAAAkK,EAAAtB,KAAAxK,MAAAgK,EAAApI,IAAA,UAAAkK,EAAAtB,KAAAR,QACAA,EACAiC,IAAA,cAAAH,EAAAtB,KAAA0E,aACA5C,OAAA,iBAAA,QAAAR,EAAAtB,KAAAiE,OAEAzE,GAIA,SACA,MAAAhB,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aC3HA,SAAA9G,EAAA8G,GACA,YAEA9G,GAAA8K,QAAA9K,EAAA8K,YAEA7H,OAAA8H,OAAA/K,EAAA8K,SAEAsB,oBAAA,SAAA9L,GACA,OACAwE,KAAAgC,EAAAwC,uBACAhJ,KAAAA,IAIAoP,eAAA,SAAApP,GACA,OACAwE,KAAAgC,EAAAuC,iBACA/I,KAAAA,IAIAyP,kBAAA,SAAAzP,GACA,OACAwE,KAAAgC,EAAA0C,oBACAlJ,KAAAA,IAIA8M,0BAAA,SAAA9M,GACA,OACAwE,KAAAgC,EAAA2C,6BACAnJ,KAAAA,IAIAmQ,kBAAA,SAAAnQ,GACA,OACAwE,KAAAgC,EAAA4C,oBACApJ,KAAAA,IAIAuN,uBAAA,SAAAvN,GACA,OACAwE,KAAAgC,EAAA8C,0BACAtJ,KAAAA,OAMAN,OAAAA,OAAA8G,aCnDA,SAAA9G,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACAsD,YAAA,SAAAnG,EAAA8C,GACA,GAAAhC,KAMA,QAJAnL,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MACA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAAoG,aAGA,KAAAzK,GAAAwC,uBACA,MAAA6B,GAAAiD,IAAAH,EAAA3N,KAAA2L,UAAAgC,EAAA3N,KAAA4L,KAGA,KAAApF,GAAAuC,iBACA,MAAA8B,GAAAoD,IAAA,SAAApM,EAAA8J,GACA,MAAAgC,GAAA3N,KAAA2L,YAAAA,EACA9J,EAAAoM,IAAA,SAAA5C,GACA,MAAAA,GAAAyC,IAAAzC,EAAA0C,KAAAN,EAAAI,OAAAF,EAAA3N,KAAA4L,SAGA/J,GAIA,KAAA2E,GAAA0C,oBAGA,MAFAyC,GAAA,MAAAgC,EAAA3N,KAAA2L,UAAA,GAAAgC,EAAA3N,KAAA2L,UAEAd,EAAAoD,IAAA,SAAApM,EAAAgN,GACA,MAAAlD,KAAAkD,EACAhN,EAAAoM,IAAA,SAAA5C,GACA,MAAAA,GAAA4C,IAAA,SAAApC,GAEA,MAAAA,GAAAqC,OAAA,cAAA,WAAAP,EAAA3N,KAAA2O,iBAEA9C,EAAAsC,OACA,cAAA,QACAR,EAAA3N,KAAA0P,cAGA7D,MAIAhK,GAIA,KAAA2E,GAAA2C,6BACA,GAAA+H,GAAAvD,EAAA3N,KAAA6B,KAAA4B,IAAA,OAEA,OAAAoH,GAAA+D,QAAA,SAAAjD,GACA,MAAAA,KAAAuF,EACAvD,EAAA3N,KAAA2L,UAEAA,GAIA,KAAAnF,GAAA4C,oBAGA,MAFAuC,GAAA,MAAAgC,EAAA3N,KAAA2L,UAAA,GAAAgC,EAAA3N,KAAA2L,UAEAd,EAAAoD,IAAA,SAAApM,EAAAgN,GACA,MAAAlD,KAAAkD,EACAhN,EAAAoM,IAAA,SAAA5C,GACA,MAAAA,GAAAiD,OAAA,SAAAzC,GACA,MAAAA,GAAAqC,OAAA,cAAA,WAAAP,EAAA3N,KAAA0P,iBAIA7N,GAIA,KAAA2E,GAAA8C,0BACA,MAAAuB,GAAAyD,OAAA,SAAA1C,EAAAD,GACA,MAAAA,KAAAgC,EAAA3N,KAAA2L,WAIA,SACA,MAAAd,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aC7FA,SAAA9G,EAAAI,EAAA0K,EAAAhE,GACA,YAEA9G,GAAA8K,QAAA9K,EAAA8K,YAEA7H,OAAA8H,OAAA/K,EAAA8K,SAEAkB,uBAAA,SAAA1L,GACA,OACAwE,KAAAgC,EAAA+C,0BACAvJ,KAAAA,IAKAqP,kBAAA,SAAArP,GACA,OACAwE,KAAAgC,EAAAgD,oBACAxJ,KAAAA,IAKAmR,uBAAA,SAAAjF,EAAAC,EAAAnB,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAiD,4BAEA3J,EAAAJ,EAAAC,MAAAmL,KAAAsG,gBAAAlF,KAAAA,EAAAC,MAAAA,IACAxL,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAA6G,mBAAAzQ,IAEAoK,GACAA,EAAApK,OAOAyQ,mBAAA,SAAAhF,GACA,OACA7H,KAAAgC,EAAAkD,qBACA2C,KAAAA,IAKAU,6BAAA,SAAA/M,GACA,OACAwE,KAAAgC,EAAAoD,gCACA5J,KAAAA,IAKA4P,qBAAA,SAAA5P,GACA,OACAwE,KAAAgC,EAAAqD,uBACA7J,KAAAA,IAKAsR,uBAAA,SAAAzP,EAAAgK,EAAA0F,EAAAvG,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAA0D,4BAEApK,EAAAJ,EAAAC,MAAAmL,KAAAsG,gBAAAvP,KAAAA,EAAAgK,QAAAA,EAAA0F,QAAAA,GAAA,UACA5Q,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAgH,mBAAA5Q,IAMAoK,EAAApK,OAMA4Q,mBAAA,SAAAnF,GACA,OACA7H,KAAAgC,EAAA2D,qBACAkC,KAAAA,IAKAmB,0BAAA,SAAAxN,GACA,OACAwE,KAAAgC,EAAA6D,6BACArK,KAAAA,IAKAoQ,qBAAA,SAAApQ,GACA,OACAwE,KAAAgC,EAAA+D,uBACAvK,KAAAA,IAKAyR,6BAAA,SAAA5P,EAAAgK,EAAA0F,EAAAjB,EAAAtF,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAsD,mCAEAhK,EAAAJ,EAAAC,MAAAmL,KAAA4G,cAAA7P,KAAAA,EAAAgK,QAAAA,EAAA0F,QAAAA,EAAAjB,MAAAA,GAAA,OACA3P,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAmH,yBAAA/Q,IAEAoK,EAAApK,OAMA+Q,yBAAA,SAAAtF,GACA,OACA7H,KAAAgC,EAAAuD,4BACAsC,KAAAA,IAKAuF,4BAAA,SAAA/P,EAAAgK,EAAA0F,EAAAb,EAAA1F,GACA,MAAA,UAAAN,GACAA,GAAAlG,KAAAgC,EAAAwD,kCAEAlK,EAAAJ,EAAAC,MAAAmL,KAAA4G,cAAA7P,KAAAA,EAAAgK,QAAAA,EAAA0F,QAAAA,EAAAb,KAAAA,GAAA,UACA/P,KAAA,SAAAC,GACAA,EAAA+J,eAGAD,EAAAF,EAAAqH,wBAAAjR,IAEAoK,EAAApK,OAQAiR,wBAAA,SAAAxF,GACA,OACA7H,KAAAgC,EAAAyD,2BACAoC,KAAAA,OAKA3M,OAAAA,OAAAI,KAAAJ,OAAA8K,QAAA9K,OAAA8G,aCnKA,SAAA9G,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACA0D,eAAA,SAAAvG,EAAA8C,GACA,GAAAhC,EAMA,QAJAnL,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MAEA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAAuG,eAGA,KAAA5K,GAAA+C,0BACA,MAAAsB,GAAAiD,IAAAH,EAAA3N,KAAA2L,UAAAgC,EAAA3N,KAAAyL,QAGA,KAAAjF,GAAAgD,oBACA,MAAAqB,GAAAoD,IAAA,SAAApM,EAAA8J,GACA,MAAAA,KAAAgC,EAAA3N,KAAA2L,UACA9J,EAAAiQ,OAAArE,EAAAI,OAAAF,EAAA3N,KAAAyL,UAEA5J,GAIA,KAAA2E,GAAAkD,qBACA,GAAAwC,GAAAyB,EAAAtB,KAAAH,KAAA5K,MAAA,KACAyQ,EAAA,MAAA7F,EAAA,GAAA,GAAAA,EAAA,GACA8F,EAAA9F,EAAA,GACAqF,EAAArF,EAAA,GAEA+F,EAAApH,EAAApH,IAAAsO,GAAAG,UAAA,SAAAC,GACA,MAAAA,GAAA1O,IAAA,QAAA8N,GAAAY,EAAA1O,IAAA,iBAAAuO,GAGA,OAAAC,GAAA,EACApH,EAGAA,EAAAsD,OACA4D,EAAAE,GACApH,EAAAqD,OAAA6D,EAAAE,IAAApB,MAAAlD,EAAAtB,KAAA8F,OAIA,KAAA3L,GAAAoD,gCACA,GAAAsH,GAAAvD,EAAA3N,KAAA6B,KAAA4B,IAAA,OAEA,OAAAoH,GAAA+D,QAAA,SAAAjD,GACA,MAAAA,KAAAuF,EACAvD,EAAA3N,KAAA2L,UAEAA,GAIA,KAAAnF,GAAAqD,uBAGA,MAFA8B,GAAA,MAAAgC,EAAA3N,KAAA2L,UAAA,GAAAgC,EAAA3N,KAAA2L,UAEAd,EAAAoD,IAAA,SAAApM,EAAAgN,GACA,MAAAlD,KAAAkD,EACAhN,EAAAoM,IAAA,SAAAkE,GACA,MAAAA,GAAA1O,IAAA,iBAAAkK,EAAA3N,KAAA2O,iBACAwD,EAAArE,IAAA,cAAAH,EAAA3N,KAAA0P,cAEAyC,IAGAtQ,GAIA,KAAA2E,GAAA6D,6BACA,MAAAQ,GAAAyD,OAAA,SAAA7C,EAAAE,GACA,MAAAA,KAAAgC,EAAA3N,KAAA2L,WAIA,KAAAnF,GAAA+D,uBAGA,MAFAoB,GAAA,MAAAgC,EAAA3N,KAAA2L,UAAA,GAAAgC,EAAA3N,KAAA2L,UAEAd,EAAAoD,IAAA,SAAApM,EAAAuQ,GACA,MAAAzG,KAAAyG,EACAvQ,EAAAyM,OAAA,SAAA6D,GACA,MAAAA,GAAA1O,IAAA,iBAAAkK,EAAA3N,KAAA0P,eAGA7N,GAIA,KAAA2E,GAAAuD,4BACA,MAAAc,GAAAoD,IAAA,SAAApM,EAAA8J,GACA,MAAAA,KAAAgC,EAAAtB,KAAAxK,KACAA,EAAAoM,IAAA,SAAAkE,GACA,MAAAA,GAAA1O,IAAA,iBAAAkK,EAAAtB,KAAAR,SAAAsG,EAAA1O,IAAA,QAAAkK,EAAAtB,KAAAgG,SACAF,EACArE,IAAA,cAAAH,EAAAtB,KAAA0E,aACA5C,OAAA,iBAAA,QAAAR,EAAAtB,KAAAiE,OAEA6B,IAGAtQ,GAIA,SACA,MAAAgJ,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aCvHA,SAAA9G,EAAA+N,EAAAjH,GACA,YAEA9G,GAAAgO,SAAAhO,EAAAgO,aAEA/K,OAAA8H,OAAA/K,EAAAgO,UACAjL,cAAA,SAAAoI,EAAA8C,GAMA,OAJAnN,SAAAqK,IACAA,EAAA4C,EAAAG,OAGAD,EAAAnJ,MACA,IAAAgC,GAAAE,UACA,MAAA+G,GAAAI,OAAAF,EAAA9C,MAAApI,cAEA,SACA,MAAAoI,QAIAnL,OAAAA,OAAA+N,UAAA/N,OAAA8G,aCrBA,SAAA9G,EAAA4S,EAAA5E,GACA,YAEAhO,GAAA6S,aAAAD,EAAAE,gBAAA9E,IACAhO,OAAAA,OAAA4S,MAAA5S,OAAAgO,UCJA,SAAAhO,EAAA4S,EAAAG,EAAAjI,EAAA3H,EAAAkB,EAAApC,GACA,YAEAoC,GAAAlB,EAAAC,KAEA,IAAA4P,GAAAhT,EAAAiT,sCAAAL,EAAAM,OACAlT,GAAAG,YAAAyS,EAAAO,YACAnT,EAAA6S,gBAEAG,EACAJ,EAAAQ,gBAAAL,EAAAA,aAIA,IAAA5Q,GAAAF,GACAjC,GAAAG,YAAA6K,SAAAF,EAAAhI,SAAAX,KAEAnC,OAAAA,OAAA4S,MAAA5S,OAAA+S,WAAA/S,OAAA8K,QAAA9K,OAAAmD,UAAAnD,OAAAqE,SAAArE,OAAAiC","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function(window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS:'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRY_GALLERY: 'INIT_ORDER_SECTION_ENTRY_GALLERY',\n    ORDER_SECTION_ENTRY_GALLERY: 'ORDER_SECTION_ENTRY_GALLERY',\n    INIT_DELETE_ENTRY_GALLERY_IMAGE: 'INIT_DELETE_ENTRY_GALLERY_IMAGE',\n    DELETE_ENTRY_GALLERY_IMAGE: 'DELETE_ENTRY_GALLERY_IMAGE',\n    INIT_DELETE_SECTION_ENTRY: 'INIT_DELETE_SECTION_ENTRY',\n    DELETE_SECTION_ENTRY: 'DELETE_SECTION_ENTRY',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function(data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function(sites, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function(site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function(site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function(resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function(path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function(site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTIONS });\n\n        sync(window.Berta.urls.siteSections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function(site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function(site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function(site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSiteSectionBackgrounds` is called after delete which updates state\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function(state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRY });\n\n        sync(window.Berta.urls.sectionEntries, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n            }\n            if (onComplete) {\n              onComplete(response);\n            }\n          });\n      };\n    },\n\n\n    updateSectionEntry: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initDeleteSectionEntry: function(site, section, entryId, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SECTION_ENTRY });\n\n        sync(window.Berta.urls.sectionEntries, {site: site, section: section, entryId: entryId}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSectionEntry(response));\n\n              // @todo update populated tags\n\n              // @todo update section - has_direct_content, SectionEntryCount\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSectionEntry: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initOrderSectionEntryGallery: function(site, section, entryId, files, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SECTION_ENTRY_GALLERY });\n\n        sync(window.Berta.urls.entryGallery, {site: site, section: section, entryId: entryId, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntryGallery(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSectionEntryGallery: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRY_GALLERY,\n        resp: resp\n      };\n    },\n\n\n    initDeleteEntryGalleryImage: function(site, section, entryId, file, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_ENTRY_GALLERY_IMAGE });\n\n        sync(window.Berta.urls.entryGallery, {site: site, section: section, entryId: entryId, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteEntryGalleryImage(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSectionEntryGallery` is called after delete which updates state\n    deleteEntryGalleryImage: function(resp) {\n      return {\n        type: ActionTypes.DELETE_ENTRY_GALLERY_IMAGE,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function(state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var siteName = path[0] === '0' ? '' : path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index],\n            state.getIn([siteName, index]).merge(action.resp.entry)\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRY_GALLERY:\n          return state.map(function (site, site_name) {\n            if (site_name === action.resp.site) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section && entry.get('id') === action.resp.entry_id) {\n                  return entry\n                    .set('mediafolder', action.resp.mediafolder)\n                    .setIn(['mediaCacheData', 'file'], action.resp.files);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}