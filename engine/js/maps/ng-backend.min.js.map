{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","sync","url","data","method","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","log","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","redux_store","getState","site_templates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","index","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_DELETE_SITE","DELETE_SITE","INIT_ORDER_SITES","ORDER_SITES","UPDATE_SITE_SETTINGS","SITE_SETTINGS_UPDATED","SITE_SETTINGS_CREATED","DELETE_SITE_SETTINGS","SITE_SETTINGS_DELETED","RENAME_SITE_SETTINGS_SITENAME","UPDATE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_UPDATED","SITE_TEMPLATE_SETTINGS_CREATED","DELETE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_DELETED","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RESET_SITE_SECTION","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","RENAME_SITE_SECTIONS_SITENAME","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","ADD_SECTION_TAGS","INIT_UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","Actions","assign","dispatch","getStore","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","siteSettingsCreated","sections","length","i","createSiteSection","tags","section","addSiteSectionsTags","site_name","siteTemplateSettings","siteTemplateSettingsCreated","renameSite","path","value","order","parseInt","find","updateSite","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","initUpdateSite","resp","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","initOrderSites","orderSites","reducers","action","Immutable","Map","fromJS","set","size","prop","map","getIn","setIn","filter","new_order","indexOf","updateSiteSettings","site_settings","siteSettingsUpdated","section_old_name","mapKeys","k","updateSiteTemplateSettings","site_template_settings","siteTemplateSettingsUpdated","initCreateSiteSection","title","site_sections","addSectionTags","initRenameSiteSection","updateSiteSection","renameSectionTags","section_name","old_name","initUpdateSiteSection","resetSiteSection","site_sections_reset","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","initOrderSiteSections","orderSiteSections","initDeleteSiteSectionBackground","file","site_section_backgrounds","deleteSiteSectionBackground","initOrderSiteSectionBackgrounds","files","orderSiteSectionBackgrounds","merge","deleteIn","mediafolder","section_tags","section_entries","root_reducer","Redux","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReduxThunk"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document) {\n  'use strict';\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        console.log('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().site_templates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n        templates: {}\n      };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n            templateList.querySelectorAll('script'),\n            0\n          );\n\n      templates.forEach(function(template, index){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<\\%=([^%>]+)\\%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener(\"DOMContentLoaded\", completed);\n            window.removeEventListener(\"load\", completed);\n          } else {\n            document.detachEvent(\"onreadystatechange\", completed);\n            window.detachEvent(\"onload\", completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === \"load\" || document.readyState === \"complete\")) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === \"complete\") {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener(\"DOMContentLoaded\", completed);\n      window.addEventListener(\"load\", completed);\n    } else {\n      document.attachEvent(\"onreadystatechange\", completed);\n      window.attachEvent(\"onload\", completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) {}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n              top.doScroll(\"left\");\n          } catch(e) {\n              return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: editables.xEditable,\n    longtext: editables.xEditableTA,\n    richtext: editables.xEditableMCESimple,\n    color: editables.xEditableColor,\n    image: editables.xEditableImage,\n    icon: editables.xEditableICO,\n    select: editables.xEditableSelectRC,\n    fontselect: editables.xEditableFontSelect\n  };\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    SITE_SETTINGS_UPDATED: 'SITE_SETTINGS_UPDATED',\n    SITE_SETTINGS_CREATED: 'SITE_SETTINGS_CREATED',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n    SITE_SETTINGS_DELETED: 'SITE_SETTINGS_DELETED',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_UPDATED: 'SITE_TEMPLATE_SETTINGS_UPDATED',\n    SITE_TEMPLATE_SETTINGS_CREATED: 'SITE_TEMPLATE_SETTINGS_CREATED',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_DELETED: 'SITE_TEMPLATE_SETTINGS_DELETED',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    INIT_DELETE_SITE_SECTIONS:'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS'\n  };\n})(window, document);\n","(function(window, Berta) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, Berta);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch, getStore) {\n\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone\n              // related sections, entries, tags, settings, template settings\n\n              dispatch(Actions.createSite(response.site));\n              if (response.settings) {\n                dispatch(Actions.siteSettingsCreated(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.siteTemplateSettingsCreated(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function(data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initUpdateSite: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function(site, onComplete) {\n      return function (dispatch, getStore) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS });\n        dispatch({ type: ActionTypes.DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    },\n\n    initOrderSites: function(sites, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    }\n\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, site, order, sites = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sites SET_STATE reducer:', action);\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          console.log('Sites reducer:', action);\n\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          console.log('Sites reducer:', action);\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          console.log('Sites reducer:', action);\n\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.site_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    siteSettingsCreated: function (site_name, data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_DELETED,\n        data: data\n      };\n    },\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site settings reducer:', action);\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.SITE_SETTINGS_UPDATED:\n          console.log('Settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.SITE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_SETTINGS_DELETED:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.site_template_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteTemplateSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteTemplateSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    siteTemplateSettingsCreated: function(site_name, data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED,\n        data: data\n      };\n    }\n  });\n\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_template_settings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED:\n          console.log('Template settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function(site, name, title, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.site_sections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function(resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.site_sections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initUpdateSiteSection: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n\n        sync(window.Berta.urls.site_sections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function(path, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.site_sections_reset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initDeleteSiteSection: function(site, section, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.site_sections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initOrderSiteSections: function(site, sections, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTIONS });\n\n        sync(window.Berta.urls.site_sections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function(site, section, file, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND });\n\n        sync(window.Berta.urls.site_section_backgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function(site, section, files, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS });\n\n        sync(window.Berta.urls.site_section_backgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_sections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value,\n          section,\n          section_idx,\n          sections = [],\n          files = [],\n          new_files = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sections reducer:', action);\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          console.log('Sections reducer:', action);\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          console.log('Sections reducer:', action);\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          console.log('Sections reducer:', action, state);\n\n          // @TODO delete related data from state\n\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    section_tags: function(state, action) {\n      var tag_idx, tags, site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Tags reducer:', action);\n\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          site_name = action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    //\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    section_entries: function(state, action) {\n      var entry, entries = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Entries reducer:', action);\n          return Immutable.fromJS(action.state.section_entries);\n\n        // case ActionTypes.SECTION_CREATED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     console.log('Entries reducer:', action);\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_templates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_templates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  redux_store.dispatch(Actions.getState(site));\n\n})(window, document);\n"]}