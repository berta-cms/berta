{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","token","getCookie","Promise","resolve","maxChecks","syncState","then","reponse","JSON","parse","stringify","interval","setInterval","clearInterval","fetch","credentials","headers","Accept","Content-Type","X-Authorization","body","undefined","response","status","BertaHelpers","logoutUser","Error","json","cname","name","ca","cookie","split","i","length","c","charAt","substring","indexOf","getQueryParams","pairs","location","search","slice","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_ORDER_SECTION_TAGS","ORDER_SECTION_TAGS","INIT_UPDATE_SECTION_TAGS","UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_CREATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","INIT_MOVE_ENTRY_TO_SECTION","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRIES","ORDER_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRY_GALLERY","ORDER_SECTION_ENTRY_GALLERY","INIT_DELETE_ENTRY_GALLERY_IMAGE","DELETE_ENTRY_GALLERY_IMAGE","INIT_DELETE_SECTION_ENTRY","DELETE_SECTION_ENTRY","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","initOrderSectionTags","tag","sectionTags","orderSectionTags","updateSectionTags","section_tags","some","site_old_name","initCreateSectionEntry","before_entry","sectionEntries","initUpdateSectionEntry","updateSectionEntry","section_order","has_direct_content","initOrderSectionEntries","entryId","orderSectionEntries","initEntryMoveToSection","currentSection","toSection","sectionEntriesMove","initDeleteSectionEntry","deleteSectionEntry","entry_count","initOrderSectionEntryGallery","entryGallery","orderSectionEntryGallery","initDeleteEntryGalleryImage","deleteEntryGalleryImage","concat","siteName","sectionName","index","findIndex","entry","deletedEntry","entry_id","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    var token = window.getCookie('token');\n    method = method || 'PATCH';\n\n    return new Promise(function(resolve) {\n      var maxChecks = 5;\n\n      if (typeof window.syncState === 'function') {\n        resolve(window.syncState(url, data, method).then(function(reponse) {\n          return JSON.parse(JSON.stringify(reponse));\n        }));\n        return;\n      }\n\n      var interval = setInterval(function() {\n        if (typeof window.syncState === 'function') {\n          clearInterval(interval);\n          resolve(window.syncState(url, data, method).then(function(reponse) {\n              return JSON.parse(JSON.stringify(reponse));\n          }));\n        }\n\n        if (maxChecks === 0) {\n          clearInterval(interval);\n          resolve(fetch(\n            url,\n            {\n              method: method,\n              credentials: 'include',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-Authorization': 'Bearer ' + token\n              },\n              body: method === 'GET' ? undefined : JSON.stringify(data)\n            }\n          ).then(function (response) {\n            if (response.status === 401) {\n              window.BertaHelpers.logoutUser();\n              throw new Error('Unauthorized');\n            }\n            return response.json();\n          }));\n        }\n        maxChecks =- 1;\n      }, 200);\n    });\n  };\n\n  window.getCookie = function (cname) {\n    var name = cname + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function (window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS: 'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_ORDER_SECTION_TAGS: 'INIT_ORDER_SECTION_TAGS',\n    ORDER_SECTION_TAGS: 'ORDER_SECTION_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    UPDATE_SECTION_TAGS: 'UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_CREATE_SECTION_ENTRY: 'INIT_CREATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    INIT_MOVE_ENTRY_TO_SECTION: 'INIT_MOVE_ENTRY_TO_SECTION',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRIES: 'INIT_ORDER_SECTION_ENTRIES',\n    ORDER_SECTION_ENTRIES: 'ORDER_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRY_GALLERY: 'INIT_ORDER_SECTION_ENTRY_GALLERY',\n    ORDER_SECTION_ENTRY_GALLERY: 'ORDER_SECTION_ENTRY_GALLERY',\n    INIT_DELETE_ENTRY_GALLERY_IMAGE: 'INIT_DELETE_ENTRY_GALLERY_IMAGE',\n    DELETE_ENTRY_GALLERY_IMAGE: 'DELETE_ENTRY_GALLERY_IMAGE',\n    INIT_DELETE_SECTION_ENTRY: 'INIT_DELETE_SECTION_ENTRY',\n    DELETE_SECTION_ENTRY: 'DELETE_SECTION_ENTRY',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function (data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function (sites, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITES\n        });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function (site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          name: name,\n          title: title\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function (resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function (path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, {\n          path: path\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function (site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTIONS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          sections: sections\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({\n                site: site,\n                sections: sections\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function (site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          section: section\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function (site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function (site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSiteSectionBackgrounds` is called after delete which updates state\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function (state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3); // \"title\" or \"@attributes/published\"\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n            // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    initOrderSectionTags: function (site, section, tag, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.sectionTags, {\n          site: site,\n          section: section,\n          tag: tag,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionTags(response));\n            }\n            onComplete();\n          });\n      };\n    },\n\n    orderSectionTags: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    updateSectionTags: function (data) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function (state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                    var tags = section.get('tag').map(function (tag) {\n                      return tag.set('order', action.data.order.indexOf(tag.getIn(['@attributes', 'name'])));\n                    });\n\n                    return section.set('tag', tags);\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n\n                if (sections.some(function (section) { return section && section.getIn(['@attributes', 'name']) === action.data.section_name;})) {\n                  return sections.map(function (section) {\n                    if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                      return section.merge(action.data.tags);\n                    }\n                    return section;\n                  });\n                }\n\n                if (!action.data.tags) {\n                  return sections;\n                }\n\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n\n    initCreateSectionEntry: function (site, section, tag, before_entry, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          tag: tag,\n          before_entry: before_entry\n        }, 'POST')\n          .then(function (response) {\n            onComplete(response);\n          });\n      };\n    },\n\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n\n              if (response.section) {\n                dispatch({\n                  type: ActionTypes.INIT_UPDATE_SITE_SECTION\n                });\n\n                dispatch(Actions.updateSiteSection({\n                  'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                  'section': response.section,\n                  'value': response.has_direct_content\n                }));\n              }\n\n              if (response.tags) {\n                dispatch(Actions.updateSectionTags(response));\n              }\n            }\n            if (onComplete) {\n              onComplete(response);\n            }\n          });\n      };\n    },\n\n\n    updateSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initOrderSectionEntries: function (site, section, entryId, value) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntries(response));\n            }\n          });\n      };\n    },\n\n    orderSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initEntryMoveToSection: function (site, currentSection, entryId, toSection, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_MOVE_ENTRY_TO_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntriesMove, {\n          site: site,\n          currentSection: currentSection,\n          entryId: entryId,\n          toSection: toSection\n        })\n          .then(onComplete);\n      };\n    },\n\n    initDeleteSectionEntry: function (site, section, entryId, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRY\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSectionEntry(response));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/entry_count',\n                'section': response.section,\n                'value': response.entry_count\n              }));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                'section': response.section,\n                'value': response.has_direct_content\n              }));\n\n              dispatch(Actions.updateSectionTags(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initOrderSectionEntryGallery: function (site, section, entryId, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRY_GALLERY\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntryGallery(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSectionEntryGallery: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRY_GALLERY,\n        resp: resp\n      };\n    },\n\n\n    initDeleteEntryGalleryImage: function (site, section, entryId, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_ENTRY_GALLERY_IMAGE\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteEntryGalleryImage(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSectionEntryGallery` is called after delete which updates state\n    deleteEntryGalleryImage: function (resp) {\n      return {\n        type: ActionTypes.DELETE_ENTRY_GALLERY_IMAGE,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function (state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var siteName = path[0] === '0' ? '' : path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index],\n            state.getIn([siteName, index]).merge(action.resp.entry)\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_name) {\n                  return entry.set('order', action.data.order.indexOf(entry.get('id')));\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRY:\n          site_name = action.resp.site_name === '0' ? '' : action.resp.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              var deletedEntry = site.find(function (entry) {\n                return entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id;\n              });\n\n              return site.filter(function (entry) {\n                return !(entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id);\n              }).map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section_name && entry.get('order') > deletedEntry.get('order')) {\n                  return entry.set('order', entry.get('order') - 1);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRY_GALLERY:\n          return state.map(function (site, site_name) {\n            if (site_name === action.resp.site) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section && entry.get('id') === action.resp.entry_id) {\n                  return entry\n                    .set('mediafolder', action.resp.mediafolder)\n                    .setIn(['mediaCacheData', 'file'], action.resp.files);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}