{"version":3,"sources":["ActionTypes.js","StateActions.js","SiteActions.js","middleware.js","sites.js","index.js"],"names":["window","document","ActionTypes","GET_STATE","SET_STATE","CREATE_SITE","SITE_CREATED","UPDATE_SITE","SITE_UPDATED","DELETE_SITE","SITE_DELETED","ORDER_SITES","Actions","Object","assign","getState","type","meta","remote","url","dispatch","setState","state","API_ROOT","createSite","site","onComplete","method","data","siteCreated","callback","updateSite","path","value","siteUpdated","resp","deleteSite","encodeURIComponent","siteDeleted","orderSites","sites","checkStatus","response","status","error","Error","statusText","redux_middleware","store","next","action","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","json","error_message","console","log","reducers","site_name","site_idx","Immutable","Map","fromJS","getIn","toJSON","push","setIn","split","name","findIndex","idx","splice","forEach","new_idx","find","old_idx","length","root_reducer","Redux","combineReducers","createStoreWithMiddleware","applyMiddleware","createStore","redux_store"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n    CREATE_SITE: 'CREATE_SITE',\n    SITE_CREATED: 'SITE_CREATED',\n    UPDATE_SITE: 'UPDATE_SITE',\n    SITE_UPDATED: 'SITE_UPDATED',\n    DELETE_SITE: 'DELETE_SITE',\n    SITE_DELETED: 'SITE_DELETED',\n    ORDER_SITES: 'ORDER_SITES'\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    getState: function() {\n      return {\n        type: ActionTypes.GET_STATE,\n        meta: {\n          remote: true,\n          url: '/_api/v1/state',\n          dispatch: 'setState'\n        }\n      };\n    },\n    setState: function(state) {\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  var API_ROOT = '/_api/v1/';\n\n  Object.assign(window.Actions, {\n    createSite: function(site, onComplete) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'create-site',\n          method: 'POST',\n          dispatch: 'siteCreated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete,\n          data: {site: site}\n        }\n      };\n    },\n    siteCreated: function(site, callback) {\n      return {\n        type: ActionTypes.SITE_CREATED,\n        site: site\n      };\n    },\n    updateSite: function(path, value, onComplete) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'update-site',\n          method: 'PATCH',\n          data: {path: path, value: value},\n          dispatch: 'siteUpdated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path,\n        value: value\n      };\n    },\n    siteUpdated: function(resp) {\n      return {\n        type: ActionTypes.SITE_UPDATED,\n        resp: resp\n      };\n    },\n    deleteSite: function(site, onComplete) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'delete-site/' + encodeURIComponent(site),\n          method: 'DELETE',\n          dispatch: 'siteDeleted',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        site: site\n      };\n    },\n    siteDeleted: function(resp) {\n      return {\n        type: ActionTypes.SITE_DELETED,\n        resp: resp\n      };\n    },\n    orderSites: function(sites, onComplete) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'order-sites',\n          data: sites,\n          onComplete: onComplete\n        },\n        sites: sites\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  window.redux_middleware = function (store) {\n    return function (next) {\n      return function (action) {\n        if (action.meta && action.meta.remote) {\n          var method =  action.meta.method ? action.meta.method : 'GET';\n\n          fetch(\n            action.meta.url,\n            {\n              method: method,\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: method === 'get' ? undefined : JSON.stringify(action.meta.data)\n            }\n          )\n            .then(checkStatus)\n            .then(function(resp) {\n              return resp.json();\n            })\n            .then(function(json) {\n              if (action.meta && action.meta.dispatch && !json.error_message) {\n                store.dispatch(Actions[action.meta.dispatch](json));\n              }\n\n              if (action.meta && action.meta.onComplete) {\n                action.meta.onComplete(json);\n              }\n            })\n            .catch(function(error) {\n              console.log('Request failed:', error);\n            });\n        }\n\n        return next(action);\n      };\n    };\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, site, site_name, site_idx, sites = [];\n\n      console.log(action);\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS({site: action.state.site});\n\n        case ActionTypes.SITE_CREATED:\n          sites = state.getIn(['site']).toJSON();\n          sites.push(action.site);\n          return state.setIn(['site'], Immutable.fromJS(sites));\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.path.split('/');\n          value = action.value;\n\n          return state.setIn(path, value);\n\n        case ActionTypes.SITE_UPDATED:\n          path = action.resp.path.split('/');\n          value = action.resp.value;\n\n          return state.setIn(path, value);\n\n        case ActionTypes.SITE_DELETED:\n          sites = state.getIn(['site']).toJSON();\n          site_name = action.resp.name === '0' ? '' : action.resp.name;\n          site_idx = sites.findIndex(function (site, idx) {\n            return site.name === site_name;\n          });\n\n          if (site_idx > -1) {\n            sites.splice(site_idx, 1);\n            return state.setIn(['site'], Immutable.fromJS(sites));\n          }\n\n          return state;\n\n        case ActionTypes.ORDER_SITES:\n          action.sites.forEach(function(site, new_idx) {\n            var site_name = site === '0' ? '' : site;\n\n            site = state.getIn(['site']).toJSON().find(function(site, old_idx) {\n              return site.name === site_name;\n            });\n\n            if (site) {\n              sites.push(site);\n            }\n          });\n\n          if (sites.length > 0) {\n            return state.setIn(['site'], Immutable.fromJS(sites));\n          }\n\n          return state;\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  var createStoreWithMiddleware = Redux.applyMiddleware(redux_middleware)(Redux.createStore);\n\n  window.redux_store = createStoreWithMiddleware(root_reducer);\n  redux_store.dispatch(Actions.getState());\n})(window, document);\n"]}