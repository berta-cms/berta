{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","token","getCookie","promise","syncState","then","reponse","JSON","parse","stringify","fetch","credentials","headers","Accept","Content-Type","X-Authorization","body","undefined","response","status","BertaHelpers","logoutUser","Error","json","error","console","cname","name","ca","cookie","split","i","length","c","charAt","substring","indexOf","getQueryParams","pairs","location","search","slice","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_ORDER_SECTION_TAGS","ORDER_SECTION_TAGS","INIT_UPDATE_SECTION_TAGS","UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","ADD_SITE_SECTIONS_ENTRIES","ADD_SECTION_ENTRIES","INIT_CREATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","RENAME_SECTION_ENTRIES_SITENAME","RENAME_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRIES","ORDER_SECTION_ENTRIES","INIT_ORDER_SECTION_ENTRY_GALLERY","ORDER_SECTION_ENTRY_GALLERY","INIT_DELETE_ENTRY_GALLERY_IMAGE","DELETE_ENTRY_GALLERY_IMAGE","INIT_DELETE_SECTION_ENTRY","DELETE_SECTION_ENTRY","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","createSiteSection","entries","addSiteSectionsEntries","site_name","tags","section","addSiteSectionsTags","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","renameSectionEntriesSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","addSectionEntries","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","initOrderSectionTags","tag","sectionTags","orderSectionTags","updateSectionTags","section_tags","some","site_old_name","initCreateSectionEntry","before_entry","sectionEntries","initUpdateSectionEntry","updateSectionEntry","section_order","has_direct_content","initOrderSectionEntries","entryId","orderSectionEntries","initDeleteSectionEntry","deleteSectionEntry","entry_count","initOrderSectionEntryGallery","entryGallery","orderSectionEntryGallery","initDeleteEntryGalleryImage","deleteEntryGalleryImage","concat","siteName","sectionName","index","findIndex","entry","deletedEntry","entry_id","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    var token = window.getCookie('token');\n    method = method || 'PATCH';\n    var promise;\n\n    if (typeof window.syncState === 'function') {\n      promise = window.syncState(url, data, method)\n        .then(function(reponse) {\n          return JSON.parse(JSON.stringify(reponse));\n        });\n    } else {\n      promise = fetch(\n        url,\n        {\n          method: method,\n          credentials: 'include',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Authorization': 'Bearer ' + token\n          },\n          body: method === 'GET' ? undefined : JSON.stringify(data)\n        }\n      ).then(function (response) {\n        if (response.status === 401) {\n          window.BertaHelpers.logoutUser();\n          throw new Error('Unauthorized');\n        }\n        return response.json();\n      });\n    }\n\n    return promise\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error);\n      });\n  };\n\n  window.getCookie = function (cname) {\n    var name = cname + '=';\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function (window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS: 'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_ORDER_SECTION_TAGS: 'INIT_ORDER_SECTION_TAGS',\n    ORDER_SECTION_TAGS: 'ORDER_SECTION_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    UPDATE_SECTION_TAGS: 'UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    ADD_SITE_SECTIONS_ENTRIES: 'ADD_SITE_SECTIONS_ENTRIES',\n    ADD_SECTION_ENTRIES: 'ADD_SECTION_ENTRIES',\n    INIT_CREATE_SECTION_ENTRY: 'INIT_CREATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    RENAME_SECTION_ENTRIES_SITENAME: 'RENAME_SECTION_ENTRIES_SITENAME',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRIES: 'INIT_ORDER_SECTION_ENTRIES',\n    ORDER_SECTION_ENTRIES: 'ORDER_SECTION_ENTRIES',\n    INIT_ORDER_SECTION_ENTRY_GALLERY: 'INIT_ORDER_SECTION_ENTRY_GALLERY',\n    ORDER_SECTION_ENTRY_GALLERY: 'ORDER_SECTION_ENTRY_GALLERY',\n    INIT_DELETE_ENTRY_GALLERY_IMAGE: 'INIT_DELETE_ENTRY_GALLERY_IMAGE',\n    DELETE_ENTRY_GALLERY_IMAGE: 'DELETE_ENTRY_GALLERY_IMAGE',\n    INIT_DELETE_SECTION_ENTRY: 'INIT_DELETE_SECTION_ENTRY',\n    DELETE_SECTION_ENTRY: 'DELETE_SECTION_ENTRY',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSite(response.site));\n\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n\n              if (response.entries && response.entries.length) {\n                dispatch(Actions.addSiteSectionsEntries({\n                  site_name: response.site.name,\n                  entries: response.entries\n                }));\n              }\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function (data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionEntriesSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function (sites, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITES\n        });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES\n        });\n\n        sync(window.Berta.urls.sites, {\n          site: site\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function (site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          name: name,\n          title: title\n        }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.entries) {\n                dispatch(Actions.addSectionEntries({\n                  site_name: site,\n                  entries: response.entries\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function (resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function (path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, {\n          path: path\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function (site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTIONS\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          sections: sections\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({\n                site: site,\n                sections: sections\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function (site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_TAGS\n        });\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.siteSections, {\n          site: site,\n          section: section\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function (site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function (site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND\n        });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {\n          site: site,\n          section: section,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSiteSectionBackgrounds` is called after delete which updates state\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function (state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3); // \"title\" or \"@attributes/published\"\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n            // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    initOrderSectionTags: function (site, section, tag, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_TAGS\n        });\n\n        sync(window.Berta.urls.sectionTags, {\n          site: site,\n          section: section,\n          tag: tag,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionTags(response));\n            }\n            onComplete();\n          });\n      };\n    },\n\n    orderSectionTags: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    updateSectionTags: function (data) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function (state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          return state.map(function (site, site_name) {\n            if (action.data.site_name === site_name) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                    var tags = section.get('tag').map(function (tag) {\n                      return tag.set('order', action.data.order.indexOf(tag.getIn(['@attributes', 'name'])));\n                    });\n\n                    return section.set('tag', tags);\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n\n                if (sections.some(function (section) { return section && section.getIn(['@attributes', 'name']) === action.data.section_name;})) {\n                  return sections.map(function (section) {\n                    if (section.getIn(['@attributes', 'name']) === action.data.section_name) {\n                      return section.merge(action.data.tags);\n                    }\n                    return section;\n                  });\n                }\n\n                if (!action.data.tags) {\n                  return sections;\n                }\n\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n\n    initCreateSectionEntry: function (site, section, tag, before_entry, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_CREATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          tag: tag,\n          before_entry: before_entry\n        }, 'POST')\n          .then(function (response) {\n            onComplete(response);\n          });\n      };\n    },\n\n\n    addSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    addSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initUpdateSectionEntry: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SECTION_ENTRY\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          path: path,\n          value: value\n        })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n\n              if (response.section) {\n                dispatch({\n                  type: ActionTypes.INIT_UPDATE_SITE_SECTION\n                });\n\n                dispatch(Actions.updateSiteSection({\n                  'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                  'section': response.section,\n                  'value': response.has_direct_content\n                }));\n              }\n\n              if (response.tags) {\n                dispatch(Actions.updateSectionTags(response));\n              }\n            }\n            if (onComplete) {\n              onComplete(response);\n            }\n          });\n      };\n    },\n\n\n    updateSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntriesSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES_SITENAME,\n        data: data\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initOrderSectionEntries: function (site, section, entryId, value) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRIES\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          value: value\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntries(response));\n            }\n          });\n      };\n    },\n\n    orderSectionEntries: function (data) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n    initDeleteSectionEntry: function (site, section, entryId, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_SECTION_ENTRY\n        });\n        dispatch({\n          type: ActionTypes.INIT_UPDATE_SITE_SECTION\n        });\n\n        sync(window.Berta.urls.sectionEntries, {\n          site: site,\n          section: section,\n          entryId: entryId\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSectionEntry(response));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/entry_count',\n                'section': response.section,\n                'value': response.entry_count\n              }));\n\n              dispatch(Actions.updateSiteSection({\n                'path': response.site_name + '/section/' + response.section_order + '/@attributes/has_direct_content',\n                'section': response.section,\n                'value': response.has_direct_content\n              }));\n\n              dispatch(Actions.updateSectionTags(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSectionEntry: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    initOrderSectionEntryGallery: function (site, section, entryId, files, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_ORDER_SECTION_ENTRY_GALLERY\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          files: files\n        }, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSectionEntryGallery(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSectionEntryGallery: function (resp) {\n      return {\n        type: ActionTypes.ORDER_SECTION_ENTRY_GALLERY,\n        resp: resp\n      };\n    },\n\n\n    initDeleteEntryGalleryImage: function (site, section, entryId, file, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.INIT_DELETE_ENTRY_GALLERY_IMAGE\n        });\n\n        sync(window.Berta.urls.entryGallery, {\n          site: site,\n          section: section,\n          entryId: entryId,\n          file: file\n        }, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteEntryGalleryImage(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    // There is no reducer for this action at the moment\n    // `orderSectionEntryGallery` is called after delete which updates state\n    deleteEntryGalleryImage: function (resp) {\n      return {\n        type: ActionTypes.DELETE_ENTRY_GALLERY_IMAGE,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function (state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_ENTRIES:\n          return state.set(action.data.site_name, action.data.entries);\n\n\n        case ActionTypes.ADD_SECTION_ENTRIES:\n          return state.map(function (site, site_name) {\n            if (site_name === action.data.site_name) {\n              return site.concat(Immutable.fromJS(action.data.entries));\n            }\n            return site;\n          });\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var siteName = path[0] === '0' ? '' : path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index],\n            state.getIn([siteName, index]).merge(action.resp.entry)\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES_SITENAME:\n          var site_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (site_name) {\n            if (site_name === site_old_name) {\n              return action.data.site_name;\n            }\n            return site_name;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_name) {\n                  return entry.set('order', action.data.order.indexOf(entry.get('id')));\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRY:\n          site_name = action.resp.site_name === '0' ? '' : action.resp.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              var deletedEntry = site.find(function (entry) {\n                return entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id;\n              });\n\n              return site.filter(function (entry) {\n                return !(entry.get('sectionName') === action.resp.section_name && entry.get('id') === action.resp.entry_id);\n              }).map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section_name && entry.get('order') > deletedEntry.get('order')) {\n                  return entry.set('order', entry.get('order') - 1);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SECTION_ENTRY_GALLERY:\n          return state.map(function (site, site_name) {\n            if (site_name === action.resp.site) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.resp.section && entry.get('id') === action.resp.entry_id) {\n                  return entry\n                    .set('mediafolder', action.resp.mediafolder)\n                    .setIn(['mediaCacheData', 'file'], action.resp.files);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}