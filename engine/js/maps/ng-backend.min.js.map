{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","sync","url","data","method","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","log","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","redux_store","getState","site_templates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","index","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","CREATE_SITE","SITE_CREATED","UPDATE_SITE","SITE_UPDATED","DELETE_SITE","SITE_DELETED","ORDER_SITES","SITES_ORDERED","UPDATE_SITE_SETTINGS","SITE_SETTINGS_UPDATED","SITE_SETTINGS_CREATED","DELETE_SITE_SETTINGS","SITE_SETTINGS_DELETED","RENAME_SITE_SETTINGS_SITENAME","UPDATE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_UPDATED","SITE_TEMPLATE_SETTINGS_CREATED","DELETE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_DELETED","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","CREATE_SECTION","SECTION_CREATED","UPDATE_SECTION","RESET_SECTION","SECTION_UPDATED","DELETE_SECTION","DELETE_SITE_SECTIONS","SECTION_DELETED","ORDER_SECTIONS","SECTIONS_ORDERED","RENAME_SECTIONS_SITENAME","SECTION_BACKGROUND_DELETE","SECTION_BACKGROUND_DELETED","SECTION_BACKGROUND_ORDER","SECTION_BACKGROUND_ORDERED","ADD_SITE_TAGS","ADD_SECTION_TAGS","UPDATE_TAGS","RENAME_SECTION_TAGS","DELETE_SECTION_TAGS","RENAME_TAGS_SITENAME","DELETE_SITE_TAGS","SITE_TAGS_DELETED","Actions","assign","dispatch","getStore","error_message","setState","state","urls","createSite","onComplete","sites","siteCreated","settings","siteSettingsCreated","sections","length","i","sectionCreated","tags","section","addSiteTags","site_name","siteTemplateSettings","siteTemplateSettingsCreated","renameSite","path","value","order","parseInt","find","siteUpdated","renameSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameTagsSitename","updateSite","resp","deleteSite","siteDeleted","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteTags","orderSites","sitesOrdered","reducers","action","Immutable","Map","fromJS","set","size","prop","map","getIn","setIn","filter","new_order","indexOf","updateSiteSettings","site_settings","siteSettingsUpdated","section_old_name","mapKeys","k","updateSiteTemplateSettings","site_template_settings","siteTemplateSettingsUpdated","createSection","title","addSectionTags","renameSection","sectionUpdated","renameSectionTags","section_name","old_name","updateSection","resetSection","sections_reset","deleteSection","sectionDeleted","deleteSectionTags","orderSections","sectionsOrdered","sectionBackgroundDelete","file","section_backgrounds","sectionBackgroundDeleted","sectionBackgroundOrder","files","sectionBackgroundOrdered","merge","deleteIn","mediafolder","entries","root_reducer","Redux","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReduxThunk"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document) {\n  'use strict';\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        console.log('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().site_templates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n        templates: {}\n      };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n            templateList.querySelectorAll('script'),\n            0\n          );\n\n      templates.forEach(function(template, index){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<\\%=([^%>]+)\\%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener(\"DOMContentLoaded\", completed);\n            window.removeEventListener(\"load\", completed);\n          } else {\n            document.detachEvent(\"onreadystatechange\", completed);\n            window.detachEvent(\"onload\", completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === \"load\" || document.readyState === \"complete\")) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === \"complete\") {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener(\"DOMContentLoaded\", completed);\n      window.addEventListener(\"load\", completed);\n    } else {\n      document.attachEvent(\"onreadystatechange\", completed);\n      window.attachEvent(\"onload\", completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) {}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n              top.doScroll(\"left\");\n          } catch(e) {\n              return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: editables.xEditable,\n    longtext: editables.xEditableTA,\n    richtext: editables.xEditableMCESimple,\n    color: editables.xEditableColor,\n    image: editables.xEditableImage,\n    icon: editables.xEditableICO,\n    select: editables.xEditableSelectRC,\n    fontselect: editables.xEditableFontSelect\n  };\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    CREATE_SITE: 'CREATE_SITE',\n    SITE_CREATED: 'SITE_CREATED',\n    UPDATE_SITE: 'UPDATE_SITE',\n    SITE_UPDATED: 'SITE_UPDATED',\n    DELETE_SITE: 'DELETE_SITE',\n    SITE_DELETED: 'SITE_DELETED',\n    ORDER_SITES: 'ORDER_SITES',\n    SITES_ORDERED: 'SITES_ORDERED',\n\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    SITE_SETTINGS_UPDATED: 'SITE_SETTINGS_UPDATED',\n    SITE_SETTINGS_CREATED: 'SITE_SETTINGS_CREATED',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n    SITE_SETTINGS_DELETED: 'SITE_SETTINGS_DELETED',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_UPDATED: 'SITE_TEMPLATE_SETTINGS_UPDATED',\n    SITE_TEMPLATE_SETTINGS_CREATED: 'SITE_TEMPLATE_SETTINGS_CREATED',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_DELETED: 'SITE_TEMPLATE_SETTINGS_DELETED',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n\n    CREATE_SECTION: 'CREATE_SECTION',\n    SECTION_CREATED: 'SECTION_CREATED',\n    UPDATE_SECTION: 'UPDATE_SECTION',\n    RESET_SECTION: 'RESET_SECTION',\n    SECTION_UPDATED: 'SECTION_UPDATED',\n    DELETE_SECTION: 'DELETE_SECTION',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n    SECTION_DELETED: 'SECTION_DELETED',\n    ORDER_SECTIONS: 'ORDER_SECTIONS',\n    SECTIONS_ORDERED: 'SECTIONS_ORDERED',\n    RENAME_SECTIONS_SITENAME: 'RENAME_SECTIONS_SITENAME',\n\n    SECTION_BACKGROUND_DELETE: 'SECTION_BACKGROUND_DELETE',\n    SECTION_BACKGROUND_DELETED: 'SECTION_BACKGROUND_DELETED',\n    SECTION_BACKGROUND_ORDER: 'SECTION_BACKGROUND_ORDER',\n    SECTION_BACKGROUND_ORDERED: 'SECTION_BACKGROUND_ORDERED',\n\n    ADD_SITE_TAGS: 'ADD_SITE_TAGS',\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    UPDATE_TAGS: 'UPDATE_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    RENAME_TAGS_SITENAME: 'RENAME_TAGS_SITENAME',\n    DELETE_SITE_TAGS: 'DELETE_SITE_TAGS',\n    SITE_TAGS_DELETED: 'SITE_TAGS_DELETED'\n  };\n})(window, document);\n","(function(window, Berta) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, Berta);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSite: function (site, onComplete) {\n      return function (dispatch, getStore) {\n\n        dispatch({ type: ActionTypes.CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone\n              // related sections, entries, tags, settings, template settings\n\n              dispatch(Actions.siteCreated(response.site));\n              if (response.settings) {\n                dispatch(Actions.siteSettingsCreated(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.sectionCreated(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.siteTemplateSettingsCreated(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    siteCreated: function(data) {\n      return {\n        type: ActionTypes.SITE_CREATED,\n        data: data\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE });\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.siteUpdated(response));\n              dispatch(Actions.renameSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteUpdated: function(resp) {\n      return {\n        type: ActionTypes.SITE_UPDATED,\n        resp: resp\n      };\n    },\n\n    deleteSite: function(site, onComplete) {\n      return function (dispatch, getStore) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.DELETE_SITE });\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TAGS });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteDeleted(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTags({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteDeleted: function(resp) {\n      return {\n        type: ActionTypes.SITE_DELETED,\n        resp: resp\n      };\n    },\n\n    orderSites: function(sites, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sitesOrdered(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    sitesOrdered: function(resp) {\n      return {\n        type: ActionTypes.SITES_ORDERED,\n        resp: resp\n      };\n    }\n\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, site, order, sites = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sites SET_STATE reducer:', action);\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.SITE_CREATED:\n          console.log('Sites reducer:', action);\n\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.SITE_UPDATED:\n          console.log('Sites reducer:', action);\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.SITE_DELETED:\n          console.log('Sites reducer:', action);\n\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.SITES_ORDERED:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.site_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    siteSettingsCreated: function (site_name, data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_DELETED,\n        data: data\n      };\n    },\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site settings reducer:', action);\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.SITE_SETTINGS_UPDATED:\n          console.log('Settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.SITE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_SETTINGS_DELETED:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.site_template_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteTemplateSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteTemplateSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    siteTemplateSettingsCreated: function(site_name, data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED,\n        data: data\n      };\n    }\n  });\n\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_template_settings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED:\n          console.log('Template settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    createSection: function(site, name, title, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.CREATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(window.Berta.urls.sections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionCreated(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    sectionCreated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_CREATED,\n        resp: resp\n      };\n    },\n\n\n    renameSection: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(window.Berta.urls.sections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionUpdated(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSection: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n\n        sync(window.Berta.urls.sections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    sectionUpdated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_UPDATED,\n        resp: resp\n      };\n    },\n\n\n    renameSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    resetSection: function(path, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({\n          type: ActionTypes.RESET_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.sections_reset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSection: function(site, section, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(window.Berta.urls.sections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionDeleted(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    sectionDeleted: function(resp) {\n      return {\n        type: ActionTypes.SECTION_DELETED,\n        resp: resp\n      };\n    },\n\n\n    orderSections: function(site, sections, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.ORDER_SECTIONS });\n\n        sync(window.Berta.urls.sections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionsOrdered({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    sectionsOrdered: function(resp) {\n      return {\n        type: ActionTypes.SECTIONS_ORDERED,\n        resp: resp\n      };\n    },\n\n\n    sectionBackgroundDelete: function(site, section, file, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.SECTION_BACKGROUND_DELETE });\n\n        sync(window.Berta.urls.section_backgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionBackgroundDeleted(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    sectionBackgroundDeleted: function (resp) {\n      return {\n        type: ActionTypes.SECTION_BACKGROUND_DELETED,\n        resp: resp\n      };\n    },\n\n\n    sectionBackgroundOrder: function(site, section, files, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.SECTION_BACKGROUND_ORDER });\n\n        sync(window.Berta.urls.section_backgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionBackgroundOrdered(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    sectionBackgroundOrdered: function(resp) {\n      return {\n        type: ActionTypes.SECTION_BACKGROUND_ORDERED,\n        resp: resp\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value,\n          section,\n          section_idx,\n          sections = [],\n          files = [],\n          new_files = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sections reducer:', action);\n          return Immutable.fromJS(action.state.sections);\n\n\n        case ActionTypes.SECTION_CREATED:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.RENAME_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_UPDATED:\n          console.log('Sections reducer:', action);\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SECTION:\n          console.log('Sections reducer:', action);\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_DELETED:\n          console.log('Sections reducer:', action, state);\n\n          // @TODO delete related data from state\n\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.SECTIONS_ORDERED:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_BACKGROUND_ORDERED:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_BACKGROUND_DELETED:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('name') === action.resp.section) {\n              return section.setIn(['mediaCacheData', 'file'], section.getIn(['mediaCacheData', 'file']).filter(function (file) {\n                  // @TODO Fix error when there is two images in gallery and one gets deleted\n                  // Uncaught (in promise) TypeError: e.getIn is not a function\n                  return file.getIn(['@attributes', 'src']) !== action.resp.file;\n                })\n              );\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteTags: function (data) {\n      return {\n        type: ActionTypes.SITE_TAGS_DELETED,\n        data: data\n      };\n    }\n\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    tags: function(state, action) {\n      var tag_idx, tags, site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Tags reducer:', action);\n\n          return Immutable.fromJS(action.state.tags);\n\n\n        case ActionTypes.ADD_SITE_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          site_name = action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TAGS_DELETED:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    //\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    entries: function(state, action) {\n      var entry, entries = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Entries reducer:', action);\n          return Immutable.fromJS(action.state.entries);\n\n        // case ActionTypes.SECTION_CREATED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     console.log('Entries reducer:', action);\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_templates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_templates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  redux_store.dispatch(Actions.getState(site));\n\n})(window, document);\n"]}