{"version":3,"sources":["namespace.js","utils.js","constants.js","action-types.js","state.actions.js","sites.actions.js","sites.reducer.js","site-settings.actions.js","site-settings.reducer.js","site-template-settings.actions.js","site-template-settings.reducer.js","site-sections.actions.js","site-sections.reducer.js","section-tags.actions.js","section-tags.reducer.js","section-entries.actions.js","section-entries.reducer.js","site-templates.reducer.js","reducers.js","index.js"],"names":["window","Berta","document","redux_store","sync","url","data","method","fetch","credentials","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","getState","siteTemplates","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","INIT_CREATE_SITE","CREATE_SITE","INIT_UPDATE_SITE","UPDATE_SITE","INIT_ORDER_SITES","ORDER_SITES","INIT_DELETE_SITE","DELETE_SITE","CREATE_SITE_SETTINGS","INIT_UPDATE_SITE_SETTINGS","UPDATE_SITE_SETTINGS","RENAME_SITE_SETTINGS_SITENAME","INIT_DELETE_SITE_SETTINGS","DELETE_SITE_SETTINGS","CREATE_SITE_TEMPLATE_SETTINGS","INIT_UPDATE_SITE_TEMPLATE_SETTINGS","UPDATE_SITE_TEMPLATE_SETTINGS","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","INIT_DELETE_SITE_TEMPLATE_SETTINGS","DELETE_SITE_TEMPLATE_SETTINGS","INIT_CREATE_SITE_SECTION","CREATE_SITE_SECTION","INIT_UPDATE_SITE_SECTION","UPDATE_SITE_SECTION","RENAME_SITE_SECTIONS_SITENAME","RESET_SITE_SECTION","INIT_ORDER_SITE_SECTIONS","ORDER_SITE_SECTIONS","INIT_DELETE_SITE_SECTION","DELETE_SITE_SECTION","INIT_DELETE_SITE_SECTIONS","DELETE_SITE_SECTIONS","INIT_ORDER_SITE_SECTION_BACKGROUNDS","ORDER_SITE_SECTION_BACKGROUNDS","INIT_DELETE_SITE_SECTION_BACKGROUND","DELETE_SITE_SECTION_BACKGROUND","ADD_SECTION_TAGS","ADD_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_TAGS","RENAME_SECTION_TAGS","RENAME_SECTION_TAGS_SITENAME","DELETE_SECTION_TAGS","INIT_DELETE_SITE_SECTIONS_TAGS","DELETE_SITE_SECTIONS_TAGS","INIT_UPDATE_SECTION_ENTRY","UPDATE_SECTION_ENTRY","INIT_UPDATE_SECTION_ENTRIES","RENAME_SECTION_ENTRIES","INIT_DELETE_SITE_SECTIONS_ENTRIES","DELETE_SITE_SECTIONS_ENTRIES","INIT_DELETE_SECTION_ENTRIES","DELETE_SECTION_ENTRIES","Actions","assign","dispatch","error_message","setState","state","urls","initCreateSite","onComplete","sites","createSite","settings","createSiteSettings","sections","length","i","createSiteSection","tags","section","addSiteSectionsTags","site_name","siteTemplateSettings","createSiteTemplateSettings","initUpdateSite","path","value","updateSite","resp","renameSite","getStore","order","parseInt","find","renameSiteSectionsSitename","renameSiteSettingsSitename","renameSiteTemplateSettingsSitename","renameSectionTagsSitename","initOrderSites","orderSites","initdeleteSite","deleteSite","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteSectionsTags","deleteSiteSectionsEntries","Immutable","reducers","action","Map","fromJS","set","size","prop","map","getIn","setIn","new_order","indexOf","filter","initUpdateSiteSettings","siteSettings","updateSiteSettings","site_settings","section_old_name","mapKeys","k","initUpdateSiteTemplateSettings","updateSiteTemplateSettings","site_template_settings","initCreateSiteSection","title","siteSections","addSectionTags","initUpdateSiteSection","updateSiteSection","initRenameSiteSection","renameSectionTags","section_name","old_name","renameSectionEntries","resetSiteSection","siteSectionsReset","initOrderSiteSections","orderSiteSections","initDeleteSiteSection","deleteSiteSection","deleteSectionTags","deleteSectionEntries","initOrderSiteSectionBackgrounds","files","siteSectionBackgrounds","orderSiteSectionBackgrounds","initDeleteSiteSectionBackground","file","deleteSiteSectionBackground","site_sections","merge","deleteIn","mediafolder","sectionTags","section_tags","initUpdateSectionEntry","sectionEntries","updateSectionEntry","siteName","sectionName","entryId","index","findIndex","entry","concat","entries","s","Redux","root_reducer","combineReducers","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["window.Berta = {};\n","(function(window, document, redux_store) {\n  'use strict';\n  /** @todo: move helpers to Berta namespace */\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        /** @todo: create error state/reducer to manage failed requests and other app errors */\n        console.error('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = window.getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().siteTemplates.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n    templates: {}\n  };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n        templateList.querySelectorAll('script'),\n        0\n      );\n\n      templates.forEach(function(template){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<%=([^%>]+)%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener('DOMContentLoaded', completed);\n            window.removeEventListener('load', completed);\n          } else {\n            document.detachEvent('onreadystatechange', completed);\n            window.detachEvent('onload', completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === 'load' || document.readyState === 'complete')) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === 'complete') {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', completed);\n      window.addEventListener('load', completed);\n    } else {\n      document.attachEvent('onreadystatechange', completed);\n      window.attachEvent('onload', completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) { /* skip */}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n            top.doScroll('left');\n          } catch(e) {\n            return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document, window.redux_store);\n","(function(window) {\n  'use strict';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: window.editables.xEditable,\n    longtext: window.editables.xEditableTA,\n    richtext: window.editables.xEditableMCESimple,\n    color: window.editables.xEditableColor,\n    image: window.editables.xEditableImage,\n    icon: window.editables.xEditableICO,\n    select: window.editables.xEditableSelectRC,\n    fontselect: window.editables.xEditableFontSelect\n  };\n\n})(window);\n","(function(window) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    INIT_CREATE_SITE: 'INIT_CREATE_SITE',\n    CREATE_SITE: 'CREATE_SITE',\n    INIT_UPDATE_SITE: 'INIT_UPDATE_SITE',\n    UPDATE_SITE: 'UPDATE_SITE',\n    INIT_ORDER_SITES: 'INIT_ORDER_SITES',\n    ORDER_SITES: 'ORDER_SITES',\n    INIT_DELETE_SITE: 'INIT_DELETE_SITE',\n    DELETE_SITE: 'DELETE_SITE',\n\n    CREATE_SITE_SETTINGS: 'CREATE_SITE_SETTINGS',\n    INIT_UPDATE_SITE_SETTINGS: 'INIT_UPDATE_SITE_SETTINGS',\n    UPDATE_SITE_SETTINGS: 'UPDATE_SITE_SETTINGS',\n    RENAME_SITE_SETTINGS_SITENAME: 'RENAME_SITE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_SETTINGS: 'INIT_DELETE_SITE_SETTINGS',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n\n    CREATE_SITE_TEMPLATE_SETTINGS: 'CREATE_SITE_TEMPLATE_SETTINGS',\n    INIT_UPDATE_SITE_TEMPLATE_SETTINGS: 'INIT_UPDATE_SITE_TEMPLATE_SETTINGS',\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n    INIT_DELETE_SITE_TEMPLATE_SETTINGS: 'INIT_DELETE_SITE_TEMPLATE_SETTINGS',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n\n    INIT_CREATE_SITE_SECTION: 'INIT_CREATE_SITE_SECTION',\n    CREATE_SITE_SECTION: 'CREATE_SITE_SECTION',\n    INIT_UPDATE_SITE_SECTION: 'INIT_UPDATE_SITE_SECTION',\n    UPDATE_SITE_SECTION: 'UPDATE_SITE_SECTION',\n    RENAME_SITE_SECTIONS_SITENAME: 'RENAME_SITE_SECTIONS_SITENAME',\n    RESET_SITE_SECTION: 'RESET_SITE_SECTION',\n    INIT_ORDER_SITE_SECTIONS: 'INIT_ORDER_SITE_SECTIONS',\n    ORDER_SITE_SECTIONS: 'ORDER_SITE_SECTIONS',\n    INIT_DELETE_SITE_SECTION: 'INIT_DELETE_SITE_SECTION',\n    DELETE_SITE_SECTION: 'DELETE_SITE_SECTION',\n    INIT_DELETE_SITE_SECTIONS:'INIT_DELETE_SITE_SECTIONS',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n\n    INIT_ORDER_SITE_SECTION_BACKGROUNDS: 'INIT_ORDER_SITE_SECTION_BACKGROUNDS',\n    ORDER_SITE_SECTION_BACKGROUNDS: 'ORDER_SITE_SECTION_BACKGROUNDS',\n    INIT_DELETE_SITE_SECTION_BACKGROUND: 'INIT_DELETE_SITE_SECTION_BACKGROUND',\n    DELETE_SITE_SECTION_BACKGROUND: 'DELETE_SITE_SECTION_BACKGROUND',\n\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    ADD_SITE_SECTIONS_TAGS: 'ADD_SITE_SECTIONS_TAGS',\n    INIT_UPDATE_SECTION_TAGS: 'INIT_UPDATE_SECTION_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    RENAME_SECTION_TAGS_SITENAME: 'RENAME_SECTION_TAGS_SITENAME',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    INIT_DELETE_SITE_SECTIONS_TAGS: 'INIT_DELETE_SITE_SECTIONS_TAGS',\n    DELETE_SITE_SECTIONS_TAGS: 'DELETE_SITE_SECTIONS_TAGS',\n\n    INIT_UPDATE_SECTION_ENTRY: 'INIT_UPDATE_SECTION_ENTRY',\n    UPDATE_SECTION_ENTRY: 'UPDATE_SECTION_ENTRY',\n    INIT_UPDATE_SECTION_ENTRIES: 'INIT_UPDATE_SECTION_ENTRIES',\n    RENAME_SECTION_ENTRIES: 'RENAME_SECTION_ENTRIES',\n    INIT_DELETE_SITE_SECTIONS_ENTRIES: 'INIT_DELETE_SITE_SECTIONS_ENTRIES',\n    DELETE_SITE_SECTIONS_ENTRIES: 'DELETE_SITE_SECTIONS_ENTRIES',\n    INIT_DELETE_SECTION_ENTRIES: 'INIT_DELETE_SECTION_ENTRIES',\n    DELETE_SECTION_ENTRIES: 'DELETE_SECTION_ENTRIES'\n  };\n})(window);\n","(function(window, Berta, ActionTypes, sync) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    getState: function(site) {\n      site = site ? site : '0';\n      var url = '/_api/v1/state/' + site;\n\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.GET_STATE });\n\n        sync(url, {}, 'GET')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(window.Actions.setState(response));\n            }\n          });\n      };\n    },\n\n\n    setState: function(state) {\n      Berta.urls = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, window.Berta, window.ActionTypes, window.sync);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSite: function (site, onComplete) {\n      return function (dispatch) {\n\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE });\n\n        sync(window.Berta.urls.sites, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone related entries\n\n              dispatch(Actions.createSite(response.site));\n              if (response.settings) {\n                dispatch(Actions.createSiteSettings(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.createSiteSection(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteSectionsTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.createSiteTemplateSettings(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    createSite: function(data) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        data: data\n      };\n    },\n\n    initUpdateSite: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSite(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        resp: resp\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.sites, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.updateSite(response));\n              dispatch(Actions.renameSiteSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSectionTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    initOrderSites: function(sites, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITES });\n\n        sync(window.Berta.urls.sites, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSites(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    orderSites: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        resp: resp\n      };\n    },\n\n    initdeleteSite: function(site, onComplete) {\n      return function (dispatch) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTIONS_ENTRIES });\n\n        sync(window.Berta.urls.sites, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSite(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsTags({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSectionsEntries({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    deleteSite: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        resp: resp\n      };\n    }\n  });\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, order;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.CREATE_SITE:\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE:\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.ORDER_SITES:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE:\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteSettings: function (site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SETTINGS });\n\n        sync(window.Berta.urls.siteSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SETTINGS,\n        data: data\n      };\n    },\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSettings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.CREATE_SITE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SETTINGS:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function (window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSiteTemplateSettings: function(site_name, data) {\n      return {\n        type: ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    initUpdateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.siteTemplateSettings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteTemplateSettings(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSiteTemplateSettings: function (resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS,\n        resp: resp\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS,\n        data: data\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function (window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplateSettings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.CREATE_SITE_TEMPLATE_SETTINGS:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS:\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes, sync) {\n  'use strict';\n\n  var Actions = window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initCreateSiteSection: function(site, name, title, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_CREATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n\n        sync(window.Berta.urls.siteSections, { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.createSiteSection(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    createSiteSection: function(resp) {\n      return {\n        type: ActionTypes.CREATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initUpdateSiteSection: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSiteSection: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    initRenameSiteSection: function (path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSiteSection(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n              dispatch(Actions.renameSectionEntries({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    renameSiteSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n\n    resetSiteSection: function(path, onComplete) {\n      return function (dispatch) {\n        dispatch({\n          type: ActionTypes.RESET_SITE_SECTION,\n          path: path\n        });\n\n        sync(window.Berta.urls.siteSectionsReset, { path: path })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    initOrderSiteSections: function(site, sections, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTIONS });\n\n        sync(window.Berta.urls.siteSections, {site: site, sections: sections}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSections({site: site, sections: sections}));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSections: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTIONS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSection: function(site, section, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION });\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_TAGS });\n        dispatch({ type: ActionTypes.INIT_DELETE_SECTION_ENTRIES });\n\n        sync(window.Berta.urls.siteSections, {site: site, section: section}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSection(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n\n              dispatch(Actions.deleteSectionEntries({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSection: function(resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION,\n        resp: resp\n      };\n    },\n\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n\n    initOrderSiteSectionBackgrounds: function(site, section, files, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_ORDER_SITE_SECTION_BACKGROUNDS });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, files: files}, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.orderSiteSectionBackgrounds(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    orderSiteSectionBackgrounds: function(resp) {\n      return {\n        type: ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS,\n        resp: resp\n      };\n    },\n\n\n    initDeleteSiteSectionBackground: function(site, section, file, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_DELETE_SITE_SECTION_BACKGROUND });\n\n        sync(window.Berta.urls.siteSectionBackgrounds, {site: site, section: section, file: file}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.deleteSiteSectionBackground(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    deleteSiteSectionBackground: function (resp) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTION_BACKGROUND,\n        resp: resp\n      };\n    }\n  });\n\n})(window, window.ActionTypes, window.sync);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteSections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.site_sections);\n\n\n        case ActionTypes.CREATE_SITE_SECTION:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.UPDATE_SITE_SECTION:\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RENAME_SITE_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SITE_SECTION:\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTIONS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site) {\n              var order = action.resp.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTION:\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SITE_SECTION_BACKGROUNDS:\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteSectionsTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_TAGS,\n        data: data\n      };\n    }\n\n  });\n\n})(window, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionTags: function(state, action) {\n      var site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.section_tags);\n\n\n        case ActionTypes.ADD_SITE_SECTIONS_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          site_name = action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_TAGS:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, sync, Actions, ActionTypes) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    initUpdateSectionEntry: function(path, value, onComplete) {\n      return function (dispatch) {\n        dispatch({ type: ActionTypes.INIT_UPDATE_SECTION_ENTRY });\n\n        sync(window.Berta.urls.sectionEntries, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.updateSectionEntry(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n\n    updateSectionEntry: function(resp) {\n      return {\n        type: ActionTypes.UPDATE_SECTION_ENTRY,\n        resp: resp\n      };\n    },\n\n\n    renameSectionEntries: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSiteSectionsEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS_ENTRIES,\n        data: data\n      };\n    },\n\n\n    deleteSectionEntries: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_ENTRIES,\n        data: data\n      };\n    }\n  });\n\n})(window, window.sync, window.Actions, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sectionEntries: function(state, action) {\n      var site_name;\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.sectionEntries);\n\n\n        case ActionTypes.UPDATE_SECTION_ENTRY:\n          var path = action.resp.path.split('/');\n          var prop = action.resp.path.split('/').slice(4);\n          var siteName = path[0];\n          var sectionName = path[2];\n          var entryId = path[3];\n          var value = action.resp.value;\n\n          var index = state.get(siteName).findIndex(function (entry) {\n            return entry.get('id') === entryId && entry.get('sectionName') === sectionName;\n          });\n\n          if (index < 0) {\n            return state;\n          }\n\n          return state.setIn(\n            [siteName, index].concat(prop),\n            value\n          );\n\n\n        case ActionTypes.RENAME_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (entry) {\n                if (entry.get('sectionName') === action.data.section_old_name) {\n                  return entry.set('sectionName', action.data.section_name);\n                }\n                return entry;\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS_ENTRIES:\n          return state.filter(function (entries, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_ENTRIES:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, s) {\n            if (site_name === s) {\n              return site.filter(function (entry) {\n                return entry.get('sectionName') !== action.data.section_name;\n              });\n            }\n            return site;\n          });\n\n\n        // case ActionTypes.SECTION_CREATED:\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Immutable, ActionTypes) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    siteTemplates: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          return Immutable.fromJS(action.state.siteTemplates);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, window.Immutable, window.ActionTypes);\n","(function(window, Redux, reducers) {\n  'use strict';\n\n  window.root_reducer = Redux.combineReducers(reducers);\n})(window, window.Redux, window.reducers);\n","(function (window, Redux, ReduxThunk, Actions, Templates, domReady, getCurrentSite) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    window.root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  window.redux_store.dispatch(Actions.getState(site));\n\n})(window, window.Redux, window.ReduxThunk, window.Actions, window.Templates, window.domReady, window.getCurrentSite);\n"]}