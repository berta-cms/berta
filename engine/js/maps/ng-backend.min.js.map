{"version":3,"sources":["utils.js","constants.js","ActionTypes.js","StateActions.js","SiteActions.js","SettingsActions.js","SiteTemplateSettingsActions.js","SectionActions.js","EntryActions.js","TagActions.js","middleware.js","sites.js","site_settings.js","site_template_settings.js","template_settings.js","sections.js","entries.js","tags.js","index.js"],"names":["window","document","sync","url","data","method","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","response","json","error","console","log","message","getQueryParams","pairs","location","search","slice","split","result","forEach","pair","decodeURIComponent","getCurrentSite","q","site","escapeHTML","str","div","createElement","text","createTextNode","appendChild","innerHTML","getAllTemplates","templates","redux_store","getState","template_settings","toJSON","Object","getOwnPropertyNames","Templates","load","templateList","getElementById","Array","prototype","call","querySelectorAll","template","index","getAttribute","this","bind","get","name","ctx","tpl","replace","match","domReady","callback","ready","detach","addEventListener","removeEventListener","completed","detachEvent","event","type","readyState","attachEvent","top","frameElement","documentElement","e","doScroll","scrollCheck","setTimeout","API_ROOT","editables","xEditable","xEditableColor","xEditableSelect","xEditableSelectRC","xEditableFontSelect","xEditableImage","xEditableICO","xEditableTA","xEditableMCE","xEditableMCESimple","xEditableRC","xEditableYesNo","xEmpty","formats","longtext","richtext","color","image","icon","select","fontselect","ActionTypes","GET_STATE","SET_STATE","CREATE_SITE","SITE_CREATED","UPDATE_SITE","SITE_UPDATED","DELETE_SITE","SITE_DELETED","ORDER_SITES","SITES_ORDERED","UPDATE_SETTINGS","SETTINGS_UPDATED","SETTINGS_CREATED","DELETE_SITE_SETTINGS","SITE_SETTINGS_DELETED","RENAME_SETTINGS_SITENAME","UPDATE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_UPDATED","TEMPLATE_SETTINGS_CREATED","DELETE_SITE_TEMPLATE_SETTINGS","SITE_TEMPLATE_SETTINGS_DELETED","RENAME_SITE_TEMPLATE_SETTINGS_SITENAME","CREATE_SECTION","SECTION_CREATED","UPDATE_SECTION","RESET_SECTION","SECTION_UPDATED","DELETE_SECTION","DELETE_SITE_SECTIONS","SECTION_DELETED","ORDER_SECTIONS","RENAME_SECTIONS_SITENAME","SECTION_BG_DELETE","SECTION_BG_ORDER","SECTION_BG_ORDERED","ADD_SITE_TAGS","ADD_SECTION_TAGS","UPDATE_TAGS","RENAME_SECTION_TAGS","DELETE_SECTION_TAGS","RENAME_TAGS_SITENAME","DELETE_SITE_TAGS","SITE_TAGS_DELETED","Actions","Berta","assign","meta","remote","dispatch","setState","state","urls","createSite","onComplete","getStore","error_message","siteCreated","settings","settingsCreated","sections","length","i","sectionCreated","tags","section","addSiteTags","site_name","siteTemplateSettings","templateSettingsCreated","renameSite","path","value","order","parseInt","sites","find","siteUpdated","renameSectionsSitename","renameSettingsSitename","renameSiteTemplateSettingsSitename","renameTagsSitename","updateSite","resp","deleteSite","siteDeleted","deleteSiteSections","deleteSiteSettings","deleteSiteTemplateSettings","deleteSiteTags","orderSites","sitesOrdered","updateSettings","site_settings","settingsUpdated","updateSiteTemplateSettings","site_template_settings","siteTemplateSettingsUpdated","createSection","title","addSectionTags","renameSection","sectionUpdated","renameSectionTags","section_name","section_old_name","old_name","updateSection","resetSection","deleteSection","encodeURIComponent","sectionDeleted","deleteSectionTags","orderSections","sectionBgDelete","file","sectionBgOrder","files","sectionBgOrdered","checkStatus","status","Error","statusText","redux_middleware","store","next","action","reducers","Immutable","Map","fromJS","set","size","prop","map","getIn","setIn","filter","new_order","indexOf","mapKeys","k","merge","deleteIn","mediafolder","entries","root_reducer","Redux","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReduxThunk"],"mappings":"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","file":"../ng-backend.min.js","sourcesContent":["(function(window, document) {\n  'use strict';\n\n  window.sync = function (url, data, method) {\n    method = method || 'PATCH';\n    return fetch(\n      url,\n      {\n        method: method,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: method === 'GET' ? undefined : JSON.stringify(data)\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .catch(function (error) {\n        console.log('Request failed:', error.message);\n      });\n  };\n\n  window.getQueryParams = function getQueryParams() {\n    var pairs = location.search.slice(1).split('&');\n    var result = {};\n\n    pairs.forEach(function(pair) {\n      if (pair[0]) {\n        pair = pair.split('=');\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\n      }\n    });\n\n    return result;\n  };\n\n  window.getCurrentSite = function getCurrentSite() {\n    var q = getQueryParams();\n    return q.site === undefined ? '' : q.site;\n  };\n\n  window.escapeHTML = function escapeHTML(str) {\n    var div = document.createElement('div');\n    var text = document.createTextNode(str);\n    div.appendChild(text);\n    return div.innerHTML;\n  };\n\n  window.getAllTemplates = function getAllTemplates() {\n    var templates = redux_store.getState().template_settings.toJSON();\n\n    return Object.getOwnPropertyNames(templates);\n  };\n\n  var Templates = {\n        templates: {}\n      };\n\n  Templates.load = function load() {\n    var templateList = document.getElementById('templateList');\n\n    if (templateList) {\n      var templates = Array.prototype.slice.call(\n            templateList.querySelectorAll('script'),\n            0\n          );\n\n      templates.forEach(function(template, index){\n        if(template.getAttribute('type') === 'text/template'){\n          this.templates[template.getAttribute('id')] = template.innerHTML;\n        }\n      }.bind(this));\n    }\n  }.bind(Templates);\n\n  Templates.get = function get(name, ctx) {\n    var tpl = this.templates[name];\n\n    return tpl.replace(/<\\%=([^%>]+)\\%>/g, function(str, match) {\n      return ctx[match];\n    });\n  }.bind(Templates);\n\n  window.Templates = Templates;\n\n  window.domReady = function(callback) {\n    var ready = false,\n        detach = function() {\n          if(document.addEventListener) {\n            document.removeEventListener(\"DOMContentLoaded\", completed);\n            window.removeEventListener(\"load\", completed);\n          } else {\n            document.detachEvent(\"onreadystatechange\", completed);\n            window.detachEvent(\"onload\", completed);\n          }\n        },\n        completed = function() {\n          if(!ready && (document.addEventListener || event.type === \"load\" || document.readyState === \"complete\")) {\n            ready = true;\n            detach();\n            callback();\n          }\n        };\n\n    if(document.readyState === \"complete\") {\n      callback();\n    } else if(document.addEventListener) {\n      document.addEventListener(\"DOMContentLoaded\", completed);\n      window.addEventListener(\"load\", completed);\n    } else {\n      document.attachEvent(\"onreadystatechange\", completed);\n      window.attachEvent(\"onload\", completed);\n\n      var top = false;\n\n      try {\n        top = window.frameElement === null && document.documentElement;\n      } catch(e) {}\n\n      if(top && top.doScroll) {\n        (function scrollCheck() {\n          if(ready) return;\n\n          try {\n              top.doScroll(\"left\");\n          } catch(e) {\n              return setTimeout(scrollCheck, 50);\n          }\n\n          ready = true;\n          detach();\n          callback();\n        })();\n      }\n    }\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.API_ROOT = '/_api/v1/';\n\n  window.editables = {\n    xEditable: 'xEditable',                     // simple input\n    xEditableColor: 'xEditableColor',           // simple input\n    xEditableSelect: 'xEditableSelect',         // select\n    xEditableSelectRC: 'xEditableSelectRC',     // select\n    xEditableFontSelect: 'xEditableFontSelect', // select\n    xEditableImage: 'xEditableImage',           // image upload\n    xEditableICO: 'xEditableICO',               // ico upload\n    xEditableTA: 'xEditableTA',                 // textarea\n    xEditableMCE: 'xEditableMCE',               // textarea\n    xEditableMCESimple: 'xEditableMCESimple',   // textarea\n    xEditableRC: 'xEditableRC',                 // with \"real\" content\n    xEditableYesNo: 'xEditableYesNo',           // the \"yes/no\" switch\n    xEmpty: 'xEmpty'\n  };\n\n  window.formats = {\n    text: editables.xEditable,\n    longtext: editables.xEditableTA,\n    richtext: editables.xEditableMCESimple,\n    color: editables.xEditableColor,\n    image: editables.xEditableImage,\n    icon: editables.xEditableICO,\n    select: editables.xEditableSelectRC,\n    fontselect: editables.xEditableFontSelect\n  };\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n\n    CREATE_SITE: 'CREATE_SITE',\n    SITE_CREATED: 'SITE_CREATED',\n    UPDATE_SITE: 'UPDATE_SITE',\n    SITE_UPDATED: 'SITE_UPDATED',\n    DELETE_SITE: 'DELETE_SITE',\n    SITE_DELETED: 'SITE_DELETED',\n    ORDER_SITES: 'ORDER_SITES',\n    SITES_ORDERED: 'SITES_ORDERED',\n\n    UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n    SETTINGS_UPDATED: 'SETTINGS_UPDATED',\n    SETTINGS_CREATED: 'SETTINGS_CREATED',\n    DELETE_SITE_SETTINGS: 'DELETE_SITE_SETTINGS',\n    SITE_SETTINGS_DELETED: 'SITE_SETTINGS_DELETED',\n    RENAME_SETTINGS_SITENAME: 'RENAME_SETTINGS_SITENAME',\n\n    UPDATE_SITE_TEMPLATE_SETTINGS: 'UPDATE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_UPDATED: 'SITE_TEMPLATE_SETTINGS_UPDATED',\n    TEMPLATE_SETTINGS_CREATED: 'TEMPLATE_SETTINGS_CREATED',\n    DELETE_SITE_TEMPLATE_SETTINGS: 'DELETE_SITE_TEMPLATE_SETTINGS',\n    SITE_TEMPLATE_SETTINGS_DELETED: 'SITE_TEMPLATE_SETTINGS_DELETED',\n    RENAME_SITE_TEMPLATE_SETTINGS_SITENAME: 'RENAME_SITE_TEMPLATE_SETTINGS_SITENAME',\n\n    CREATE_SECTION: 'CREATE_SECTION',\n    SECTION_CREATED: 'SECTION_CREATED',\n    UPDATE_SECTION: 'UPDATE_SECTION',\n    RESET_SECTION: 'RESET_SECTION',\n    SECTION_UPDATED: 'SECTION_UPDATED',\n    DELETE_SECTION: 'DELETE_SECTION',\n    DELETE_SITE_SECTIONS: 'DELETE_SITE_SECTIONS',\n    SECTION_DELETED: 'SECTION_DELETED',\n    ORDER_SECTIONS: 'ORDER_SECTIONS',\n    RENAME_SECTIONS_SITENAME: 'RENAME_SECTIONS_SITENAME',\n\n    SECTION_BG_DELETE: 'SECTION_BG_DELETE',\n    SECTION_BG_ORDER: 'SECTION_BG_ORDER',\n    SECTION_BG_ORDERED: 'SECTION_BG_ORDERED',\n\n    ADD_SITE_TAGS: 'ADD_SITE_TAGS',\n    ADD_SECTION_TAGS: 'ADD_SECTION_TAGS',\n    UPDATE_TAGS: 'UPDATE_TAGS',\n    RENAME_SECTION_TAGS: 'RENAME_SECTION_TAGS',\n    DELETE_SECTION_TAGS: 'DELETE_SECTION_TAGS',\n    RENAME_TAGS_SITENAME: 'RENAME_TAGS_SITENAME',\n    DELETE_SITE_TAGS: 'DELETE_SITE_TAGS',\n    SITE_TAGS_DELETED: 'SITE_TAGS_DELETED'\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n  window.Berta = window.Berta || {};\n\n  Object.assign(window.Actions, {\n    getState: function(site) {\n      site = site ? site : '0';\n      return {\n        type: ActionTypes.GET_STATE,\n        meta: {\n          remote: true,\n          url: '/_api/v1/state/' + site,\n          dispatch: 'setState'\n        }\n      };\n    },\n    setState: function(state) {\n      window.Berta['urls'] = state.urls;\n\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    createSite: function (site, onComplete) {\n      return function (dispatch, getStore) {\n\n        dispatch({ type: ActionTypes.CREATE_SITE });\n\n        sync(window.Berta.urls.site, {site: site}, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n\n              // @TODO when created site is a clone we need to clone\n              // related sections, entries, tags, settings, template settings\n\n              dispatch(Actions.siteCreated(response.site));\n              if (response.settings) {\n                dispatch(Actions.settingsCreated(response.site.name, response.settings));\n              }\n              if (response.sections && response.sections.length) {\n                for (var i = 0; i < response.sections.length; i++) {\n                  dispatch(Actions.sectionCreated(response.sections[i]));\n                }\n              }\n              /** @todo: handle entries in frontend\n              if (response.entries && response.entries.length) {\n                for (var i = 0; i < response.entries.length; i++) {\n                  dispatch(Actions.sectionCreated(response.entries[i]));\n                }\n              } */\n\n              if (response.tags && response.tags.section) {\n                dispatch(Actions.addSiteTags({\n                  site_name: response.site.name,\n                  tags: response.tags\n                }));\n              }\n\n              if (response.siteTemplateSettings) {\n                dispatch(Actions.templateSettingsCreated(response.site.name, response.siteTemplateSettings));\n              }\n            }\n            onComplete(response.site);\n          });\n      };\n    },\n\n    siteCreated: function(data) {\n      return {\n        type: ActionTypes.SITE_CREATED,\n        data: data\n      };\n    },\n\n    renameSite: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE });\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(window.Berta.urls.site, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              path = path.split('/');\n              var order = parseInt(path[1], 10);\n              var site = getStore().sites.find(function (site) {\n                return site.get('order') === order;\n              });\n\n              dispatch(Actions.siteUpdated(response));\n              dispatch(Actions.renameSectionsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameSiteTemplateSettingsSitename({\n                site: site,\n                site_name: response.value\n              }));\n              dispatch(Actions.renameTagsSitename({\n                site: site,\n                site_name: response.value\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSite: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE });\n\n        sync(window.Berta.urls.site, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteUpdated: function(resp) {\n      return {\n        type: ActionTypes.SITE_UPDATED,\n        resp: resp\n      };\n    },\n\n    deleteSite: function(site, onComplete) {\n      return function (dispatch, getStore) {\n\n        // @TODO also delete related: entries\n\n        dispatch({ type: ActionTypes.DELETE_SITE });\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.DELETE_SITE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TEMPLATE_SETTINGS });\n        dispatch({ type: ActionTypes.DELETE_SITE_TAGS });\n\n        sync(window.Berta.urls.site, {site: site}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteDeleted(response));\n              dispatch(Actions.deleteSiteSections({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTemplateSettings({\n                site_name: response.name\n              }));\n              dispatch(Actions.deleteSiteTags({\n                site_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteDeleted: function(resp) {\n      return {\n        type: ActionTypes.SITE_DELETED,\n        resp: resp\n      };\n    },\n\n    orderSites: function(sites, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.ORDER_SITES });\n\n        sync(window.Berta.urls.site, sites, 'PUT')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sitesOrdered(sites));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    sitesOrdered: function(resp) {\n      return {\n        type: ActionTypes.SITES_ORDERED,\n        resp: resp\n      };\n    }\n\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SETTINGS });\n\n        sync(window.Berta.urls.site_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.settingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    settingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    settingsCreated: function (site_name, data) {\n      return {\n        type: ActionTypes.SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_SETTINGS_DELETED,\n        data: data\n      };\n    },\n  });\n\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    updateSiteTemplateSettings: function(path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SITE_TEMPLATE_SETTINGS });\n\n        sync(window.Berta.urls.site_template_settings, { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.siteTemplateSettingsUpdated(response));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    siteTemplateSettingsUpdated: function (resp) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED,\n        resp: resp\n      };\n    },\n\n    templateSettingsCreated: function(site_name, data) {\n      return {\n        type: ActionTypes.TEMPLATE_SETTINGS_CREATED,\n        site_name: site_name,\n        data: data\n      };\n    },\n\n    renameSiteTemplateSettingsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteTemplateSettings: function (data) {\n      return {\n        type: ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED,\n        data: data\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    createSection: function(site, name, title, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.CREATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'create-section', { site: site, name: name, title: title }, 'POST')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionCreated(response.section));\n\n              if (response.tags) {\n                dispatch(Actions.addSectionTags({\n                  site_name: site,\n                  tags: response.tags\n                }));\n              }\n            }\n            onComplete(response.section);\n          });\n      };\n    },\n\n\n    sectionCreated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_CREATED,\n        resp: resp\n      };\n    },\n\n\n    renameSection: function (path, value, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.UPDATE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'update-section', { path: path, value: value })\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionUpdated(response));\n              dispatch(Actions.renameSectionTags({\n                site_name: response.site,\n                section_name: response.section.name,\n                section_old_name: response.old_name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    updateSection: function(path, value, onComplete) {\n      return {\n        type: ActionTypes.UPDATE_SECTION,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'update-section',\n          method: 'PATCH',\n          data: {path: path, value: value},\n          dispatch: 'sectionUpdated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path,\n        value: value\n      };\n    },\n    sectionUpdated: function(resp) {\n      return {\n        type: ActionTypes.SECTION_UPDATED,\n        resp: resp\n      };\n    },\n\n    renameSectionsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTIONS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSiteSections: function (data) {\n      return {\n        type: ActionTypes.DELETE_SITE_SECTIONS,\n        data: data\n      };\n    },\n\n    resetSection: function(path, onComplete) {\n      return {\n        type: ActionTypes.RESET_SECTION,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'reset-section',\n          method: 'PATCH',\n          data: {path: path},\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path\n      };\n    },\n\n    deleteSection: function(site, section, onComplete) {\n      return function (dispatch, getStore) {\n        dispatch({ type: ActionTypes.DELETE_SECTION });\n        dispatch({ type: ActionTypes.UPDATE_TAGS });\n\n        sync(API_ROOT + 'delete-section/' + encodeURIComponent(site) + '/' + encodeURIComponent(section), {}, 'DELETE')\n          .then(function (response) {\n            if (response.error_message) {\n              // @TODO dispatch error message\n            } else {\n              dispatch(Actions.sectionDeleted(response));\n\n              dispatch(Actions.deleteSectionTags({\n                site_name: response.site,\n                section_name: response.name\n              }));\n            }\n            onComplete(response);\n          });\n      };\n    },\n\n    sectionDeleted: function(resp) {\n      return {\n        type: ActionTypes.SECTION_DELETED,\n        resp: resp\n      };\n    },\n\n    orderSections: function(site, sections, onComplete) {\n      return {\n        type: ActionTypes.ORDER_SECTIONS,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'order-sections',\n          data: {\n            site: site,\n            sections: sections\n          },\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        site: site,\n        sections: sections\n      };\n    },\n    sectionBgDelete: function(site, section, file, onComplete) {\n      var url = encodeURIComponent(site) +\n            '/' + encodeURIComponent(section) +\n            '/' + encodeURIComponent(file);\n\n      return {\n        type: ActionTypes.SECTION_BG_DELETE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'section-bg-delete/' + url,\n          method: 'DELETE',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        }\n      };\n    },\n    sectionBgOrder: function(site, section, files, onComplete) {\n      return {\n        type: ActionTypes.SECTION_BG_ORDER,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'section-bg-order',\n          data: {\n            site: site,\n            section: section,\n            files: files\n          },\n          dispatch: 'sectionBgOrdered',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        site: site,\n        section: section,\n        files: files\n      };\n    },\n    sectionBgOrdered: function(resp) {\n      return {\n        type: ActionTypes.SECTION_BG_ORDERED,\n        resp: resp\n      };\n    }\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    //\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n\n    addSiteTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SITE_TAGS,\n        data: data\n      };\n    },\n\n    addSectionTags: function (data) {\n      return {\n        type: ActionTypes.ADD_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameSectionTags: function (data) {\n      return {\n        type: ActionTypes.RENAME_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    renameTagsSitename: function (data) {\n      return {\n        type: ActionTypes.RENAME_TAGS_SITENAME,\n        data: data\n      };\n    },\n\n    deleteSectionTags: function (data) {\n      return {\n        type: ActionTypes.DELETE_SECTION_TAGS,\n        data: data\n      };\n    },\n\n    deleteSiteTags: function (data) {\n      return {\n        type: ActionTypes.SITE_TAGS_DELETED,\n        data: data\n      };\n    }\n\n  });\n\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  // @TODO Remove this middleware, use `window.sync` from `utils.js` instead\n  window.redux_middleware = function (store) {\n    return function (next) {\n      return function (action) {\n        if (action && action.meta && action.meta.remote) {\n          var method =  action.meta.method ? action.meta.method : 'GET';\n\n          fetch(\n            action.meta.url,\n            {\n              method: method,\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: method === 'get' ? undefined : JSON.stringify(action.meta.data)\n            }\n          )\n            .then(checkStatus)\n            .then(function(resp) {\n              return resp.json();\n            })\n            .then(function(json) {\n              if (action.meta && action.meta.dispatch && !json.error_message) {\n                store.dispatch(Actions[action.meta.dispatch](json));\n              }\n\n              if (action.meta && action.meta.onComplete) {\n                action.meta.onComplete(json);\n              }\n            })\n            .catch(function(error) {\n              console.log('Request failed:', error);\n            });\n        }\n\n        return next(action);\n      };\n    };\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sites: function(state, action) {\n      var path, value, site, order, sites = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sites SET_STATE reducer:', action);\n          return Immutable.fromJS(action.state.sites);\n\n\n        case ActionTypes.SITE_CREATED:\n          console.log('Sites reducer:', action);\n\n          return state.set(state.size, Immutable.fromJS(action.data));\n\n\n        case ActionTypes.SITE_UPDATED:\n          console.log('Sites reducer:', action);\n          path = action.resp.path.split('/');\n          order = parseInt(path[1], 10);\n          value = action.resp.value;\n          var prop = path.slice(2);  // example \"title\" or \"@attributes/published\"\n\n          return state.map(function (site) {\n            if (site.get('order') === order && site.getIn(prop) !== value) {\n              return site.setIn(prop, value);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.SITE_DELETED:\n          console.log('Sites reducer:', action);\n\n          // Filter out deleted site\n          return state.filter(function (site) {\n            return site.get('name') !== action.resp.name;\n\n          // Update order\n          }).map(function (site, order) {\n            if (site.get('order') !== order) {\n              return site.set('order', order);\n            }\n            return site;\n          });\n\n\n        case ActionTypes.SITES_ORDERED:\n          return state.map(function (site) {\n            var name = site.get('name');\n            if (name === '') {\n              name = '0';\n            }\n            var new_order = action.resp.indexOf(name);\n\n            if (site.get('order') !== new_order) {\n              return site.set('order', new_order);\n            }\n            return site;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site settings reducer:', action);\n          return Immutable.fromJS(action.state.site_settings);\n\n\n        case ActionTypes.SETTINGS_UPDATED:\n          console.log('Settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1]],\n            value\n          );\n\n\n        case ActionTypes.SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_SETTINGS_DELETED:\n          return state.filter(function (settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    site_template_settings: function (state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Site template settings reducer:', action);\n          return Immutable.fromJS(action.state.site_template_settings);\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_UPDATED:\n          console.log('Template settings reducer:', action);\n\n          var path = action.resp.path.split('/').slice(2);\n          var value = action.resp.value;\n\n          return state.setIn(\n            [action.resp.site, path[0], path[1], path[2]],\n            value\n          );\n\n\n        case ActionTypes.TEMPLATE_SETTINGS_CREATED:\n          return state.setIn([action.site_name], Immutable.fromJS(action.data));\n\n\n        case ActionTypes.RENAME_SITE_TEMPLATE_SETTINGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TEMPLATE_SETTINGS_DELETED:\n          return state.filter(function (site_template_settings, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    template_settings: function(state, action) {\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Template settings reducer:', action);\n          return Immutable.fromJS(action.state.template_settings);\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    sections: function(state, action) {\n      var path,\n          site_name,\n          order,\n          prop,\n          value,\n          section,\n          section_idx,\n          sections = [],\n          files = [],\n          new_files = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Sections reducer:', action);\n          return Immutable.fromJS(action.state.sections);\n\n\n        case ActionTypes.SECTION_CREATED:\n          return state.set(state.size, Immutable.fromJS(action.resp));\n\n\n        case ActionTypes.RENAME_SECTIONS_SITENAME:\n          var old_name = action.data.site.get('name');\n          value = action.data.site_name;\n\n          return state.map(function (section) {\n            if (section.get('site_name') === old_name) {\n              return section.set('site_name', value);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_UPDATED:\n          console.log('Sections reducer:', action);\n          path = action.resp.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          value = action.resp.value;\n          prop = path.slice(3);  // \"title\" or \"@attributes/published\"\n\n          // @TODO also update section relations if name changed\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order && section.getIn(prop) !== value) {\n              return section.merge(action.resp.section);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.RESET_SECTION:\n          console.log('Sections reducer:', action);\n          path = action.path.split('/');\n          site_name = path[0] === '0' ? '' : path[0];\n          order = parseInt(path[2], 10);\n          prop = path.slice(3);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === site_name && section.get('order') === order) {\n              return section.deleteIn(prop);\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_DELETED:\n          console.log('Sections reducer:', action, state);\n\n          // @TODO delete related data from state\n\n          site_name = action.resp.site === '0' ? '' : action.resp.site;\n          order = -1;\n\n          return state.filter(function (section) {\n            return !(section.get('name') === action.resp.name && section.get('site_name') === site_name);\n\n          // Update order\n          }).map(function (section) {\n            if (section.get('site_name') === site_name) {\n              order++;\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.DELETE_SITE_SECTIONS:\n          return state.filter(function (section) {\n            return section.get('site_name') !== action.data.site_name;\n          });\n\n\n        case ActionTypes.ORDER_SECTIONS:\n          console.log('Sections reducer:', action);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === action.site) {\n              var order = action.sections.indexOf(section.get('name'));\n\n              if (section.get('order') !== order) {\n                return section.set('order', order);\n              }\n            }\n            return section;\n          });\n\n\n        case ActionTypes.SECTION_BG_ORDERED:\n          console.log('Sections reducer:', action);\n\n          return state.map(function (section) {\n            if (section.get('site_name') === action.resp.site && section.get('name') === action.resp.section) {\n\n              return section\n                .set('mediafolder', action.resp.mediafolder)\n                .setIn(['mediaCacheData', 'file'], action.resp.files);\n            }\n            return section;\n          });\n\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    entries: function(state, action) {\n      var entry, entries = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n\n        case ActionTypes.SET_STATE:\n          console.log('Entries reducer:', action);\n          return Immutable.fromJS(action.state.entries);\n\n        // case ActionTypes.SECTION_CREATED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   entries[action.resp.section.name] = action.resp.entries;\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     console.log('Entries reducer:', action);\n        //     entries = state.getIn([action.resp.site]).toJSON();\n\n        //     if (entries.length) {\n        //       entry = entries[action.resp.old_name];\n        //       entry['@attributes'].section = action.resp.section.name;\n        //       entries[action.resp.section.name] = entry;\n        //       delete entries[action.resp.old_name];\n        //     }\n\n        //     return state.setIn([action.resp.site], Immutable.fromJS(entries));\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   console.log('Entries reducer:', action);\n        //   entries = state.getIn([action.resp.site]).toJSON();\n        //   delete entries[action.resp.name];\n\n        //   return state.setIn([action.resp.site], Immutable.fromJS(entries));\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducers = window.reducers || {};\n\n  Object.assign(window.reducers, {\n    tags: function(state, action) {\n      var tag_idx, tags, site_name = [];\n\n      if (state === undefined) {\n        state = Immutable.Map();\n      }\n\n      switch (action.type) {\n        case ActionTypes.SET_STATE:\n          console.log('Tags reducer:', action);\n\n          return Immutable.fromJS(action.state.tags);\n\n\n        case ActionTypes.ADD_SITE_TAGS:\n          return state.set(action.data.site_name, action.data.tags);\n\n\n        case ActionTypes.ADD_SECTION_TAGS:\n          site_name = action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.set(sections.size, Immutable.fromJS(action.data.tags));\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.map(function (section) {\n\n                  if (section.getIn(['@attributes', 'name']) === action.data.section_old_name) {\n\n                    return section.setIn(\n                      ['@attributes', 'name'],\n                      action.data.section_name\n                    );\n                  }\n                  return section;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.DELETE_SECTION_TAGS:\n          site_name = action.data.site_name === '0' ? '' : action.data.site_name;\n\n          return state.map(function (site, k) {\n            if (site_name === k) {\n              return site.map(function (sections) {\n                return sections.filter(function (section) {\n                  return section.getIn(['@attributes', 'name']) !== action.data.section_name;\n                });\n              });\n            }\n            return site;\n          });\n\n\n        case ActionTypes.RENAME_TAGS_SITENAME:\n          var section_old_name = action.data.site.get('name');\n\n          return state.mapKeys(function (k) {\n            if (k === section_old_name) {\n              return action.data.site_name;\n            }\n            return k;\n          });\n\n\n        case ActionTypes.SITE_TAGS_DELETED:\n          return state.filter(function (tags, site_name) {\n            return site_name !== action.data.site_name;\n          });\n\n\n        // case ActionTypes.SECTION_CREATED:\n        //   tags = state.getIn([action.resp.site, 'section']).toJSON();\n\n        //   if (action.resp.tags.len > 0) {\n        //     console.log('Tags reducer:', action);\n        //     tags.push(action.resp.tags);\n\n        //     return state.setIn(\n        //       [action.resp.site, 'section'],\n        //       Immutable.fromJS(tags)\n        //     );\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_UPDATED:\n        //   if (action.resp.old_name) {\n        //     tags = state.getIn([action.resp.site, 'section']).toJSON();\n        //     tag_idx = tags.findIndex(function (tag, idx) {\n        //       return tag['@attributes'].name === action.resp.old_name;\n        //     });\n\n        //     if (tag_idx > -1) {\n        //       console.log('Tags reducer:', action);\n        //       tags[tag_idx]['@attributes'].name = action.resp.section.name;\n\n        //       return state.setIn(\n        //         [action.resp.site, 'section'],\n        //         Immutable.fromJS(tags)\n        //       );\n        //     }\n        //   }\n\n        //   return state;\n\n        // case ActionTypes.SECTION_DELETED:\n        //   tags = state.getIn([action.resp.site, 'section']).toJSON();\n        //   tag_idx = tags.findIndex(function (tag, idx) {\n        //     return tag['@attributes'].name === action.resp.name;\n        //   });\n\n        //   if (tag_idx > -1) {\n        //     console.log('Tags reducer:', action);\n        //     tags.splice(tag_idx, 1);\n\n        //     return state.setIn(\n        //       [action.resp.site, 'section'],\n        //       Immutable.fromJS(tags)\n        //     );\n        //   }\n\n        //   return state;\n\n        default:\n          return state;\n      }\n    }\n  });\n})(window, document);\n","(function (window, document) {\n  'use strict';\n\n  domReady(Templates.load);\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n  window.redux_store = Redux.createStore(\n    root_reducer,\n    {},\n    composeEnhancers(\n      Redux.applyMiddleware(redux_middleware, ReduxThunk.default)\n    )\n  );\n\n  var site = getCurrentSite();\n  redux_store.dispatch(Actions.getState(site));\n\n})(window, document);\n"]}